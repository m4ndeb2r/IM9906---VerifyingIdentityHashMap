\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Fri Sep 24 15:29:23 CEST 2021
[SMTSettings]maxGenericSorts=2
[SMTSettings]instantiateHierarchyAssumptions=true
[SMTSettings]UseBuiltUniqueness=false
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[Strategy]Timeout=-1
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[Choice]DefaultChoices=JavaCard-JavaCard\\:off , Strings-Strings\\:on , assertions-assertions\\:safe , bigint-bigint\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , integerSimplificationRules-integerSimplificationRules\\:full , javaLoopTreatment-javaLoopTreatment\\:efficient , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly , modelFields-modelFields\\:treatAsAxiom , moreSeqRules-moreSeqRules\\:off , permissions-permissions\\:off , programRules-programRules\\:Java , reach-reach\\:on , runtimeExceptions-runtimeExceptions\\:ban , sequences-sequences\\:on , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Labels]UseOriginLabels=true
[SMTSettings]integersMaximum=2147483645
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[Strategy]MaximumNumberOfAutomaticApplications=7000
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[SMTSettings]SelectedTaclets=
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_COMPLETION
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_SCOPE_INV_TACLET
[SMTSettings]explicitTypeHierarchy=false
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
"
}

\bootclasspath "../../../../jre";

\javaSource "../../../../src";

\include "../../../../functions.key";

\proofObligation "#Proof Obligation Settings
#Fri Sep 24 15:29:23 CEST 2021
name=java.util.VerifiedIdentityHashMap[java.util.VerifiedIdentityHashMap\\:\\:containsKey(java.lang.Object)].JML normal_behavior operation contract.0
contract=java.util.VerifiedIdentityHashMap[java.util.VerifiedIdentityHashMap\\:\\:containsKey(java.lang.Object)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "mattias" ) (keyVersion "a587ae6"))
(keyLog "1" (keyUser "mattias" ) (keyVersion "a587ae6"))
(keyLog "2" (keyUser "mattias" ) (keyVersion "a587ae6"))
(keyLog "3" (keyUser "mattias" ) (keyVersion "a587ae6"))
(keyLog "4" (keyUser "mattias" ) (keyVersion "a587ae6"))
(keyLog "5" (keyUser "mattias" ) (keyVersion "a587ae6"))
(keyLog "6" (keyUser "mattias" ) (keyVersion "a587ae6"))
(keyLog "7" (keyUser "mattias" ) (keyVersion "a587ae6"))

(autoModeTime "1156006")

(branch "dummy ID"
(rule "impRight" (formula "1") (newnames "key,self,result,exc,heapAtPre,o,f"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "5"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "hide_left" (formula "6") (userinteraction))
(rule "insert_hidden_taclet_0" (userinteraction))
(rule "eqSymm" (formula "9") (term "0,0,0,0,1"))
(rule "eqSymm" (formula "9") (term "0,0,1,0,1"))
(rule "replace_known_right" (formula "5") (term "0") (ifseqformula "8"))
 (builtin "One Step Simplification" (formula "5"))
(rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,0,0,0,0,0,0,1"))
(rule "assignment" (formula "9") (term "1"))
 (builtin "One Step Simplification" (formula "9"))
(rule "Class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "1") (inst "i=i") (inst "j=j") (inst "i_0=i_0") (inst "j_0=j_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3") (inst "i_4=i_4") (inst "j_1=j_1") (inst "i_5=i_5") (ifseqformula "4"))
 (builtin "One Step Simplification" (formula "1"))
(rule "mul_literals" (formula "1") (term "0,1,1,0,0,0,0,0,0,0,0,0"))
(rule "mul_literals" (formula "1") (term "0,1,0,1,0,0,0,0,0,0,0,0,0"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "1"))
(rule "exLeft" (formula "8") (inst "sk=i_1_0"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "8"))
(rule "exLeft" (formula "7") (inst "sk=i_2_0"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "7"))
(rule "eqSymm" (formula "6"))
(rule "eqSymm" (formula "4") (term "1,1,0,1,0"))
(rule "eqSymm" (formula "4") (term "1,0,1,0,1,0"))
(rule "eqSymm" (formula "9"))
(rule "polySimp_mulComm0" (formula "14") (term "0,2,0,1,1,0,1,0"))
(rule "polySimp_mulComm0" (formula "14") (term "0,1,1,0,0,1,1,0"))
(rule "polySimp_mulComm0" (formula "14") (term "1,0,1,0,0,1,1,0"))
(rule "polySimp_mulComm0" (formula "14") (term "0,2,0,0,0,0,1,0"))
(rule "polySimp_mulComm0" (formula "14") (term "0,1,0,1,0"))
(rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,1,1,0"))
(rule "polySimp_mulComm0" (formula "14") (term "0,1,0,0,0,1,1,0"))
(rule "polySimp_mulComm0" (formula "14") (term "1,1,1,0,0,1,1,0"))
(rule "polySimp_mulComm0" (formula "14") (term "0,2,0,0,0,0,0,0,1,1,0"))
(rule "polySimp_mulComm0" (formula "14") (term "0,2,0,0,1,0,1,1,0"))
(rule "polySimp_mulComm0" (formula "13") (term "0,2,0,0,0,0,1,0"))
(rule "polySimp_mulComm0" (formula "13") (term "0,1,0,1,0"))
(rule "polySimp_mulComm0" (formula "13") (term "0,2,0,0,0,0,0,0,1,1,0"))
(rule "polySimp_mulComm0" (formula "13") (term "0,2,0,1,1,0,1,0"))
(rule "polySimp_mulComm0" (formula "13") (term "0,2,0,0,1,0,1,1,0"))
(rule "polySimp_mulComm0" (formula "4") (term "0,2,0,0,0,0,1,0,1,0"))
(rule "polySimp_mulComm0" (formula "12") (term "0,2,0"))
(rule "polySimp_mulComm0" (formula "6") (term "0,2,0,0,0,2,0"))
(rule "polySimp_mulComm0" (formula "4") (term "0,2,1,1,0,1,0,1,0"))
(rule "polySimp_mulComm0" (formula "4") (term "0,2,0,1,0,1,0,1,0"))
(rule "polySimp_addComm0" (formula "3") (term "0,2,0,1,1,0"))
(rule "ifthenelse_negated" (formula "6") (term "2,0"))
(rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "4") (term "0,0,0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "4") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0"))
(rule "inEqSimp_commuteGeq" (formula "2"))
(rule "inEqSimp_commuteLeq" (formula "1"))
(rule "inEqSimp_commuteLeq" (formula "10"))
(rule "inEqSimp_commuteLeq" (formula "7"))
(rule "inEqSimp_commuteLeq" (formula "14") (term "0,1,0,0,1,1,0"))
(rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,0,1,1,0"))
(rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,1,1,0"))
(rule "applyEq" (formula "14") (term "0,1,1,0,0") (ifseqformula "9"))
(rule "applyEq" (formula "4") (term "0,1,1,0,0") (ifseqformula "9"))
(rule "applyEq" (formula "13") (term "0,1,1,0,0") (ifseqformula "9"))
(rule "applyEq" (formula "11") (term "0,1") (ifseqformula "9"))
(rule "applyEq" (formula "3") (term "0,1,1,0,0") (ifseqformula "9"))
(rule "applyEq" (formula "2") (term "0") (ifseqformula "9"))
(rule "applyEq" (formula "8") (term "1") (ifseqformula "9"))
(rule "applyEq" (formula "13") (term "1,1,1,0,1,0") (ifseqformula "9"))
(rule "applyEq" (formula "14") (term "1,1,0,0,0,0,1,1,0") (ifseqformula "9"))
(rule "applyEq" (formula "13") (term "1,0,1,0,0,0,1,1,0") (ifseqformula "9"))
(rule "applyEq" (formula "1") (term "0") (ifseqformula "9"))
(rule "applyEq" (formula "4") (term "0,1,1,0,0,1,0") (ifseqformula "9"))
(rule "applyEq" (formula "14") (term "1,1,1,0,1,0") (ifseqformula "9"))
(rule "applyEq" (formula "6") (term "0,1,0") (ifseqformula "9"))
(rule "applyEq" (formula "14") (term "1,1,0,0,0,1,1,0") (ifseqformula "9"))
(rule "commute_and" (formula "14") (term "0,0"))
(rule "commute_and" (formula "4") (term "0,0"))
(rule "commute_and" (formula "13") (term "0,0"))
(rule "commute_and" (formula "3") (term "0,0"))
(rule "methodBodyExpand" (formula "25") (term "1") (newnames "heapBefore_containsKey,savedHeapBefore_containsKey,_keyBefore_containsKey"))
 (builtin "One Step Simplification" (formula "25"))
(rule "variableDeclarationAssign" (formula "25") (term "1"))
(rule "variableDeclaration" (formula "25") (term "1") (newnames "k"))
(rule "commute_and" (formula "4") (term "0,0,1,0"))
(rule "commute_and" (formula "13") (term "0,0,1,1,0"))
(rule "commute_and" (formula "14") (term "1,0,0,1,1,0"))
(rule "commute_and" (formula "14") (term "0,0,0,1,1,0"))
(rule "cnf_rightDist" (formula "14") (term "0,0,1,1,0"))
(rule "commute_or" (formula "14") (term "0,0,0,1,1,0"))
(rule "cnf_rightDist" (formula "14") (term "1,0,0,1,1,0"))
(rule "commute_or" (formula "14") (term "0,1,0,0,1,1,0"))
(rule "commute_or" (formula "14") (term "1,1,0,0,1,1,0"))
(rule "cnf_rightDist" (formula "14") (term "0,0,0,1,1,0"))
(rule "commute_or" (formula "14") (term "0,0,0,0,1,1,0"))
(rule "commute_or" (formula "14") (term "1,0,0,0,1,1,0"))
(rule "shift_paren_and" (formula "14") (term "0,0,1,1,0"))
 (builtin "Use Operation Contract" (formula "25") (newnames "heapBefore_maskNull,result_0,exc_0") (contract "java.util.VerifiedIdentityHashMap[java.util.VerifiedIdentityHashMap::maskNull(java.lang.Object)].JML normal_behavior operation contract.0"))
(branch "Post (maskNull)"
    (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "25")) (ifInst ""  (formula "25")))
    (builtin "One Step Simplification" (formula "26"))
   (rule "andLeft" (formula "21"))
   (rule "andLeft" (formula "22"))
   (rule "andLeft" (formula "21"))
   (rule "andLeft" (formula "22"))
   (rule "andLeft" (formula "23"))
   (rule "notLeft" (formula "24"))
   (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "25"))
    (builtin "One Step Simplification" (formula "21"))
   (rule "assignment" (formula "30") (term "1"))
    (builtin "One Step Simplification" (formula "30"))
   (rule "variableDeclarationAssign" (formula "30") (term "1"))
   (rule "variableDeclaration" (formula "30") (term "1") (newnames "tab"))
   (rule "assignment_read_attribute_this" (formula "30"))
    (builtin "One Step Simplification" (formula "30"))
   (rule "variableDeclarationAssign" (formula "30") (term "1"))
   (rule "variableDeclaration" (formula "30") (term "1") (newnames "len"))
   (rule "assignment_read_length" (formula "30"))
   (branch "Normal Execution (tab != null)"
       (builtin "One Step Simplification" (formula "30"))
      (rule "variableDeclarationAssign" (formula "30") (term "1"))
      (rule "variableDeclaration" (formula "30") (term "1") (newnames "i"))
      (rule "applyEq" (formula "25") (term "0") (ifseqformula "22"))
      (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "22"))
      (rule "applyEq" (formula "28") (term "0,1,0") (ifseqformula "9"))
      (rule "applyEq" (formula "28") (term "0,1,0,0,0") (ifseqformula "21"))
      (rule "Static_class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "22"))
      (rule "notLeft" (formula "22"))
       (builtin "Use Operation Contract" (formula "27") (newnames "heapBefore_hash,result_1,exc_1") (contract "java.util.VerifiedIdentityHashMap[java.util.VerifiedIdentityHashMap::hash(java.lang.Object,int)].JML normal_behavior operation contract.0"))
      (branch "Post (hash)"
          (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "27")))
         (rule "translateJavaMod" (formula "23") (term "0,1,0,0,0,0,1"))
         (rule "andLeft" (formula "23"))
         (rule "andLeft" (formula "24"))
         (rule "andLeft" (formula "24"))
         (rule "andLeft" (formula "24"))
         (rule "andLeft" (formula "24"))
         (rule "andLeft" (formula "24"))
         (rule "eqSymm" (formula "24"))
         (rule "assignment" (formula "33") (term "1"))
          (builtin "One Step Simplification" (formula "33"))
         (rule "variableDeclarationGhostAssign" (formula "33") (term "1"))
         (rule "variableDeclarationGhost" (formula "33") (term "1") (newnames "hash"))
         (rule "assignment" (formula "33") (term "1"))
          (builtin "One Step Simplification" (formula "33"))
         (rule "Static_class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "28"))
         (rule "notLeft" (formula "28"))
         (rule "arrayLengthIsAnInt" (formula "9") (term "0"))
          (builtin "One Step Simplification" (formula "9"))
         (rule "true_left" (formula "9"))
         (rule "arrayLengthNotNegative" (formula "9") (term "0"))
         (rule "applyEq" (formula "9") (term "0") (ifseqformula "10"))
         (rule "loopScopeInvDia" (formula "33") (term "1") (newnames "i_0,o,f") (inst "#x=x_1") (inst "#variant=x") (inst "#permissionsBefore_LOOP=h_2") (inst "#savedHeapBefore_LOOP=h_1") (inst "#heapBefore_LOOP=h") (inst "anon_permissions_LOOP=anon_permissions_LOOP_0") (inst "anon_savedHeap_LOOP=anon_savedHeap_LOOP_0") (inst "anon_heap_LOOP=anon_heap_LOOP_0"))
         (branch "Invariant Initially Valid"
            (rule "andRight" (formula "33"))
            (branch "Case 1"
               (rule "andRight" (formula "33"))
               (branch "Case 1"
                  (rule "andRight" (formula "33"))
                  (branch "Case 1"
                     (rule "andRight" (formula "33"))
                     (branch "Case 1"
                         (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "28")))
                        (rule "closeTrue" (formula "33"))
                     )
                     (branch "Case 2"
                         (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "27")))
                        (rule "closeTrue" (formula "33"))
                     )
                  )
                  (branch "Case 2"
                      (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "26")))
                     (rule "closeTrue" (formula "33"))
                  )
               )
               (branch "Case 2"
                  (rule "impRight" (formula "33"))
                   (builtin "One Step Simplification" (formula "1"))
                   (builtin "One Step Simplification" (formula "34"))
                  (rule "irrflConcrete2" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
            )
            (branch "Case 2"
               (rule "impRight" (formula "33"))
               (rule "andRight" (formula "34"))
               (branch "Case 1"
                   (builtin "One Step Simplification" (formula "1"))
                   (builtin "One Step Simplification" (formula "34"))
                  (rule "irrflConcrete1" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
               (branch "Case 2"
                   (builtin "One Step Simplification" (formula "1"))
                   (builtin "One Step Simplification" (formula "34"))
                  (rule "irrflConcrete1" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
            )
         )
         (branch "Invariant Preserved and Used"
             (builtin "One Step Simplification" (formula "34"))
            (rule "impRight" (formula "34"))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "eqSymm" (formula "39") (term "0,0,1,0,1,1,0,1"))
            (rule "polySimp_elimSub" (formula "39") (term "2,0,1,1,1,0,1"))
            (rule "polySimp_elimSub" (formula "39") (term "1,0,1,1,1,0,1"))
            (rule "polySimp_elimSub" (formula "39") (term "2,0,1,1,0"))
            (rule "polySimp_elimSub" (formula "39") (term "1,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "39") (term "0,1,0,0,0,1,1,0,0,1,1,0,1"))
            (rule "polySimp_mulComm0" (formula "39") (term "0,2,0,0,1,1,0,1,1,0,0,0,1,1,0,1"))
            (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,1,1,0,0,1,1,0,1"))
            (rule "polySimp_mulComm0" (formula "39") (term "0,2,0,0,1,1,0,1,1,1,0,0,1,1,0,1"))
            (rule "polySimp_mulComm0" (formula "5") (term "0,2,0,0,0,1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "39") (term "0,2,0,0,0,1,0,1,1,1,0,0,1,1,0,1"))
            (rule "polySimp_mulComm0" (formula "39") (term "0,1,0,0,1,1,1,0,0,1,1,0,1"))
            (rule "polySimp_mulComm0" (formula "39") (term "0,1,0,0,1,1,0,0,0,1,1,0,1"))
            (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,1,1,0,0,0,1,1,0,1"))
            (rule "polySimp_mulComm0" (formula "39") (term "0,2,0,0,0,1,0,0,1,1,0,0,1,1,0,1"))
            (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,1,1,1,0,0,1,1,0,1"))
            (rule "polySimp_mulComm0" (formula "39") (term "0,2,0,0,1,1,0,0,1,1,0,0,1,1,0,1"))
            (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,1"))
            (rule "polySimp_mulComm0" (formula "39") (term "0,2,0,0,0,1,0,1,1,0,0,0,1,1,0,1"))
            (rule "polySimp_mulComm0" (formula "5") (term "0,1,0,0,1,1"))
            (rule "polySimp_mulComm0" (formula "5") (term "0,2,0,0,1,1,0,1,1"))
            (rule "polySimp_mulComm0" (formula "5") (term "0,2,0,0,1,1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "5") (term "0,1,0,0,0,1"))
            (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,1"))
            (rule "polySimp_mulComm0" (formula "4") (term "0,2,0,0,0,1,0,1"))
            (rule "polySimp_mulComm0" (formula "4") (term "0,2,0,0,1,1,0,1"))
            (rule "polySimp_mulComm0" (formula "4") (term "0,1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "5") (term "0,2,0,0,0,1,0,1,1"))
            (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,1,1"))
            (rule "polySimp_addComm1" (formula "39") (term "2,0,1,1,1,0,1"))
            (rule "polySimp_addComm1" (formula "39") (term "2,0,1,1,0"))
            (rule "polySimp_addComm0" (formula "39") (term "1,0,1,1,0"))
            (rule "polySimp_addComm0" (formula "39") (term "0,2,0,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0,0,1,1,0,0,1,1,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0,1,1,0,0,0,1,1,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0,1,1,1,0,0,1,1,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "5") (term "0,0,0,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "4") (term "0,0,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "5") (term "0,0,0,1,1"))
            (rule "variableDeclaration" (formula "39") (term "1") (newnames "x_1"))
            (rule "commute_and" (formula "4") (term "1,0,1"))
            (rule "commute_and" (formula "4") (term "0,0,1"))
            (rule "commute_and" (formula "5") (term "1,0,0,1"))
            (rule "commute_and" (formula "5") (term "1,0,1,1"))
            (rule "commute_and" (formula "5") (term "0,0,0,1"))
            (rule "commute_and" (formula "5") (term "0,0,1,1"))
            (rule "commute_and_2" (formula "21") (term "0,0,1,1,0"))
            (rule "ifElseSplit" (formula "39"))
            (branch "if true true"
                (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "variableDeclarationAssign" (formula "39") (term "1"))
               (rule "variableDeclaration" (formula "39") (term "1") (newnames "item"))
               (rule "assignment_array2" (formula "39"))
               (branch "Normal Execution (tab != null)"
                   (builtin "One Step Simplification" (formula "39"))
                  (rule "ifUnfold" (formula "39") (term "1") (inst "#boolv=x_2"))
                  (rule "variableDeclaration" (formula "39") (term "1") (newnames "x_2"))
                  (rule "equality_comparison_simple" (formula "39") (term "1"))
                   (builtin "One Step Simplification" (formula "39"))
                  (rule "arrayLengthIsAnInt" (formula "16") (term "0"))
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "true_left" (formula "16"))
                  (rule "arrayLengthNotNegative" (formula "16") (term "0"))
                  (rule "ifSplit" (formula "40"))
                  (branch "if x_2 true"
                      (builtin "One Step Simplification" (formula "41"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "blockReturn" (formula "41") (term "1"))
                      (builtin "One Step Simplification" (formula "41"))
                     (rule "lsReturnNonVoid" (formula "41") (term "1"))
                     (rule "assignment" (formula "41") (term "1"))
                      (builtin "One Step Simplification" (formula "41"))
                     (rule "methodCallReturn" (formula "41") (term "1"))
                     (rule "assignment" (formula "41") (term "1"))
                      (builtin "One Step Simplification" (formula "41"))
                     (rule "methodCallEmpty" (formula "41") (term "1"))
                     (rule "tryEmpty" (formula "41") (term "1"))
                     (rule "emptyModality" (formula "41") (term "1"))
                     (rule "andRight" (formula "41"))
                     (branch "Case 1"
                        (rule "impRight" (formula "41"))
                        (rule "andRight" (formula "42"))
                        (branch "Case 1"
                           (rule "andRight" (formula "42"))
                           (branch "Case 1"
                              (rule "andRight" (formula "42"))
                              (branch "Case 1"
                                  (builtin "One Step Simplification" (formula "42"))
                                 (rule "exRightHide" (formula "42") (inst "t=div(i_0, Z(2(#)))") (userinteraction))
                                 (rule "eqTermCut" (formula "42") (term "0,2,0,1") (inst "s=i_0") (userinteraction))
                                 (branch "Assume i_0 / 2 * 2 = i_0"
                                    (rule "eqTermCut" (formula "43") (term "1,1") (inst "s=key") (userinteraction))
                                    (branch "Assume java.util.VerifiedIdentityHashMap.maskNull(key) = key"
                                       (rule "applyEq" (formula "44") (term "1,1") (ifseqformula "1") (userinteraction))
                                       (rule "applyEq" (formula "44") (term "0,2,0,1") (ifseqformula "2") (userinteraction))
                                       (rule "replace_known_left" (formula "44") (term "1") (ifseqformula "4") (userinteraction))
                                        (builtin "One Step Simplification" (formula "44"))
                                       (rule "applyEq" (formula "44") (term "0,1,1") (ifseqformula "21") (userinteraction))
                                       (rule "jdiv_axiom_inline" (formula "44") (term "1,1") (userinteraction))
                                       (rule "ifthenelse_split" (formula "44") (term "1,1") (userinteraction))
                                       (branch "pow(2, i_2_0) >= 0 TRUE"
                                          (rule "cut" (inst "cutFormula=(  mod(length(java.lang.Object[]::select(heap,
                                         self,
                                         java.util.VerifiedIdentityHashMap::$table)),
       Z(2(#)))
 = Z(0(#)))<<origin(\"User_Interaction @ node 34553 (cut)\",\"[]\")>>") (userinteraction))
                                          (branch "CUT: self.table.length % 2 = 0 TRUE"
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "true_left" (formula "4"))
                                             (rule "inEqSimp_gtToGeq" (formula "8") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "38"))
                                             (rule "polySimp_mulComm0" (formula "38") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "38") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0,1"))
                                             (rule "inEqSimp_ltToLeq" (formula "9") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_gtToGeq" (formula "25") (term "1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "25") (term "0,1,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "18"))
                                             (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "18") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "26") (term "0,1,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,1,1"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,1,1"))
                                             (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulAssoc" (formula "26") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "23"))
                                             (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "23") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,0,1"))
                                             (rule "inEqSimp_ltToLeq" (formula "26") (term "0,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulAssoc" (formula "26") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "0,1,0,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "26") (term "0,1,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,1,0,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "15"))
                                             (rule "mul_literals" (formula "15") (term "1,0,0"))
                                             (rule "add_literals" (formula "15") (term "0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "44") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1"))
                                             (rule "polySimp_addComm1" (formula "44") (term "0,1"))
                                             (rule "inEqSimp_ltToLeq" (formula "6"))
                                             (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "6") (term "0"))
                                             (rule "applyEq" (formula "20") (term "0") (ifseqformula "21"))
                                             (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "20"))
                                             (rule "jmod_axiom" (formula "36") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "36") (term "1,0"))
                                             (rule "jmod_axiom" (formula "7") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,0"))
                                             (rule "mod_axiom" (formula "1") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                                             (rule "Query_axiom_for_maskNull_java_lang_Object__in_java_util_VerifiedIdentityHashMap" (formula "2") (term "0") (inst "maskNull_sk=maskNull_sk_0") (inst "#p0=o_1") (inst "#res=o"))
                                             (rule "eqSymm" (formula "2") (term "1,0,1"))
                                             (rule "polySimp_sepNegMonomial" (formula "37"))
                                             (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                                             (rule "polySimp_sepNegMonomial" (formula "8"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                             (rule "polySimp_sepNegMonomial" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "9") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "9") (term "0,0"))
                                             (rule "polySimp_elimOne" (formula "9") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "38"))
                                             (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                                             (rule "polySimp_elimOne" (formula "38") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "15") (term "0,1,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,1"))
                                             (rule "mul_literals" (formula "9") (term "0,1,0,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,1"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "0,0"))
                                             (rule "polySimp_elimOne" (formula "10") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "25") (term "0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "25") (term "1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "0,1,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "25") (term "0,1,0,1,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "19"))
                                             (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                             (rule "polySimp_elimOne" (formula "19") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "26") (term "0,1,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,1,1"))
                                             (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,1,1"))
                                             (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,1,1"))
                                             (rule "mul_literals" (formula "10") (term "0,1,0,0,0,1,1"))
                                             (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "26") (term "0,1,1,0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "23"))
                                             (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                             (rule "polySimp_elimOne" (formula "23") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,0,1"))
                                             (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,0,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "26") (term "1,0,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,1,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "26") (term "0,1,0,1,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,1,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,0,1,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "26") (term "1,0,1,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,1,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "26") (term "0,1,0,1,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "26") (term "1,1,0,1,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "16"))
                                             (rule "mul_literals" (formula "16") (term "1"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "44") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "44") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "44") (term "0,1"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                             (rule "polySimp_elimOne" (formula "7") (term "0"))
                                             (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "12"))
                                             (rule "leq_literals" (formula "20") (term "0"))
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "true_left" (formula "20"))
                                             (rule "polyDiv_pullOut" (formula "43") (term "1,1,1") (inst "polyDivCoeff=jdiv(i_0, Z(2(#)))"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,2,1,1,1"))
                                             (rule "equal_literals" (formula "43") (term "0,1,1,1"))
                                              (builtin "One Step Simplification" (formula "43"))
                                             (rule "polySimp_addComm0" (formula "43") (term "1,1,1"))
                                             (rule "polySimp_addAssoc" (formula "43") (term "1,1"))
                                             (rule "elimGcdLeq" (formula "25") (term "0,1,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "25") (term "0,0,0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "sub_literals" (formula "25") (term "0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "25") (term "1,1,0,1,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "25") (term "1,0,1,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "25") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "25") (term "1,1,0,0,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "25") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "25") (term "0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "25") (term "0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "25") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_addComm1" (formula "25") (term "0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "25") (term "0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "25") (term "1,1,0,1,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "25") (term "1,0,1,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "25") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "qeq_literals" (formula "25") (term "1,0,0,1,0,0,0,0,1,1,0"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "25") (term "0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "25") (term "0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "add_zero_left" (formula "25") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "25") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "25") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "25") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "leq_literals" (formula "25") (term "0,0,1,0,0,0,0,1,1,0"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "elimGcdGeq" (formula "10") (term "1,0,0,1,1") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=m") (inst "elimGcd=Z(2(#))"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,1,0,0,1,1"))
                                             (rule "add_zero_right" (formula "10") (term "0,0,0,1,0,1,0,0,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,1,0,0,1,1"))
                                             (rule "add_zero_right" (formula "10") (term "0,0,0,0,0,1,0,0,1,1"))
                                             (rule "times_zero_1" (formula "10") (term "0,0,0,1,0,1,0,0,1,1"))
                                             (rule "sub_literals" (formula "10") (term "0,0,0,0,0,0,1,0,0,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0,0,1,0,0,1,1"))
                                             (rule "add_zero_left" (formula "10") (term "0,0,1,0,1,0,0,1,1"))
                                             (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0,1,0,0,1,1"))
                                             (rule "add_zero_right" (formula "10") (term "0,0,0,0,0,1,0,0,1,1"))
                                             (rule "polySimp_pullOutFactor0" (formula "10") (term "0,1,0,1,0,0,1,1"))
                                             (rule "add_literals" (formula "10") (term "1,0,1,0,1,0,0,1,1"))
                                             (rule "times_zero_1" (formula "10") (term "0,1,0,1,0,0,1,1"))
                                             (rule "leq_literals" (formula "10") (term "1,0,1,0,0,1,1"))
                                              (builtin "One Step Simplification" (formula "10"))
                                             (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0,1,0,0,1,1"))
                                             (rule "add_literals" (formula "10") (term "1,1,0,0,1,0,0,1,1"))
                                             (rule "times_zero_1" (formula "10") (term "1,0,0,1,0,0,1,1"))
                                             (rule "add_literals" (formula "10") (term "0,0,1,0,0,1,1"))
                                             (rule "qeq_literals" (formula "10") (term "0,1,0,0,1,1"))
                                              (builtin "One Step Simplification" (formula "10"))
                                             (rule "elimGcdGeq" (formula "25") (term "0,1,0,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "25") (term "0,0,0,1,0,0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0,0,1,0,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "25") (term "0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "25") (term "0,0,0,1,0,0,1,0,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                             (rule "sub_literals" (formula "25") (term "0,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                             (rule "add_zero_left" (formula "25") (term "0,0,1,0,0,1,0,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "25") (term "0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "25") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "25") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "25") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                             (rule "leq_literals" (formula "25") (term "1,0,0,1,0,0,0,1,1,0"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,0,0,1,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "25") (term "1,1,0,0,0,1,0,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "25") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "25") (term "0,0,0,1,0,0,0,1,1,0"))
                                             (rule "qeq_literals" (formula "25") (term "0,0,1,0,0,0,1,1,0"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "polyDiv_pullOut" (formula "43") (term "1,1,1") (inst "polyDivCoeff=mul(jdiv(i_0, Z(2(#))), Z(neglit(1(#))))"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "0,1,0,0,2,1,1,1"))
                                             (rule "equal_literals" (formula "43") (term "0,1,1,1"))
                                              (builtin "One Step Simplification" (formula "43"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,1,1,1"))
                                             (rule "polySimp_pullOutFactor0b" (formula "43") (term "0,0,1,1,1"))
                                             (rule "add_literals" (formula "43") (term "1,1,0,0,1,1,1"))
                                             (rule "times_zero_1" (formula "43") (term "1,0,0,1,1,1"))
                                             (rule "add_zero_right" (formula "43") (term "0,0,1,1,1"))
                                             (rule "polySimp_addAssoc" (formula "43") (term "1,1"))
                                             (rule "polySimp_addComm1" (formula "43") (term "0,1,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "43") (term "1,1"))
                                             (rule "add_literals" (formula "43") (term "1,1,1,1"))
                                             (rule "times_zero_1" (formula "43") (term "1,1,1"))
                                             (rule "add_zero_right" (formula "43") (term "1,1"))
                                             (rule "polyDiv_pullOut" (formula "43") (term "1,1,1") (inst "polyDivCoeff=jdiv(i_0, Z(2(#)))"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,2,1,1,1"))
                                             (rule "equal_literals" (formula "43") (term "0,1,1,1"))
                                              (builtin "One Step Simplification" (formula "43"))
                                             (rule "polySimp_addComm0" (formula "43") (term "1,1,1"))
                                             (rule "polySimp_addAssoc" (formula "43") (term "1,1"))
                                             (rule "elimGcdGeq" (formula "25") (term "1,1,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                             (rule "add_zero_right" (formula "25") (term "0,0,0,0,0,1,1,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "25") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,0,1,1,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0,1,1,0,0,1,1,0"))
                                             (rule "sub_literals" (formula "25") (term "0,0,0,0,0,0,1,1,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0,0,0,1,1,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "25") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "25") (term "1,0,0,0,0,0,1,1,0,0,1,1,0"))
                                             (rule "add_zero_left" (formula "25") (term "0,0,1,0,1,1,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "25") (term "0,0,0,0,0,1,1,0,0,1,1,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "25") (term "0,1,0,1,1,0,0,1,1,0"))
                                             (rule "add_literals" (formula "25") (term "1,0,1,0,1,1,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "25") (term "0,1,0,1,1,0,0,1,1,0"))
                                             (rule "leq_literals" (formula "25") (term "1,0,1,1,0,0,1,1,0"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,0,1,1,0,0,1,1,0"))
                                             (rule "add_literals" (formula "25") (term "1,1,0,0,1,1,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "25") (term "1,0,0,1,1,0,0,1,1,0"))
                                             (rule "add_literals" (formula "25") (term "0,0,1,1,0,0,1,1,0"))
                                             (rule "qeq_literals" (formula "25") (term "0,1,1,0,0,1,1,0"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "elimGcdLeq" (formula "25") (term "1,0,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                             (rule "sub_literals" (formula "25") (term "0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "25") (term "0,0,0,0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "25") (term "1,1,0,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "25") (term "1,0,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "25") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "25") (term "1,1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "25") (term "1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "25") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "25") (term "0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "25") (term "0,0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "25") (term "0,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "25") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_addComm1" (formula "25") (term "0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "25") (term "0,0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "25") (term "1,1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "25") (term "1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "25") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "qeq_literals" (formula "25") (term "1,0,1,0,0,0,0,0,1,1,0"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_addComm1" (formula "25") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "25") (term "0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "add_zero_left" (formula "25") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "25") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "25") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "25") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "leq_literals" (formula "25") (term "0,1,0,0,0,0,0,1,1,0"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "polyDiv_pullOut" (formula "43") (term "1,1,1") (inst "polyDivCoeff=mul(jdiv(i_0, Z(2(#))), Z(neglit(1(#))))"))
                                             (rule "equal_literals" (formula "43") (term "0,1,1,1"))
                                              (builtin "One Step Simplification" (formula "43"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,1,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,1,1,1"))
                                             (rule "polySimp_pullOutFactor0b" (formula "43") (term "0,0,1,1,1"))
                                             (rule "add_literals" (formula "43") (term "1,1,0,0,1,1,1"))
                                             (rule "times_zero_1" (formula "43") (term "1,0,0,1,1,1"))
                                             (rule "add_zero_right" (formula "43") (term "0,0,1,1,1"))
                                             (rule "polySimp_addAssoc" (formula "43") (term "1,1"))
                                             (rule "polySimp_addComm1" (formula "43") (term "0,1,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "43") (term "1,1"))
                                             (rule "add_literals" (formula "43") (term "1,1,1,1"))
                                             (rule "times_zero_1" (formula "43") (term "1,1,1"))
                                             (rule "add_zero_right" (formula "43") (term "1,1"))
                                             (rule "polyDiv_pullOut" (formula "43") (term "1,1,1") (inst "polyDivCoeff=jdiv(i_0, Z(2(#)))"))
                                             (rule "equal_literals" (formula "43") (term "0,1,1,1"))
                                              (builtin "One Step Simplification" (formula "43"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,1,1,1"))
                                             (rule "polySimp_addComm0" (formula "43") (term "1,1,1"))
                                             (rule "polySimp_addAssoc" (formula "43") (term "1,1"))
                                             (rule "polyDiv_pullOut" (formula "43") (term "1,1,1") (inst "polyDivCoeff=mul(jdiv(i_0, Z(2(#))), Z(neglit(1(#))))"))
                                             (rule "equal_literals" (formula "43") (term "0,1,1,1"))
                                              (builtin "One Step Simplification" (formula "43"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,1,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,1,1,1"))
                                             (rule "polySimp_pullOutFactor0b" (formula "43") (term "0,0,1,1,1"))
                                             (rule "add_literals" (formula "43") (term "1,1,0,0,1,1,1"))
                                             (rule "times_zero_1" (formula "43") (term "1,0,0,1,1,1"))
                                             (rule "add_zero_right" (formula "43") (term "0,0,1,1,1"))
                                             (rule "polySimp_addAssoc" (formula "43") (term "1,1"))
                                             (rule "polySimp_addComm1" (formula "43") (term "0,1,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "43") (term "1,1"))
                                             (rule "add_literals" (formula "43") (term "1,1,1,1"))
                                             (rule "times_zero_1" (formula "43") (term "1,1,1"))
                                             (rule "add_zero_right" (formula "43") (term "1,1"))
                                             (rule "polyDiv_pullOut" (formula "43") (term "1,1,1") (inst "polyDivCoeff=jdiv(i_0, Z(2(#)))"))
                                             (rule "equal_literals" (formula "43") (term "0,1,1,1"))
                                              (builtin "One Step Simplification" (formula "43"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,1,1,1"))
                                             (rule "polySimp_addComm0" (formula "43") (term "1,1,1"))
                                             (rule "polySimp_addAssoc" (formula "43") (term "1,1"))
                                             (rule "polyDiv_pullOut" (formula "43") (term "1,1,1") (inst "polyDivCoeff=mul(jdiv(i_0, Z(2(#))), Z(neglit(1(#))))"))
                                             (rule "equal_literals" (formula "43") (term "0,1,1,1"))
                                              (builtin "One Step Simplification" (formula "43"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,1,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,1,1,1"))
                                             (rule "polySimp_pullOutFactor0b" (formula "43") (term "0,0,1,1,1"))
                                             (rule "add_literals" (formula "43") (term "1,1,0,0,1,1,1"))
                                             (rule "times_zero_1" (formula "43") (term "1,0,0,1,1,1"))
                                             (rule "add_zero_right" (formula "43") (term "0,0,1,1,1"))
                                             (rule "polySimp_addAssoc" (formula "43") (term "1,1"))
                                             (rule "polySimp_addComm1" (formula "43") (term "0,1,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "43") (term "1,1"))
                                             (rule "add_literals" (formula "43") (term "1,1,1,1"))
                                             (rule "times_zero_1" (formula "43") (term "1,1,1"))
                                             (rule "add_zero_right" (formula "43") (term "1,1"))
                                             (rule "newSym_eq" (formula "1") (inst "l=l_0") (inst "newSymDef=mul(pow(Z(2(#)), i_2_0), Z(0(#)))"))
                                             (rule "times_zero_1" (formula "1") (term "1,1"))
                                             (rule "add_zero_right" (formula "1") (term "1"))
                                             (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "2"))
                                             (rule "applyEqRigid" (formula "44") (term "0,1") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "44") (term "1"))
                                             (rule "polySimp_addComm1" (formula "44") (term "0,1"))
                                             (rule "applyEq" (formula "25") (term "1,0,1,1,0,0,1,1,0") (ifseqformula "2"))
                                             (rule "applyEqRigid" (formula "20") (term "0") (ifseqformula "2"))
                                             (rule "inEqSimp_homoInEq1" (formula "20"))
                                             (rule "polySimp_mulLiterals" (formula "20") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "20") (term "0"))
                                             (rule "applyEqRigid" (formula "26") (term "0,1,1,0,0,0") (ifseqformula "2"))
                                             (rule "applyEqRigid" (formula "38") (term "0") (ifseqformula "2"))
                                             (rule "inEqSimp_homoInEq1" (formula "38"))
                                             (rule "polySimp_mulLiterals" (formula "38") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "38") (term "0"))
                                             (rule "applyEqRigid" (formula "11") (term "1,1,0,0,0,0,1") (ifseqformula "2"))
                                             (rule "applyEq" (formula "36") (term "1,0") (ifseqformula "2"))
                                             (rule "applyEqRigid" (formula "26") (term "1,1,0,1,0,0,1,1,0") (ifseqformula "2"))
                                             (rule "applyEqRigid" (formula "26") (term "1,1,0,0,0,0,0,0,1,1,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "8") (term "0") (ifseqformula "2"))
                                             (rule "inEqSimp_homoInEq1" (formula "8"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "8") (term "0"))
                                             (rule "applyEq" (formula "14") (term "0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "16") (term "0,1,1,0,0,0,1,0") (ifseqformula "2"))
                                             (rule "applyEqRigid" (formula "13") (term "0") (ifseqformula "2"))
                                             (rule "applyEqRigid" (formula "15") (term "0,1,1,0,0,0") (ifseqformula "2"))
                                             (rule "applyEqRigid" (formula "23") (term "0,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "18") (term "0,1,0") (ifseqformula "2"))
                                             (rule "applyEqRigid" (formula "26") (term "1,0,1,0,1,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "16") (term "0,1,1,0,0,0") (ifseqformula "2"))
                                             (rule "applyEqRigid" (formula "26") (term "1,1,1,1,0,0,0,1,1,0") (ifseqformula "2"))
                                             (rule "applyEqRigid" (formula "25") (term "1,0,1,0,1,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "2"))
                                             (rule "applyEqRigid" (formula "25") (term "0,1,1,0,0,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "26") (term "1,1,1,1,0,0,0,0,1,1,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "21") (term "1") (ifseqformula "2"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "44") (term "1,1"))
                                             (rule "polySimp_rightDist" (formula "44") (term "1,1"))
                                             (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1"))
                                             (rule "mul_literals" (formula "44") (term "0,1,1"))
                                             (rule "polySimp_elimOne" (formula "44") (term "1,1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "20"))
                                             (rule "polySimp_mulComm0" (formula "20") (term "1"))
                                             (rule "polySimp_rightDist" (formula "20") (term "1"))
                                             (rule "mul_literals" (formula "20") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "38"))
                                             (rule "polySimp_mulComm0" (formula "38") (term "1"))
                                             (rule "polySimp_rightDist" (formula "38") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "38") (term "1,1"))
                                             (rule "mul_literals" (formula "38") (term "0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                             (rule "polySimp_rightDist" (formula "8") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                             (rule "mul_literals" (formula "8") (term "0,1"))
                                             (rule "newSym_eq" (formula "37") (inst "l=l_1") (inst "newSymDef=mul(result_1, Z(0(#)))"))
                                             (rule "times_zero_1" (formula "37") (term "1,1"))
                                             (rule "add_zero_right" (formula "37") (term "1"))
                                             (rule "applyEq" (formula "38") (term "0,0") (ifseqformula "37"))
                                             (rule "eqSymm" (formula "38"))
                                             (rule "applyEq" (formula "37") (term "0,0") (ifseqformula "38"))
                                             (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "38"))
                                             (rule "inEqSimp_homoInEq0" (formula "10") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                                             (rule "applyEq" (formula "39") (term "0") (ifseqformula "38"))
                                             (rule "inEqSimp_homoInEq0" (formula "39"))
                                             (rule "polySimp_mulLiterals" (formula "39") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "39") (term "0"))
                                             (rule "applyEq" (formula "40") (term "0") (ifseqformula "38"))
                                             (rule "applyEq" (formula "10") (term "1,1,0,0,1") (ifseqformula "38"))
                                             (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "38"))
                                             (rule "inEqSimp_homoInEq1" (formula "11") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                             (rule "applyEq" (formula "11") (term "1,1,0,0,0,1") (ifseqformula "38"))
                                             (rule "applyEq" (formula "36") (term "1") (ifseqformula "38"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                             (rule "mul_literals" (formula "10") (term "0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                                             (rule "polySimp_mulComm0" (formula "39") (term "1"))
                                             (rule "polySimp_rightDist" (formula "39") (term "1"))
                                             (rule "mul_literals" (formula "39") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "39") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0"))
                                             (rule "mul_literals" (formula "11") (term "0,1,0"))
                                             (rule "polyDiv_pullOut" (formula "45") (term "0,0") (inst "polyDivCoeff=jdiv(i_0, Z(2(#)))"))
                                             (rule "equal_literals" (formula "45") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "45"))
                                             (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,0,0"))
                                             (rule "polySimp_addComm0" (formula "45") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0"))
                                             (rule "elimGcdGeq_antec" (formula "39") (inst "elimGcdRightDiv=add(Z(1(#)), l_1)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                             (rule "polySimp_mulLiterals" (formula "39") (term "1,0,1,0"))
                                             (rule "leq_literals" (formula "39") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "39"))
                                             (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "39") (term "0,0"))
                                             (rule "add_literals" (formula "39") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "39") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "39") (term "0,0"))
                                             (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "39") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "39") (term "0,0,0"))
                                             (rule "add_literals" (formula "39") (term "0,0,0,0"))
                                             (rule "add_zero_left" (formula "39") (term "0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "39") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "39") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "39") (term "0,0"))
                                             (rule "add_literals" (formula "39") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "39") (term "1,0,0"))
                                             (rule "add_literals" (formula "39") (term "0,0"))
                                             (rule "leq_literals" (formula "39") (term "0"))
                                              (builtin "One Step Simplification" (formula "39"))
                                             (rule "elimGcdGeq_antec" (formula "40") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                             (rule "leq_literals" (formula "40") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "40"))
                                             (rule "times_zero_1" (formula "40") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "40") (term "0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "40") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "40") (term "0,0"))
                                             (rule "add_literals" (formula "40") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "40") (term "1,0,0"))
                                             (rule "add_literals" (formula "40") (term "0,0"))
                                             (rule "leq_literals" (formula "40") (term "0"))
                                              (builtin "One Step Simplification" (formula "40"))
                                             (rule "elimGcdGeq_antec" (formula "13") (inst "elimGcdRightDiv=Z(4(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "13") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                                             (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                             (rule "add_literals" (formula "13") (term "0,0"))
                                             (rule "leq_literals" (formula "13") (term "0"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "elimGcdLeq_antec" (formula "14") (inst "elimGcdRightDiv=Z(2(1(9(0(7(8(6(3(5(#))))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                             (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0,1,0"))
                                             (rule "neg_literal" (formula "14") (term "0,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "14") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "14"))
                                             (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_addLiterals" (formula "14") (term "0,0,0,0"))
                                             (rule "add_zero_right" (formula "14") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                                             (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                             (rule "add_literals" (formula "14") (term "0,0"))
                                             (rule "qeq_literals" (formula "14") (term "0"))
                                              (builtin "One Step Simplification" (formula "14"))
                                             (rule "polyDiv_pullOut" (formula "1") (term "0") (inst "polyDivCoeff=l_0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0"))
                                             (rule "equal_literals" (formula "1") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "polySimp_homoEq" (formula "1"))
                                             (rule "polySimp_pullOutFactor0" (formula "1") (term "0,0,0,1,0"))
                                             (rule "add_literals" (formula "1") (term "1,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "1") (term "0,0,0,1,0"))
                                             (rule "div_literals" (formula "1") (term "0,0,1,0"))
                                             (rule "add_zero_left" (formula "1") (term "0,1,0"))
                                             (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                             (rule "add_literals" (formula "1") (term "1,0"))
                                             (rule "times_zero_1" (formula "1") (term "0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "elimGcdGeq" (formula "10") (term "1,0,0,0,1") (inst "elimGcdRightDiv=l_1") (inst "elimGcdLeftDiv=n") (inst "elimGcd=Z(2(#))"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,1,0,0,0,1"))
                                             (rule "mul_literals" (formula "10") (term "0,0,0,0,0,1,0,1,0,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,1,0,0,0,1"))
                                             (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0,0,1,0,0,0,1"))
                                             (rule "sub_literals" (formula "10") (term "0,0,0,0,0,0,0,1,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,1,0,1,0,0,0,1"))
                                             (rule "add_literals" (formula "10") (term "1,1,0,1,0,1,0,0,0,1"))
                                             (rule "times_zero_1" (formula "10") (term "1,0,1,0,1,0,0,0,1"))
                                             (rule "add_zero_right" (formula "10") (term "0,1,0,1,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0,0,1,0,0,0,1"))
                                             (rule "add_literals" (formula "10") (term "1,1,0,0,0,1,0,0,0,1"))
                                             (rule "times_zero_1" (formula "10") (term "1,0,0,0,1,0,0,0,1"))
                                             (rule "add_zero_right" (formula "10") (term "0,0,0,1,0,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,0,1,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor0" (formula "10") (term "0,1,0,1,0,0,0,1"))
                                             (rule "add_literals" (formula "10") (term "1,0,1,0,1,0,0,0,1"))
                                             (rule "times_zero_1" (formula "10") (term "0,1,0,1,0,0,0,1"))
                                             (rule "leq_literals" (formula "10") (term "1,0,1,0,0,0,1"))
                                              (builtin "One Step Simplification" (formula "10"))
                                             (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,1,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0,1,0,0,0,1"))
                                             (rule "add_literals" (formula "10") (term "1,1,0,0,1,0,0,0,1"))
                                             (rule "times_zero_1" (formula "10") (term "1,0,0,1,0,0,0,1"))
                                             (rule "add_literals" (formula "10") (term "0,0,1,0,0,0,1"))
                                             (rule "qeq_literals" (formula "10") (term "0,1,0,0,0,1"))
                                              (builtin "One Step Simplification" (formula "10"))
                                             (rule "elimGcdGeq" (formula "9") (term "1,0,0,1") (inst "elimGcdRightDiv=l_1") (inst "elimGcdLeftDiv=n") (inst "elimGcd=Z(2(#))"))
                                             (rule "sub_literals" (formula "9") (term "0,0,0,0,0,0,0,1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0,1,0,0,1"))
                                             (rule "mul_literals" (formula "9") (term "0,0,0,0,0,1,0,1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,1,0,0,1"))
                                             (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0,0,1,0,0,1"))
                                             (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,1,0,1,0,0,1"))
                                             (rule "add_literals" (formula "9") (term "1,1,0,1,0,1,0,0,1"))
                                             (rule "times_zero_1" (formula "9") (term "1,0,1,0,1,0,0,1"))
                                             (rule "add_zero_right" (formula "9") (term "0,1,0,1,0,0,1"))
                                             (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0,0,1,0,0,1"))
                                             (rule "add_literals" (formula "9") (term "1,1,0,0,0,1,0,0,1"))
                                             (rule "times_zero_1" (formula "9") (term "1,0,0,0,1,0,0,1"))
                                             (rule "add_zero_right" (formula "9") (term "0,0,0,1,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "0,0,1,0,1,0,0,1"))
                                             (rule "polySimp_pullOutFactor0" (formula "9") (term "0,1,0,1,0,0,1"))
                                             (rule "add_literals" (formula "9") (term "1,0,1,0,1,0,0,1"))
                                             (rule "times_zero_1" (formula "9") (term "0,1,0,1,0,0,1"))
                                             (rule "leq_literals" (formula "9") (term "1,0,1,0,0,1"))
                                              (builtin "One Step Simplification" (formula "9"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,1,0,0,1"))
                                             (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0,1,0,0,1"))
                                             (rule "add_literals" (formula "9") (term "1,1,0,0,1,0,0,1"))
                                             (rule "times_zero_1" (formula "9") (term "1,0,0,1,0,0,1"))
                                             (rule "add_zero_right" (formula "9") (term "0,0,1,0,0,1"))
                                             (rule "qeq_literals" (formula "9") (term "0,1,0,0,1"))
                                              (builtin "One Step Simplification" (formula "9"))
                                             (rule "elimGcdLeq" (formula "25") (term "0,0,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_0)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "sub_literals" (formula "25") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "25") (term "0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,1,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "25") (term "1,1,0,1,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "25") (term "1,0,1,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "25") (term "0,1,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "25") (term "1,1,0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "25") (term "0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "25") (term "0,0,1,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "25") (term "0,0,0,1,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "25") (term "0,1,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_addComm1" (formula "25") (term "0,0,1,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "25") (term "0,0,0,1,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,1,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "25") (term "1,1,0,1,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "25") (term "1,0,1,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "25") (term "0,1,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "qeq_literals" (formula "25") (term "1,0,0,0,0,0,0,0,1,1,0"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "25") (term "0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "25") (term "0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "add_zero_left" (formula "25") (term "0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "25") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "25") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "25") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "leq_literals" (formula "25") (term "0,0,0,0,0,0,0,1,1,0"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "newSym_eq" (formula "8") (inst "l=l_2") (inst "newSymDef=mul(i_0, Z(0(#)))"))
                                             (rule "times_zero_1" (formula "8") (term "1,1"))
                                             (rule "add_zero_right" (formula "8") (term "1"))
                                             (rule "applyEq" (formula "45") (term "0,1,0,0,0") (ifseqformula "8"))
                                             (rule "polySimp_addComm0" (formula "45") (term "0,0,0"))
                                             (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "8"))
                                             (rule "eqSymm" (formula "9"))
                                             (rule "applyEq" (formula "45") (term "0,1,0") (ifseqformula "8"))
                                             (rule "applyEqRigid" (formula "11") (term "0,0") (ifseqformula "9"))
                                             (rule "inEqSimp_homoInEq0" (formula "11") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                             (rule "applyEqRigid" (formula "11") (term "1,1,0,0,0,1,1") (ifseqformula "9"))
                                             (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "9"))
                                             (rule "applyEq" (formula "5") (term "0,2,0") (ifseqformula "9"))
                                             (rule "applyEq" (formula "6") (term "0") (ifseqformula "9"))
                                             (rule "applyEq" (formula "10") (term "1,1,0,0,0,1") (ifseqformula "9"))
                                             (rule "applyEqRigid" (formula "45") (term "1,0,0,0") (ifseqformula "9"))
                                             (rule "polySimp_pullOutFactor0" (formula "45") (term "0,0,0"))
                                             (rule "add_literals" (formula "45") (term "1,0,0,0"))
                                             (rule "times_zero_1" (formula "45") (term "0,0,0"))
                                             (rule "div_literals" (formula "45") (term "0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "45") (term "0"))
                                             (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "9"))
                                             (rule "inEqSimp_homoInEq1" (formula "10") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                                             (rule "applyEqRigid" (formula "7") (term "0") (ifseqformula "9"))
                                             (rule "inEqSimp_homoInEq0" (formula "7"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "7") (term "0"))
                                             (rule "applyEq" (formula "45") (term "0,0,1") (ifseqformula "9"))
                                             (rule "applyEqRigid" (formula "8") (term "0,0") (ifseqformula "9"))
                                             (rule "applyEqRigid" (formula "4") (term "1") (ifseqformula "9"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                             (rule "mul_literals" (formula "11") (term "0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0"))
                                             (rule "inEqSimp_invertInEq0" (formula "45") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "45") (term "0,0"))
                                             (rule "times_zero_2" (formula "45") (term "1,0"))
                                             (rule "polySimp_elimOne" (formula "45") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0"))
                                             (rule "mul_literals" (formula "10") (term "0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                             (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                             (rule "polySimp_rightDist" (formula "7") (term "1"))
                                             (rule "mul_literals" (formula "7") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                             (rule "elimGcdEq" (formula "4") (inst "elimGcdRightDiv=l_2") (inst "elimGcdLeftDiv=div(mul(l_2, Z(2(#))), Z(2(#)))") (inst "elimGcd=Z(2(#))"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "mul_literals" (formula "4") (term "0,1,0,1,0"))
                                             (rule "mul_literals" (formula "4") (term "0,1,0,0,1"))
                                             (rule "add_literals" (formula "4") (term "1,0,0"))
                                             (rule "mul_literals" (formula "4") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "4") (term "1,0,1,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "4") (term "0,1,0"))
                                             (rule "add_literals" (formula "4") (term "1,0,1,0"))
                                             (rule "times_zero_1" (formula "4") (term "0,1,0"))
                                             (rule "qeq_literals" (formula "4") (term "1,0"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1"))
                                             (rule "polySimp_pullOutFactor0" (formula "4") (term "0,0,1"))
                                             (rule "add_literals" (formula "4") (term "1,0,0,1"))
                                             (rule "times_zero_1" (formula "4") (term "0,0,1"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "4") (term "0,0"))
                                             (rule "add_literals" (formula "4") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "4") (term "0,0"))
                                             (rule "leq_literals" (formula "4") (term "0"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqRigid" (formula "45") (term "0,1") (ifseqformula "4"))
                                             (rule "inEqSimp_homoInEq0" (formula "45") (term "1"))
                                             (rule "polySimp_addComm1" (formula "45") (term "0,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "45") (term "1,1"))
                                             (rule "polySimp_rightDist" (formula "45") (term "1,1"))
                                             (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1"))
                                             (rule "mul_literals" (formula "45") (term "0,1,1"))
                                             (rule "polySimp_elimOne" (formula "45") (term "1,1,1"))
                                             (rule "elimGcdLeq" (formula "11") (term "0,0,0,0,1") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_0)") (inst "elimGcdLeftDiv=n") (inst "elimGcd=Z(2(#))"))
                                             (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0,0,0,0,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,0,0,0,0,1"))
                                             (rule "sub_literals" (formula "11") (term "0,0,0,0,0,0,0,0,0,0,0,1"))
                                             (rule "mul_literals" (formula "11") (term "0,0,0,0,0,1,0,0,0,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,0,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,1,0,0,0,0,0,1"))
                                             (rule "add_literals" (formula "11") (term "1,1,0,1,0,0,0,0,0,1"))
                                             (rule "times_zero_1" (formula "11") (term "1,0,1,0,0,0,0,0,1"))
                                             (rule "add_zero_right" (formula "11") (term "0,1,0,0,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0,0,0,0,0,0,1"))
                                             (rule "add_literals" (formula "11") (term "1,1,0,0,0,0,0,0,0,1"))
                                             (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0,0,0,1"))
                                             (rule "add_zero_right" (formula "11") (term "0,0,0,0,0,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "11") (term "0,0,1,0,0,0,0,0,1"))
                                             (rule "mul_literals" (formula "11") (term "0,0,0,1,0,0,0,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0,0,0,0,1"))
                                             (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0,0,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0,1,0,0,0,0,0,1"))
                                             (rule "polySimp_addComm1" (formula "11") (term "0,0,1,0,0,0,0,0,1"))
                                             (rule "add_literals" (formula "11") (term "0,0,0,1,0,0,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,1,0,0,0,0,0,1"))
                                             (rule "add_literals" (formula "11") (term "1,1,0,1,0,0,0,0,0,1"))
                                             (rule "times_zero_1" (formula "11") (term "1,0,1,0,0,0,0,0,1"))
                                             (rule "add_zero_right" (formula "11") (term "0,1,0,0,0,0,0,1"))
                                             (rule "qeq_literals" (formula "11") (term "1,0,0,0,0,0,1"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0,0,0,1"))
                                             (rule "add_literals" (formula "11") (term "0,0,0,0,0,0,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0,0,1"))
                                             (rule "polySimp_addComm1" (formula "11") (term "0,0,0,0,0,0,0,1"))
                                             (rule "add_literals" (formula "11") (term "0,0,0,0,0,0,0,0,1"))
                                             (rule "add_zero_left" (formula "11") (term "0,0,0,0,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor0" (formula "11") (term "0,0,0,0,0,0,1"))
                                             (rule "add_literals" (formula "11") (term "1,0,0,0,0,0,0,1"))
                                             (rule "times_zero_1" (formula "11") (term "0,0,0,0,0,0,1"))
                                             (rule "leq_literals" (formula "11") (term "0,0,0,0,0,1"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "elimGcdGeq_antec" (formula "7") (inst "elimGcdRightDiv=add(Z(1(#)), l_2)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0"))
                                             (rule "leq_literals" (formula "7") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                             (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "7") (term "0,0"))
                                             (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "7") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "7") (term "0,0,0"))
                                             (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                             (rule "add_zero_left" (formula "7") (term "0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "7") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                             (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                             (rule "add_literals" (formula "7") (term "0,0"))
                                             (rule "leq_literals" (formula "7") (term "0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "replace_known_left" (formula "45") (term "1") (ifseqformula "7"))
                                              (builtin "One Step Simplification" (formula "45"))
                                             (rule "inEqSimp_geqRight" (formula "45"))
                                             (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                             (rule "mul_literals" (formula "1") (term "1"))
                                             (rule "inEqSimp_contradInEq3" (formula "7") (ifseqformula "1"))
                                             (rule "mul_literals" (formula "7") (term "0,1,0"))
                                             (rule "greater_literals" (formula "7") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "qeq_literals" (formula "7") (term "0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "closeFalse" (formula "7"))
                                          )
                                          (branch "CUT: self.table.length % 2 = 0 FALSE"
                                             (rule "applyEq" (formula "40") (term "0,0") (ifseqformula "21") (userinteraction))
                                             (rule "powDef" (formula "40") (term "0,0") (inst "x=x") (userinteraction))
                                             (rule "ifthenelse_split" (formula "40") (term "0,0") (userinteraction))
                                             (branch "i_2_0 >= 0 TRUE"
                                                (rule "bprod_induction_upper" (formula "40") (term "0,0") (userinteraction))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "true_left" (formula "3"))
                                                (rule "polySimp_elimSub" (formula "39") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "39") (term "1,1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "39") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "39") (term "1,1,0,0"))
                                                (rule "inEqSimp_gtToGeq" (formula "24") (term "1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "24") (term "0,1,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulAssoc" (formula "25") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_gtToGeq" (formula "7") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "17"))
                                                (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "17") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "25") (term "0,1,0,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "5"))
                                                (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "25") (term "0,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulAssoc" (formula "25") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "0,1,0,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "8") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0,0,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "44") (term "1"))
                                                (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1"))
                                                (rule "polySimp_addComm1" (formula "44") (term "0,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "22"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "22") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "37"))
                                                (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "37") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,1,1"))
                                                (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0,1,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "25") (term "0,1,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,1,0,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "14"))
                                                (rule "mul_literals" (formula "14") (term "1,0,0"))
                                                (rule "add_literals" (formula "14") (term "0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0,0"))
                                                (rule "add_zero_right" (formula "39") (term "0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                                                (rule "jmod_axiom" (formula "6") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                                                (rule "jmod_axiom" (formula "36") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "36") (term "1,0"))
                                                (rule "mod_axiom" (formula "39") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "39") (term "1,0"))
                                                (rule "Query_axiom_for_maskNull_java_lang_Object__in_java_util_VerifiedIdentityHashMap" (formula "1") (term "0") (inst "maskNull_sk=maskNull_sk_0") (inst "#p0=o_1") (inst "#res=o"))
                                                (rule "eqSymm" (formula "1") (term "1,0,1"))
                                                (rule "polySimp_sepNegMonomial" (formula "7"))
                                                (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                (rule "polySimp_sepNegMonomial" (formula "37"))
                                                (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                                                (rule "polySimp_sepNegMonomial" (formula "40"))
                                                (rule "polySimp_mulLiterals" (formula "40") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "25") (term "1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "0,1,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "25") (term "0,1,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "26") (term "0,1,1,0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                                                (rule "applyEq" (formula "20") (term "0") (ifseqformula "21"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "8") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "8") (term "0,0"))
                                                (rule "polySimp_elimOne" (formula "8") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "18"))
                                                (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                                (rule "polySimp_elimOne" (formula "18") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,1,0"))
                                                (rule "mul_literals" (formula "14") (term "0,1,0,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0,1,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "0,1,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "25") (term "0,1,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,1"))
                                                (rule "mul_literals" (formula "8") (term "0,1,0,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,1"))
                                                (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,1"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                                (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1,0,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "25") (term "1,0,1,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "25") (term "0,1,0,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "9") (term "0,0"))
                                                (rule "polySimp_elimOne" (formula "9") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "24") (term "0,1,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,0,1"))
                                                (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,1"))
                                                (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,0,1"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "44") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "44") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "44") (term "0,1"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "22"))
                                                (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                                (rule "polySimp_elimOne" (formula "22") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "37"))
                                                (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                                                (rule "polySimp_elimOne" (formula "37") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,1,1"))
                                                (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,1,1"))
                                                (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,1,1"))
                                                (rule "mul_literals" (formula "9") (term "0,1,0,0,0,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,1,1"))
                                                (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,1,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,1,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1,0,1,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "25") (term "1,0,1,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "25") (term "0,1,0,1,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "25") (term "1,1,0,1,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "15"))
                                                (rule "mul_literals" (formula "15") (term "1"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "39") (term "0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "39") (term "0,0,0,1"))
                                                (rule "polySimp_elimOne" (formula "39") (term "0,0,0,1"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "39") (term "0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "39") (term "0,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "39") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "11"))
                                                (rule "leq_literals" (formula "19") (term "0"))
                                                 (builtin "One Step Simplification" (formula "19"))
                                                (rule "true_left" (formula "19"))
                                                (rule "polyDiv_pullOut" (formula "43") (term "1,1,1") (inst "polyDivCoeff=jdiv(i_0, Z(2(#)))"))
                                                (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,2,1,1,1"))
                                                (rule "equal_literals" (formula "43") (term "0,1,1,1"))
                                                 (builtin "One Step Simplification" (formula "43"))
                                                (rule "polySimp_addComm0" (formula "43") (term "1,1,1"))
                                                (rule "polySimp_addAssoc" (formula "43") (term "1,1"))
                                                (rule "elimGcdLeq" (formula "24") (term "0,1,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                                (rule "sub_literals" (formula "24") (term "0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "24") (term "0,0,0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "24") (term "1,1,0,1,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "24") (term "1,0,1,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "24") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "24") (term "1,1,0,0,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "24") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "24") (term "0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "24") (term "0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "24") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_addComm1" (formula "24") (term "0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "24") (term "1,1,0,1,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "24") (term "1,0,1,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "24") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "qeq_literals" (formula "24") (term "1,0,0,1,0,0,0,0,1,1,0"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "24") (term "0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "24") (term "0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "24") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_pullOutFactor0" (formula "24") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "24") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "24") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "leq_literals" (formula "24") (term "0,0,1,0,0,0,0,1,1,0"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "elimGcdGeq" (formula "9") (term "1,0,0,1,1") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=m") (inst "elimGcd=Z(2(#))"))
                                                (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0,0,1,0,0,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0,1,0,0,1,1"))
                                                (rule "add_zero_right" (formula "9") (term "0,0,0,1,0,1,0,0,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,1,0,0,1,1"))
                                                (rule "sub_literals" (formula "9") (term "0,0,0,0,0,0,0,1,0,0,1,1"))
                                                (rule "times_zero_1" (formula "9") (term "0,0,0,1,0,1,0,0,1,1"))
                                                (rule "add_zero_right" (formula "9") (term "0,0,0,0,0,0,1,0,0,1,1"))
                                                (rule "add_zero_left" (formula "9") (term "0,0,1,0,1,0,0,1,1"))
                                                (rule "add_zero_right" (formula "9") (term "0,0,0,0,0,1,0,0,1,1"))
                                                (rule "polySimp_pullOutFactor0" (formula "9") (term "0,1,0,1,0,0,1,1"))
                                                (rule "add_literals" (formula "9") (term "1,0,1,0,1,0,0,1,1"))
                                                (rule "times_zero_1" (formula "9") (term "0,1,0,1,0,0,1,1"))
                                                (rule "leq_literals" (formula "9") (term "1,0,1,0,0,1,1"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0,1,0,0,1,1"))
                                                (rule "add_literals" (formula "9") (term "1,1,0,0,1,0,0,1,1"))
                                                (rule "times_zero_1" (formula "9") (term "1,0,0,1,0,0,1,1"))
                                                (rule "add_zero_right" (formula "9") (term "0,0,1,0,0,1,1"))
                                                (rule "qeq_literals" (formula "9") (term "0,1,0,0,1,1"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "elimGcdLeq" (formula "24") (term "1,0,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                                (rule "sub_literals" (formula "24") (term "0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0,1,0,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "24") (term "0,0,0,0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "24") (term "1,1,0,0,0,1,0,0,0,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "24") (term "1,0,0,0,1,0,0,0,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "24") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "24") (term "1,1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "24") (term "1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "24") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "24") (term "0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "24") (term "0,0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "24") (term "0,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "24") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_addComm1" (formula "24") (term "0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "24") (term "0,0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "24") (term "1,1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "24") (term "1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "24") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                                (rule "qeq_literals" (formula "24") (term "1,0,1,0,0,0,0,0,1,1,0"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_addComm1" (formula "24") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "24") (term "0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "24") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_pullOutFactor0" (formula "24") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "24") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "24") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                                (rule "leq_literals" (formula "24") (term "0,1,0,0,0,0,0,1,1,0"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "polyDiv_pullOut" (formula "43") (term "1,1,1") (inst "polyDivCoeff=mul(jdiv(i_0, Z(2(#))), Z(neglit(1(#))))"))
                                                (rule "equal_literals" (formula "43") (term "0,1,1,1"))
                                                 (builtin "One Step Simplification" (formula "43"))
                                                (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,1,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,1,1,1"))
                                                (rule "polySimp_pullOutFactor0b" (formula "43") (term "0,0,1,1,1"))
                                                (rule "add_literals" (formula "43") (term "1,1,0,0,1,1,1"))
                                                (rule "times_zero_1" (formula "43") (term "1,0,0,1,1,1"))
                                                (rule "add_zero_right" (formula "43") (term "0,0,1,1,1"))
                                                (rule "polySimp_addAssoc" (formula "43") (term "1,1"))
                                                (rule "polySimp_addComm1" (formula "43") (term "0,1,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "43") (term "1,1"))
                                                (rule "add_literals" (formula "43") (term "1,1,1,1"))
                                                (rule "times_zero_1" (formula "43") (term "1,1,1"))
                                                (rule "add_zero_right" (formula "43") (term "1,1"))
                                                (rule "polyDiv_pullOut" (formula "43") (term "1,1,1") (inst "polyDivCoeff=jdiv(i_0, Z(2(#)))"))
                                                (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,2,1,1,1"))
                                                (rule "equal_literals" (formula "43") (term "0,1,1,1"))
                                                 (builtin "One Step Simplification" (formula "43"))
                                                (rule "polySimp_addComm0" (formula "43") (term "1,1,1"))
                                                (rule "polySimp_addAssoc" (formula "43") (term "1,1"))
                                                (rule "elimGcdGeq" (formula "24") (term "1,1,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1,0,1,1,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "24") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,0,0,1,1,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0,1,1,0,0,1,1,0"))
                                                (rule "sub_literals" (formula "24") (term "0,0,0,0,0,0,0,1,1,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "24") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0,0,1,1,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "24") (term "0,0,1,0,1,1,0,0,1,1,0"))
                                                (rule "polySimp_addLiterals" (formula "24") (term "0,0,0,0,0,1,1,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "24") (term "0,0,0,0,0,1,1,0,0,1,1,0"))
                                                (rule "polySimp_pullOutFactor0" (formula "24") (term "0,1,0,1,1,0,0,1,1,0"))
                                                (rule "add_literals" (formula "24") (term "1,0,1,0,1,1,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "24") (term "0,1,0,1,1,0,0,1,1,0"))
                                                (rule "leq_literals" (formula "24") (term "1,0,1,1,0,0,1,1,0"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,0,1,1,0,0,1,1,0"))
                                                (rule "add_literals" (formula "24") (term "1,1,0,0,1,1,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "24") (term "1,0,0,1,1,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "24") (term "0,0,1,1,0,0,1,1,0"))
                                                (rule "qeq_literals" (formula "24") (term "0,1,1,0,0,1,1,0"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "elimGcdGeq" (formula "24") (term "0,1,0,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0,0,1,0,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "24") (term "0,0,0,1,0,0,1,0,0,0,1,1,0"))
                                                (rule "sub_literals" (formula "24") (term "0,0,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "24") (term "0,0,0,1,0,0,1,0,0,0,1,1,0"))
                                                (rule "polySimp_addLiterals" (formula "24") (term "0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "24") (term "0,0,1,0,0,1,0,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "24") (term "0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                                (rule "polySimp_pullOutFactor0" (formula "24") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "24") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "24") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                                (rule "leq_literals" (formula "24") (term "1,0,0,1,0,0,0,1,1,0"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,0,0,1,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "24") (term "1,1,0,0,0,1,0,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "24") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "24") (term "0,0,0,1,0,0,0,1,1,0"))
                                                (rule "qeq_literals" (formula "24") (term "0,0,1,0,0,0,1,1,0"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "polyDiv_pullOut" (formula "43") (term "1,1,1") (inst "polyDivCoeff=mul(jdiv(i_0, Z(2(#))), Z(neglit(1(#))))"))
                                                (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,2,1,1,1"))
                                                (rule "equal_literals" (formula "43") (term "0,1,1,1"))
                                                 (builtin "One Step Simplification" (formula "43"))
                                                (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,1,1,1"))
                                                (rule "polySimp_pullOutFactor0b" (formula "43") (term "0,0,1,1,1"))
                                                (rule "add_literals" (formula "43") (term "1,1,0,0,1,1,1"))
                                                (rule "times_zero_1" (formula "43") (term "1,0,0,1,1,1"))
                                                (rule "add_zero_right" (formula "43") (term "0,0,1,1,1"))
                                                (rule "polySimp_addAssoc" (formula "43") (term "1,1"))
                                                (rule "polySimp_addComm1" (formula "43") (term "0,1,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "43") (term "1,1"))
                                                (rule "add_literals" (formula "43") (term "1,1,1,1"))
                                                (rule "times_zero_1" (formula "43") (term "1,1,1"))
                                                (rule "add_zero_right" (formula "43") (term "1,1"))
                                                (rule "polyDiv_pullOut" (formula "43") (term "1,1,1") (inst "polyDivCoeff=jdiv(i_0, Z(2(#)))"))
                                                (rule "equal_literals" (formula "43") (term "0,1,1,1"))
                                                 (builtin "One Step Simplification" (formula "43"))
                                                (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,1,1,1"))
                                                (rule "polySimp_addComm0" (formula "43") (term "1,1,1"))
                                                (rule "polySimp_addAssoc" (formula "43") (term "1,1"))
                                                (rule "polyDiv_pullOut" (formula "43") (term "1,1,1") (inst "polyDivCoeff=mul(jdiv(i_0, Z(2(#))), Z(neglit(1(#))))"))
                                                (rule "equal_literals" (formula "43") (term "0,1,1,1"))
                                                 (builtin "One Step Simplification" (formula "43"))
                                                (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,1,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,1,1,1"))
                                                (rule "polySimp_pullOutFactor0b" (formula "43") (term "0,0,1,1,1"))
                                                (rule "add_literals" (formula "43") (term "1,1,0,0,1,1,1"))
                                                (rule "times_zero_1" (formula "43") (term "1,0,0,1,1,1"))
                                                (rule "add_zero_right" (formula "43") (term "0,0,1,1,1"))
                                                (rule "polySimp_addAssoc" (formula "43") (term "1,1"))
                                                (rule "polySimp_addComm1" (formula "43") (term "0,1,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "43") (term "1,1"))
                                                (rule "add_literals" (formula "43") (term "1,1,1,1"))
                                                (rule "times_zero_1" (formula "43") (term "1,1,1"))
                                                (rule "add_zero_right" (formula "43") (term "1,1"))
                                                (rule "polyDiv_pullOut" (formula "43") (term "1,1,1") (inst "polyDivCoeff=jdiv(i_0, Z(2(#)))"))
                                                (rule "equal_literals" (formula "43") (term "0,1,1,1"))
                                                 (builtin "One Step Simplification" (formula "43"))
                                                (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,1,1,1"))
                                                (rule "polySimp_addComm0" (formula "43") (term "1,1,1"))
                                                (rule "polySimp_addAssoc" (formula "43") (term "1,1"))
                                                (rule "polyDiv_pullOut" (formula "43") (term "1,1,1") (inst "polyDivCoeff=mul(jdiv(i_0, Z(2(#))), Z(neglit(1(#))))"))
                                                (rule "equal_literals" (formula "43") (term "0,1,1,1"))
                                                 (builtin "One Step Simplification" (formula "43"))
                                                (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,1,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,1,1,1"))
                                                (rule "polySimp_pullOutFactor0b" (formula "43") (term "0,0,1,1,1"))
                                                (rule "add_literals" (formula "43") (term "1,1,0,0,1,1,1"))
                                                (rule "times_zero_1" (formula "43") (term "1,0,0,1,1,1"))
                                                (rule "add_zero_right" (formula "43") (term "0,0,1,1,1"))
                                                (rule "polySimp_addAssoc" (formula "43") (term "1,1"))
                                                (rule "polySimp_addComm1" (formula "43") (term "0,1,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "43") (term "1,1"))
                                                (rule "add_literals" (formula "43") (term "1,1,1,1"))
                                                (rule "times_zero_1" (formula "43") (term "1,1,1"))
                                                (rule "add_zero_right" (formula "43") (term "1,1"))
                                                (rule "newSym_eq" (formula "35") (inst "l=l_0") (inst "newSymDef=mul(result_1, Z(0(#)))"))
                                                (rule "times_zero_1" (formula "35") (term "1,1"))
                                                (rule "add_zero_right" (formula "35") (term "1"))
                                                (rule "applyEq" (formula "36") (term "0,0") (ifseqformula "35"))
                                                (rule "eqSymm" (formula "36"))
                                                (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "36"))
                                                (rule "inEqSimp_homoInEq1" (formula "9") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                                                (rule "applyEq" (formula "9") (term "1,1,0,0,0,1") (ifseqformula "36"))
                                                (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "36"))
                                                (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                                (rule "applyEq" (formula "37") (term "1,1") (ifseqformula "36"))
                                                (rule "applyEq" (formula "8") (term "1,1,0,0,1") (ifseqformula "36"))
                                                (rule "applyEq" (formula "38") (term "0") (ifseqformula "36"))
                                                (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "36"))
                                                (rule "applyEq" (formula "34") (term "1") (ifseqformula "36"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                (rule "mul_literals" (formula "9") (term "0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0"))
                                                (rule "mul_literals" (formula "8") (term "0,1,0"))
                                                (rule "newSym_eq" (formula "7") (inst "l=l_1") (inst "newSymDef=mul(i_0, Z(0(#)))"))
                                                (rule "times_zero_1" (formula "7") (term "1,1"))
                                                (rule "add_zero_right" (formula "7") (term "1"))
                                                (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "7"))
                                                (rule "eqSymm" (formula "8"))
                                                (rule "applyEqRigid" (formula "5") (term "0") (ifseqformula "8"))
                                                (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "8"))
                                                (rule "applyEqRigid" (formula "9") (term "1,1,0,0,0,1") (ifseqformula "8"))
                                                (rule "applyEq" (formula "10") (term "1,1,0,0,0,1,1") (ifseqformula "8"))
                                                (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "8"))
                                                (rule "inEqSimp_homoInEq1" (formula "9") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                                                (rule "applyEqRigid" (formula "45") (term "0,1,1,1") (ifseqformula "8"))
                                                (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "8"))
                                                (rule "applyEqRigid" (formula "6") (term "1,1") (ifseqformula "8"))
                                                (rule "applyEq" (formula "45") (term "0,0,0") (ifseqformula "8"))
                                                (rule "applyEq" (formula "4") (term "0,2,0") (ifseqformula "8"))
                                                (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "8"))
                                                (rule "inEqSimp_homoInEq0" (formula "10") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                                                (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "8"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                (rule "mul_literals" (formula "9") (term "0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                                (rule "mul_literals" (formula "10") (term "0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0"))
                                                (rule "elimGcdEq" (formula "3") (inst "elimGcdRightDiv=l_1") (inst "elimGcdLeftDiv=div(mul(l_1, Z(2(#))), Z(2(#)))") (inst "elimGcd=Z(2(#))"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "mul_literals" (formula "3") (term "0,1,0,0,1"))
                                                (rule "mul_literals" (formula "3") (term "0,1,0,0,0"))
                                                (rule "mul_literals" (formula "3") (term "0,1,0,1,0"))
                                                (rule "add_literals" (formula "3") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1"))
                                                (rule "polySimp_pullOutFactor0" (formula "3") (term "0,0,1"))
                                                (rule "add_literals" (formula "3") (term "1,0,0,1"))
                                                (rule "times_zero_1" (formula "3") (term "0,0,1"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                                                (rule "polySimp_pullOutFactor0" (formula "3") (term "0,0,0"))
                                                (rule "add_literals" (formula "3") (term "1,0,0,0"))
                                                (rule "times_zero_1" (formula "3") (term "0,0,0"))
                                                (rule "leq_literals" (formula "3") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                (rule "polySimp_pullOutFactor0" (formula "3") (term "0,0"))
                                                (rule "add_literals" (formula "3") (term "1,0,0"))
                                                (rule "times_zero_1" (formula "3") (term "0,0"))
                                                (rule "qeq_literals" (formula "3") (term "0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "applyEqRigid" (formula "45") (term "0,0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "45") (term "1,1,1") (ifseqformula "3"))
                                                (rule "elimGcdGeq_antec" (formula "5") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                                (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0"))
                                                (rule "add_zero_right" (formula "5") (term "0,0,0,1,0"))
                                                (rule "leq_literals" (formula "5") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "times_zero_1" (formula "5") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "5") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                                (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "5") (term "0,0"))
                                                (rule "leq_literals" (formula "5") (term "0"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_left" (formula "45") (term "0") (ifseqformula "5"))
                                                 (builtin "One Step Simplification" (formula "45"))
                                                (rule "inEqSimp_geqRight" (formula "45"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                (rule "elimGcdGeq_antec" (formula "40") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                                (rule "add_zero_right" (formula "40") (term "0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "40") (term "1,0,1,0"))
                                                (rule "leq_literals" (formula "40") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "40"))
                                                (rule "times_zero_1" (formula "40") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "40") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "40") (term "0,0"))
                                                (rule "add_literals" (formula "40") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "40") (term "1,0,0"))
                                                (rule "add_literals" (formula "40") (term "0,0"))
                                                (rule "leq_literals" (formula "40") (term "0"))
                                                 (builtin "One Step Simplification" (formula "40"))
                                                (rule "elimGcdGeq" (formula "10") (term "1,0,0,1") (inst "elimGcdRightDiv=l_0") (inst "elimGcdLeftDiv=n") (inst "elimGcd=Z(2(#))"))
                                                (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0,0,1,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,1,0,0,1"))
                                                (rule "mul_literals" (formula "10") (term "0,0,0,0,0,1,0,1,0,0,1"))
                                                (rule "sub_literals" (formula "10") (term "0,0,0,0,0,0,0,1,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,1,0,0,1"))
                                                (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,1,0,1,0,0,1"))
                                                (rule "add_literals" (formula "10") (term "1,1,0,1,0,1,0,0,1"))
                                                (rule "times_zero_1" (formula "10") (term "1,0,1,0,1,0,0,1"))
                                                (rule "add_zero_right" (formula "10") (term "0,1,0,1,0,0,1"))
                                                (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0,0,1,0,0,1"))
                                                (rule "add_literals" (formula "10") (term "1,1,0,0,0,1,0,0,1"))
                                                (rule "times_zero_1" (formula "10") (term "1,0,0,0,1,0,0,1"))
                                                (rule "add_zero_right" (formula "10") (term "0,0,0,1,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,0,1,0,0,1"))
                                                (rule "polySimp_pullOutFactor0" (formula "10") (term "0,1,0,1,0,0,1"))
                                                (rule "add_literals" (formula "10") (term "1,0,1,0,1,0,0,1"))
                                                (rule "times_zero_1" (formula "10") (term "0,1,0,1,0,0,1"))
                                                (rule "leq_literals" (formula "10") (term "1,0,1,0,0,1"))
                                                 (builtin "One Step Simplification" (formula "10"))
                                                (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,1,0,0,1"))
                                                (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0,1,0,0,1"))
                                                (rule "add_literals" (formula "10") (term "1,1,0,0,1,0,0,1"))
                                                (rule "times_zero_1" (formula "10") (term "1,0,0,1,0,0,1"))
                                                (rule "add_zero_right" (formula "10") (term "0,0,1,0,0,1"))
                                                (rule "qeq_literals" (formula "10") (term "0,1,0,0,1"))
                                                 (builtin "One Step Simplification" (formula "10"))
                                                (rule "elimGcdGeq" (formula "11") (term "1,0,0,0,1") (inst "elimGcdRightDiv=l_0") (inst "elimGcdLeftDiv=n") (inst "elimGcd=Z(2(#))"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,1,0,0,0,1"))
                                                (rule "mul_literals" (formula "11") (term "0,0,0,0,0,1,0,1,0,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,1,0,0,0,1"))
                                                (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0,0,1,0,0,0,1"))
                                                (rule "sub_literals" (formula "11") (term "0,0,0,0,0,0,0,1,0,0,0,1"))
                                                (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,1,0,1,0,0,0,1"))
                                                (rule "add_literals" (formula "11") (term "1,1,0,1,0,1,0,0,0,1"))
                                                (rule "times_zero_1" (formula "11") (term "1,0,1,0,1,0,0,0,1"))
                                                (rule "add_zero_right" (formula "11") (term "0,1,0,1,0,0,0,1"))
                                                (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0,0,1,0,0,0,1"))
                                                (rule "add_literals" (formula "11") (term "1,1,0,0,0,1,0,0,0,1"))
                                                (rule "times_zero_1" (formula "11") (term "1,0,0,0,1,0,0,0,1"))
                                                (rule "add_zero_right" (formula "11") (term "0,0,0,1,0,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0,1,0,0,0,1"))
                                                (rule "polySimp_pullOutFactor0" (formula "11") (term "0,1,0,1,0,0,0,1"))
                                                (rule "add_literals" (formula "11") (term "1,0,1,0,1,0,0,0,1"))
                                                (rule "times_zero_1" (formula "11") (term "0,1,0,1,0,0,0,1"))
                                                (rule "leq_literals" (formula "11") (term "1,0,1,0,0,0,1"))
                                                 (builtin "One Step Simplification" (formula "11"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,1,0,0,0,1"))
                                                (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0,1,0,0,0,1"))
                                                (rule "add_literals" (formula "11") (term "1,1,0,0,1,0,0,0,1"))
                                                (rule "times_zero_1" (formula "11") (term "1,0,0,1,0,0,0,1"))
                                                (rule "add_literals" (formula "11") (term "0,0,1,0,0,0,1"))
                                                (rule "qeq_literals" (formula "11") (term "0,1,0,0,0,1"))
                                                 (builtin "One Step Simplification" (formula "11"))
                                                (rule "polyDiv_pullOut" (formula "4") (term "0") (inst "polyDivCoeff=l_1"))
                                                (rule "equal_literals" (formula "4") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0"))
                                                (rule "polySimp_pullOutFactor0" (formula "4") (term "0,0,0"))
                                                (rule "add_literals" (formula "4") (term "1,0,0,0"))
                                                (rule "times_zero_1" (formula "4") (term "0,0,0"))
                                                (rule "div_literals" (formula "4") (term "0,0"))
                                                (rule "add_zero_left" (formula "4") (term "0"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "true_left" (formula "4"))
                                                (rule "elimGcdGeq" (formula "10") (term "0") (inst "elimGcdRightDiv=add(Z(1(#)), l_1)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                                (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0"))
                                                (rule "sub_literals" (formula "10") (term "0,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "10") (term "0,0,0,0,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,0"))
                                                (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,1,0,0"))
                                                (rule "add_literals" (formula "10") (term "1,1,0,1,0,0"))
                                                (rule "times_zero_1" (formula "10") (term "1,0,1,0,0"))
                                                (rule "add_zero_right" (formula "10") (term "0,1,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "10") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "10") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "10") (term "0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "10") (term "0,0,1,0,0"))
                                                (rule "mul_literals" (formula "10") (term "0,0,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "10") (term "0,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "10") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,1,0,0"))
                                                (rule "add_literals" (formula "10") (term "1,1,0,1,0,0"))
                                                (rule "times_zero_1" (formula "10") (term "1,0,1,0,0"))
                                                (rule "add_zero_right" (formula "10") (term "0,1,0,0"))
                                                (rule "leq_literals" (formula "10") (term "1,0,0"))
                                                 (builtin "One Step Simplification" (formula "10"))
                                                (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "10") (term "0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "10") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "10") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "10") (term "0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "10") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0" (formula "10") (term "0,0,0"))
                                                (rule "add_literals" (formula "10") (term "1,0,0,0"))
                                                (rule "times_zero_1" (formula "10") (term "0,0,0"))
                                                (rule "qeq_literals" (formula "10") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "10"))
                                                (rule "elimGcdLeq" (formula "9") (term "0,0,0,1") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_1)") (inst "elimGcdLeftDiv=n") (inst "elimGcd=Z(2(#))"))
                                                (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,0,0,0,1"))
                                                (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0,0,0,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0,0,0,0,1"))
                                                (rule "mul_literals" (formula "9") (term "0,0,0,0,0,1,0,0,0,0,1"))
                                                (rule "sub_literals" (formula "9") (term "0,0,0,0,0,0,0,0,0,0,1"))
                                                (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,1,0,0,0,0,1"))
                                                (rule "add_literals" (formula "9") (term "1,1,0,1,0,0,0,0,1"))
                                                (rule "times_zero_1" (formula "9") (term "1,0,1,0,0,0,0,1"))
                                                (rule "add_zero_right" (formula "9") (term "0,1,0,0,0,0,1"))
                                                (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0,0,0,0,0,1"))
                                                (rule "add_literals" (formula "9") (term "1,1,0,0,0,0,0,0,1"))
                                                (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0,0,1"))
                                                (rule "add_zero_right" (formula "9") (term "0,0,0,0,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "9") (term "0,0,1,0,0,0,0,1"))
                                                (rule "mul_literals" (formula "9") (term "0,0,0,1,0,0,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0,0,0,1"))
                                                (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "9") (term "0,1,0,0,0,0,1"))
                                                (rule "polySimp_addComm1" (formula "9") (term "0,0,1,0,0,0,0,1"))
                                                (rule "add_literals" (formula "9") (term "0,0,0,1,0,0,0,0,1"))
                                                (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,1,0,0,0,0,1"))
                                                (rule "add_literals" (formula "9") (term "1,1,0,1,0,0,0,0,1"))
                                                (rule "times_zero_1" (formula "9") (term "1,0,1,0,0,0,0,1"))
                                                (rule "add_zero_right" (formula "9") (term "0,1,0,0,0,0,1"))
                                                (rule "qeq_literals" (formula "9") (term "1,0,0,0,0,1"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0,0,1"))
                                                (rule "add_literals" (formula "9") (term "0,0,0,0,0,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0,1"))
                                                (rule "polySimp_addComm1" (formula "9") (term "0,0,0,0,0,0,1"))
                                                (rule "add_literals" (formula "9") (term "0,0,0,0,0,0,0,1"))
                                                (rule "add_zero_left" (formula "9") (term "0,0,0,0,0,0,1"))
                                                (rule "polySimp_pullOutFactor0" (formula "9") (term "0,0,0,0,0,1"))
                                                (rule "add_literals" (formula "9") (term "1,0,0,0,0,0,1"))
                                                (rule "times_zero_1" (formula "9") (term "0,0,0,0,0,1"))
                                                (rule "leq_literals" (formula "9") (term "0,0,0,0,1"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "13"))
                                                (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                                                (rule "mul_literals" (formula "19") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "19") (term "0"))
                                                (rule "add_literals" (formula "19") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                                (rule "polySimp_elimOne" (formula "19") (term "0"))
                                                (rule "elimGcdLeq" (formula "9") (term "0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_1)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                                (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,0"))
                                                (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0,0,0"))
                                                (rule "sub_literals" (formula "9") (term "0,0,0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "9") (term "0,0,0,0,0,1,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "9") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "9") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "9") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,1,0,0"))
                                                (rule "add_literals" (formula "9") (term "1,1,0,1,0,0"))
                                                (rule "times_zero_1" (formula "9") (term "1,0,1,0,0"))
                                                (rule "add_zero_right" (formula "9") (term "0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "9") (term "0,0,1,0,0"))
                                                (rule "mul_literals" (formula "9") (term "0,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "9") (term "0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "9") (term "0,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "9") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,1,0,0"))
                                                (rule "add_literals" (formula "9") (term "1,1,0,1,0,0"))
                                                (rule "times_zero_1" (formula "9") (term "1,0,1,0,0"))
                                                (rule "add_zero_right" (formula "9") (term "0,1,0,0"))
                                                (rule "qeq_literals" (formula "9") (term "1,0,0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "polySimp_addAssoc" (formula "9") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "9") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "9") (term "0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "9") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0" (formula "9") (term "0,0,0"))
                                                (rule "add_literals" (formula "9") (term "1,0,0,0"))
                                                (rule "times_zero_1" (formula "9") (term "0,0,0"))
                                                (rule "leq_literals" (formula "9") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "elimGcdLeq" (formula "10") (term "0,0,0,1,1") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_1)") (inst "elimGcdLeftDiv=m") (inst "elimGcd=Z(2(#))"))
                                                (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0,0,0,0,0,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0,0,0,1,1"))
                                                (rule "sub_literals" (formula "10") (term "0,0,0,0,0,0,0,0,0,0,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,0,0,0,1,1"))
                                                (rule "mul_literals" (formula "10") (term "0,0,0,0,0,1,0,0,0,0,1,1"))
                                                (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0,0,0,0,0,1,1"))
                                                (rule "add_literals" (formula "10") (term "1,1,0,0,0,0,0,0,1,1"))
                                                (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0,0,1,1"))
                                                (rule "add_zero_right" (formula "10") (term "0,0,0,0,0,0,1,1"))
                                                (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,1,0,0,0,0,1,1"))
                                                (rule "add_literals" (formula "10") (term "1,1,0,1,0,0,0,0,1,1"))
                                                (rule "times_zero_1" (formula "10") (term "1,0,1,0,0,0,0,1,1"))
                                                (rule "add_zero_right" (formula "10") (term "0,1,0,0,0,0,1,1"))
                                                (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0,0,0,1,1"))
                                                (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0,0,0,1,1"))
                                                (rule "polySimp_rightDist" (formula "10") (term "0,0,1,0,0,0,0,1,1"))
                                                (rule "mul_literals" (formula "10") (term "0,0,0,1,0,0,0,0,1,1"))
                                                (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0,0,0,1,1"))
                                                (rule "add_literals" (formula "10") (term "0,0,0,0,0,0,0,0,1,1"))
                                                (rule "polySimp_addAssoc" (formula "10") (term "0,1,0,0,0,0,1,1"))
                                                (rule "polySimp_addComm1" (formula "10") (term "0,0,1,0,0,0,0,1,1"))
                                                (rule "add_literals" (formula "10") (term "0,0,0,1,0,0,0,0,1,1"))
                                                (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,1,0,0,0,0,1,1"))
                                                (rule "add_literals" (formula "10") (term "1,1,0,1,0,0,0,0,1,1"))
                                                (rule "times_zero_1" (formula "10") (term "1,0,1,0,0,0,0,1,1"))
                                                (rule "add_zero_right" (formula "10") (term "0,1,0,0,0,0,1,1"))
                                                (rule "qeq_literals" (formula "10") (term "1,0,0,0,0,1,1"))
                                                 (builtin "One Step Simplification" (formula "10"))
                                                (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0,1,1"))
                                                (rule "polySimp_addComm1" (formula "10") (term "0,0,0,0,0,0,1,1"))
                                                (rule "add_literals" (formula "10") (term "0,0,0,0,0,0,0,1,1"))
                                                (rule "add_zero_left" (formula "10") (term "0,0,0,0,0,0,1,1"))
                                                (rule "polySimp_pullOutFactor0" (formula "10") (term "0,0,0,0,0,1,1"))
                                                (rule "add_literals" (formula "10") (term "1,0,0,0,0,0,1,1"))
                                                (rule "times_zero_1" (formula "10") (term "0,0,0,0,0,1,1"))
                                                (rule "leq_literals" (formula "10") (term "0,0,0,0,1,1"))
                                                 (builtin "One Step Simplification" (formula "10"))
                                                (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "13"))
                                                (rule "polySimp_rightDist" (formula "39") (term "0,0"))
                                                (rule "mul_literals" (formula "39") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "39") (term "0"))
                                                (rule "add_literals" (formula "39") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "39"))
                                                (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                                                (rule "elimGcdLeq_antec" (formula "39") (inst "elimGcdRightDiv=Z(1(1(9(0(7(8(6(3(5(#))))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                                (rule "polySimp_mulLiterals" (formula "39") (term "1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0,0,1,0"))
                                                (rule "neg_literal" (formula "39") (term "0,0,0,0,0,1,0"))
                                                (rule "leq_literals" (formula "39") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "39"))
                                                (rule "mul_literals" (formula "39") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_addLiterals" (formula "39") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "39") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "39") (term "0,0"))
                                                (rule "add_literals" (formula "39") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "39") (term "1,0,0"))
                                                (rule "add_literals" (formula "39") (term "0,0"))
                                                (rule "qeq_literals" (formula "39") (term "0"))
                                                 (builtin "One Step Simplification" (formula "39"))
                                                (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "13"))
                                                (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                                (rule "mul_literals" (formula "6") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                (rule "add_literals" (formula "6") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                                (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                (rule "elimGcdLeq_antec" (formula "6") (inst "elimGcdRightDiv=Z(1(1(9(0(7(8(6(3(5(#))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                                (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0"))
                                                (rule "neg_literal" (formula "6") (term "0,0,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,0,1,0"))
                                                (rule "leq_literals" (formula "6") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "mul_literals" (formula "6") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_addLiterals" (formula "6") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                                (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                (rule "add_literals" (formula "6") (term "0,0"))
                                                (rule "qeq_literals" (formula "6") (term "0"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "boxToDiamond" (formula "2") (term "1"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "nnf_imp2or" (formula "14") (term "1,0"))
                                                (rule "nnf_imp2or" (formula "15") (term "1,0,1,0"))
                                                (rule "nnf_imp2or" (formula "25") (term "0"))
                                                (rule "nnf_imp2or" (formula "26") (term "0"))
                                                (rule "commute_and" (formula "14") (term "0,0"))
                                                (rule "commute_and" (formula "15") (term "0,0"))
                                                (rule "jdiv_axiom" (formula "17") (term "1,0"))
                                                (rule "eqSymm" (formula "17"))
                                                (rule "inEqSimp_subsumption1" (formula "17") (term "0,0") (ifseqformula "12"))
                                                (rule "leq_literals" (formula "17") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "17"))
                                                (rule "eqSymm" (formula "17"))
                                                (rule "applyEq" (formula "27") (term "1,1,0,0,0,0") (ifseqformula "17"))
                                                (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "17"))
                                                (rule "applyEqRigid" (formula "24") (term "0") (ifseqformula "17"))
                                                (rule "applyEq" (formula "14") (term "1,1,1,0,0") (ifseqformula "17"))
                                                (rule "applyEq" (formula "26") (term "1,1,0,0,0,0") (ifseqformula "17"))
                                                (rule "applyEq" (formula "15") (term "1,1,1,0,0") (ifseqformula "17"))
                                                (rule "applyEq" (formula "15") (term "1,1,0,0,0,1,0") (ifseqformula "17"))
                                                (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "1"))
                                                (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                                (rule "mul_literals" (formula "24") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "24") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                                (rule "polySimp_elimOne" (formula "24") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "24"))
                                                (rule "times_zero_1" (formula "23") (term "0,0"))
                                                (rule "add_zero_left" (formula "23") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                                (rule "mul_literals" (formula "23") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "23"))
                                                (rule "leq_literals" (formula "4") (term "0"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "true_left" (formula "4"))
                                                (rule "div_axiom" (formula "45") (term "0,0") (inst "quotient=quotient_0"))
                                                (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "mul_literals" (formula "1") (term "1,1,1,1"))
                                                (rule "equal_literals" (formula "1") (term "0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                (rule "add_literals" (formula "3") (term "0,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "3"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                (rule "applyEqRigid" (formula "48") (term "0,0") (ifseqformula "1"))
                                                (rule "eqSymm" (formula "48"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                (rule "mul_literals" (formula "3") (term "0,1"))
                                                (rule "inEqSimp_strengthen1" (formula "2") (ifseqformula "48"))
                                                (rule "inEqSimp_contradEq7" (formula "48") (ifseqformula "2"))
                                                (rule "polySimp_mulAssoc" (formula "48") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "48") (term "0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "48") (term "1,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "48") (term "0,0"))
                                                (rule "add_literals" (formula "48") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "48") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "48") (term "0,0"))
                                                (rule "leq_literals" (formula "48") (term "0"))
                                                 (builtin "One Step Simplification" (formula "48"))
                                                (rule "false_right" (formula "48"))
                                                (rule "inEqSimp_antiSymm" (formula "2") (ifseqformula "3"))
                                                (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "2"))
                                                (rule "inEqSimp_homoInEq0" (formula "4"))
                                                (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                                                (rule "add_literals" (formula "4") (term "1,0"))
                                                (rule "times_zero_1" (formula "4") (term "0"))
                                                (rule "qeq_literals" (formula "4"))
                                                (rule "true_left" (formula "4"))
                                                (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "3"))
                                                (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                                                (rule "add_literals" (formula "3") (term "1,0"))
                                                (rule "times_zero_1" (formula "3") (term "0"))
                                                (rule "leq_literals" (formula "3"))
                                                (rule "true_left" (formula "3"))
                                                (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "2"))
                                                (rule "polyDiv_pullOut" (formula "1") (term "0") (inst "polyDivCoeff=quotient_0"))
                                                (rule "equal_literals" (formula "1") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0"))
                                                (rule "polySimp_homoEq" (formula "1"))
                                                (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1,0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,0,0,1,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0,0,1,0"))
                                                (rule "add_zero_right" (formula "1") (term "0,0,0,1,0"))
                                                (rule "div_literals" (formula "1") (term "0,0,1,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,1,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                                (rule "add_literals" (formula "1") (term "1,0"))
                                                (rule "times_zero_1" (formula "1") (term "0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "true_left" (formula "1"))
                                                (rule "nnf_imp2or" (formula "9") (term "0,1"))
                                                (rule "nnf_imp2or" (formula "10") (term "0,1,1"))
                                                (rule "nnf_imp2or" (formula "10") (term "0,0,1"))
                                                (rule "nnf_imp2or" (formula "28") (term "1,0"))
                                                (rule "nnf_imp2or" (formula "29") (term "1,0"))
                                                (rule "nnf_imp2or" (formula "14") (term "0"))
                                                (rule "nnf_imp2or" (formula "15") (term "0"))
                                                (rule "nnf_notAnd" (formula "29") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "29") (term "1,0,0"))
                                                (rule "times_zero_1" (formula "29") (term "1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "29") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                                                (rule "mul_literals" (formula "29") (term "1,1,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "29") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "29") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "29") (term "0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "29") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "29") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "28") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "28") (term "1,0,0"))
                                                (rule "times_zero_1" (formula "28") (term "1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "28") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                                                (rule "mul_literals" (formula "28") (term "1,1,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "28") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "28") (term "0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "28") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "28") (term "1,0,0,0"))
                                                (rule "jdiv_axiom" (formula "40") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "40") (term "0,0,2,1"))
                                                (rule "eqSymm" (formula "40"))
                                                (rule "applyEqRigid" (formula "40") (term "1") (ifseqformula "41"))
                                                (rule "inEqSimp_subsumption6" (formula "40") (term "0,0") (ifseqformula "45"))
                                                (rule "times_zero_1" (formula "40") (term "1,1,0,0,0"))
                                                (rule "greater_literals" (formula "40") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "40"))
                                                (rule "leq_literals" (formula "40") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "40"))
                                                (rule "polyDiv_pullOut" (formula "40") (term "0") (inst "polyDivCoeff=l_0"))
                                                (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,2,0"))
                                                (rule "equal_literals" (formula "40") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "40"))
                                                (rule "polySimp_homoEq" (formula "40"))
                                                (rule "polySimp_pullOutFactor0" (formula "40") (term "0,0,0,1,0"))
                                                (rule "add_literals" (formula "40") (term "1,0,0,0,1,0"))
                                                (rule "times_zero_1" (formula "40") (term "0,0,0,1,0"))
                                                (rule "div_literals" (formula "40") (term "0,0,1,0"))
                                                (rule "add_zero_left" (formula "40") (term "0,1,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "40") (term "0"))
                                                (rule "add_literals" (formula "40") (term "1,0"))
                                                (rule "times_zero_1" (formula "40") (term "0"))
                                                 (builtin "One Step Simplification" (formula "40"))
                                                (rule "true_left" (formula "40"))
                                                (rule "nnf_notAnd" (formula "14") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
                                                (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                                (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "15") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "15") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                                (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "9") (term "0,0,1"))
                                                (rule "inEqSimp_notLeq" (formula "9") (term "0,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0,1"))
                                                (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0,1"))
                                                (rule "add_literals" (formula "9") (term "0,0,0,0,0,0,1"))
                                                (rule "add_zero_left" (formula "9") (term "0,0,0,0,0,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,1"))
                                                (rule "polySimp_elimOne" (formula "9") (term "1,0,0,0,1"))
                                                (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,1"))
                                                (rule "mul_literals" (formula "9") (term "0,1,1,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,1"))
                                                (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,1"))
                                                (rule "nnf_notAnd" (formula "28") (term "0,1,0"))
                                                 (builtin "One Step Simplification" (formula "28"))
                                                (rule "inEqSimp_notLeq" (formula "28") (term "1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,1,0,1,0"))
                                                (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,1,0"))
                                                (rule "add_literals" (formula "28") (term "0,0,0,1,0,1,0"))
                                                (rule "add_zero_left" (formula "28") (term "0,0,1,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,1,0"))
                                                (rule "nnf_notAnd" (formula "29") (term "0,1,0"))
                                                 (builtin "One Step Simplification" (formula "29"))
                                                (rule "inEqSimp_notGeq" (formula "29") (term "1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,1,0,1,0"))
                                                (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,1,0"))
                                                (rule "add_literals" (formula "29") (term "0,0,0,1,0,1,0"))
                                                (rule "add_zero_left" (formula "29") (term "0,0,1,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,1,0"))
                                                (rule "nnf_imp2or" (formula "15") (term "0,1,0"))
                                                (rule "nnf_notAnd" (formula "10") (term "0,0,1,1"))
                                                (rule "inEqSimp_notLeq" (formula "10") (term "0,0,0,1,1"))
                                                (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0,1,1"))
                                                (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0,1,1"))
                                                (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0,1,1"))
                                                (rule "add_literals" (formula "10") (term "0,0,0,0,0,0,1,1"))
                                                (rule "add_zero_left" (formula "10") (term "0,0,0,0,0,1,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,0,0,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,1,1"))
                                                (rule "polySimp_elimOne" (formula "10") (term "1,0,0,0,1,1"))
                                                (rule "inEqSimp_notGeq" (formula "10") (term "1,0,0,1,1"))
                                                (rule "times_zero_1" (formula "10") (term "1,0,0,1,0,0,1,1"))
                                                (rule "add_zero_right" (formula "10") (term "0,0,1,0,0,1,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,1,1"))
                                                (rule "mul_literals" (formula "10") (term "1,1,0,0,1,1"))
                                                (rule "nnf_notAnd" (formula "10") (term "0,0,0,1"))
                                                (rule "inEqSimp_notLeq" (formula "10") (term "0,0,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0,0,1"))
                                                (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0,0,1"))
                                                (rule "add_literals" (formula "10") (term "0,0,0,0,0,0,0,1"))
                                                (rule "add_zero_left" (formula "10") (term "0,0,0,0,0,0,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,0,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0,1"))
                                                (rule "polySimp_elimOne" (formula "10") (term "1,0,0,0,0,1"))
                                                (rule "inEqSimp_notGeq" (formula "10") (term "1,0,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,0,1"))
                                                (rule "mul_literals" (formula "10") (term "0,1,1,0,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,0,1"))
                                                (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,0,1"))
                                                (rule "jdiv_axiom" (formula "7") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "7") (term "0,0,2,1"))
                                                (rule "eqSymm" (formula "7"))
                                                (rule "applyEq" (formula "7") (term "1") (ifseqformula "8"))
                                                (rule "inEqSimp_subsumption6" (formula "7") (term "0,0") (ifseqformula "24"))
                                                (rule "mul_literals" (formula "7") (term "1,1,0,0,0"))
                                                (rule "greater_literals" (formula "7") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "leq_literals" (formula "7") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "polyDiv_pullOut" (formula "7") (term "0") (inst "polyDivCoeff=l_1"))
                                                (rule "equal_literals" (formula "7") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0"))
                                                (rule "polySimp_homoEq" (formula "7"))
                                                (rule "polySimp_pullOutFactor0" (formula "7") (term "0,0,0,1,0"))
                                                (rule "add_literals" (formula "7") (term "1,0,0,0,1,0"))
                                                (rule "times_zero_1" (formula "7") (term "0,0,0,1,0"))
                                                (rule "div_literals" (formula "7") (term "0,0,1,0"))
                                                (rule "add_zero_left" (formula "7") (term "0,1,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "7") (term "0"))
                                                (rule "add_literals" (formula "7") (term "1,0"))
                                                (rule "times_zero_1" (formula "7") (term "0"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "true_left" (formula "7"))
                                                (rule "div_axiom" (formula "2") (term "0") (inst "quotient=quotient_1"))
                                                (rule "qeq_literals" (formula "2") (term "0,1,1"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "equal_literals" (formula "2") (term "0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "mul_literals" (formula "2") (term "1,1,1"))
                                                (rule "andLeft" (formula "2"))
                                                (rule "andLeft" (formula "2"))
                                                (rule "polySimp_addComm1" (formula "4") (term "1"))
                                                (rule "add_literals" (formula "4") (term "0,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "3"))
                                                (rule "inEqSimp_homoInEq1" (formula "4"))
                                                (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                (rule "applyEqRigid" (formula "18") (term "1,1,0,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "32") (term "1,0,0,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "29") (term "0") (ifseqformula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "29"))
                                                (rule "polySimp_addComm1" (formula "29") (term "0"))
                                                (rule "applyEqRigid" (formula "21") (term "1,0") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "31") (term "1,0,0,0") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "5") (term "0") (ifseqformula "2"))
                                                (rule "inEqSimp_commuteLeq" (formula "5"))
                                                (rule "applyEqRigid" (formula "17") (term "1,1,0,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "18") (term "1,1,0,0,0,0,1,0") (ifseqformula "2"))
                                                (rule "applyEqRigid" (formula "20") (term "1") (ifseqformula "2"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                (rule "mul_literals" (formula "4") (term "0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "29"))
                                                (rule "polySimp_mulComm0" (formula "29") (term "1"))
                                                (rule "polySimp_rightDist" (formula "29") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "29") (term "1,1"))
                                                (rule "mul_literals" (formula "29") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "29") (term "1,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "29"))
                                                (rule "times_zero_1" (formula "27") (term "0,0"))
                                                (rule "add_zero_left" (formula "27") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "27"))
                                                (rule "mul_literals" (formula "27") (term "1"))
                                                (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "4"))
                                                (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                                                (rule "mul_literals" (formula "9") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                                (rule "add_literals" (formula "9") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "9") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                                                (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                (rule "elimGcdLeq_antec" (formula "9") (inst "elimGcdRightDiv=quotient_1") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                                (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0"))
                                                (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,1,0"))
                                                (rule "neg_literal" (formula "9") (term "0,0,0,0,0,1,0"))
                                                (rule "leq_literals" (formula "9") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                                                (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "9") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                                                (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                                (rule "add_literals" (formula "9") (term "0,0"))
                                                (rule "qeq_literals" (formula "9") (term "0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "4"))
                                                (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                                                (rule "mul_literals" (formula "25") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                                                (rule "add_literals" (formula "25") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "25") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                                (rule "polySimp_elimOne" (formula "25") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "4"))
                                                (rule "mul_literals" (formula "16") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                                (rule "add_literals" (formula "16") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                                (rule "mul_literals" (formula "16") (term "1"))
                                                (rule "elimGcdGeq_antec" (formula "16") (inst "elimGcdRightDiv=Z(4(#))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(2(#))"))
                                                (rule "leq_literals" (formula "16") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "16"))
                                                (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
                                                (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "16") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "16") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                                                (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                                (rule "add_literals" (formula "16") (term "0,0"))
                                                (rule "leq_literals" (formula "16") (term "0"))
                                                 (builtin "One Step Simplification" (formula "16"))
                                                (rule "inEqSimp_subsumption1" (formula "30") (ifseqformula "16"))
                                                (rule "leq_literals" (formula "30") (term "0"))
                                                 (builtin "One Step Simplification" (formula "30"))
                                                (rule "true_left" (formula "30"))
                                                (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "8"))
                                                (rule "polySimp_mulComm0" (formula "5") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "5") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                                (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "19"))
                                                (rule "polySimp_mulAssoc" (formula "3") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "3") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                (rule "inEqSimp_subsumption4" (formula "3") (ifseqformula "6"))
                                                (rule "mul_literals" (formula "3") (term "0,1,0"))
                                                (rule "greater_literals" (formula "3") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "leq_literals" (formula "3") (term "0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "true_left" (formula "3"))
                                                (rule "inEqSimp_exactShadow3" (formula "50") (ifseqformula "4"))
                                                (rule "polySimp_rightDist" (formula "50") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "50") (term "1,0,0"))
                                                (rule "mul_literals" (formula "50") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "50") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "50") (term "0,0"))
                                                (rule "add_literals" (formula "50") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "50") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "50"))
                                                (rule "polySimp_mulLiterals" (formula "50") (term "0"))
                                                (rule "elimGcdLeq_antec" (formula "50") (inst "elimGcdRightDiv=quotient_1") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                                (rule "polySimp_mulLiterals" (formula "50") (term "1,0,1,0"))
                                                (rule "mul_literals" (formula "50") (term "0,1,0,0,0,0,1,0"))
                                                (rule "leq_literals" (formula "50") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "neg_literal" (formula "50") (term "0,0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "50") (term "0,0"))
                                                (rule "add_literals" (formula "50") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "50") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "50") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "50") (term "0,0"))
                                                (rule "add_literals" (formula "50") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "50") (term "1,0,0"))
                                                (rule "add_literals" (formula "50") (term "0,0"))
                                                (rule "qeq_literals" (formula "50") (term "0"))
                                                 (builtin "One Step Simplification" (formula "50"))
                                                (rule "inEqSimp_antiSymm" (formula "6") (ifseqformula "10"))
                                                (rule "applyEq" (formula "15") (term "1,0,0,0,1") (ifseqformula "6"))
                                                (rule "applyEqRigid" (formula "12") (term "0,1,1") (ifseqformula "6"))
                                                (rule "applyEqRigid" (formula "15") (term "1,1,0") (ifseqformula "6"))
                                                (rule "applyEq" (formula "33") (term "1,1") (ifseqformula "6"))
                                                (rule "applyEqRigid" (formula "9") (term "0,0,2,0") (ifseqformula "6"))
                                                (rule "applyEq" (formula "10") (term "0") (ifseqformula "6"))
                                                (rule "applyEq" (formula "7") (term "0") (ifseqformula "6"))
                                                (rule "inEqSimp_homoInEq1" (formula "7"))
                                                (rule "polySimp_pullOutFactor1" (formula "7") (term "0"))
                                                (rule "add_literals" (formula "7") (term "1,0"))
                                                (rule "times_zero_1" (formula "7") (term "0"))
                                                (rule "leq_literals" (formula "7"))
                                                (rule "true_left" (formula "7"))
                                                (rule "applyEqRigid" (formula "11") (term "0,0,0") (ifseqformula "6"))
                                                (rule "applyEq" (formula "9") (term "0") (ifseqformula "6"))
                                                (rule "inEqSimp_homoInEq0" (formula "9"))
                                                (rule "polySimp_pullOutFactor1" (formula "9") (term "0"))
                                                (rule "add_literals" (formula "9") (term "1,0"))
                                                (rule "times_zero_1" (formula "9") (term "0"))
                                                (rule "qeq_literals" (formula "9"))
                                                (rule "true_left" (formula "9"))
                                                (rule "applyEqRigid" (formula "13") (term "1,0,0,0,1,1") (ifseqformula "6"))
                                                (rule "applyEqRigid" (formula "13") (term "1,1,0") (ifseqformula "6"))
                                                (rule "applyEqRigid" (formula "28") (term "0") (ifseqformula "6"))
                                                (rule "applyEqRigid" (formula "11") (term "0,1") (ifseqformula "6"))
                                                (rule "applyEqRigid" (formula "10") (term "1") (ifseqformula "6"))
                                                (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "9"))
                                                (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                                (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                (rule "add_literals" (formula "3") (term "0,0"))
                                                (rule "qeq_literals" (formula "3") (term "0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "true_left" (formula "3"))
                                                (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "14"))
                                                (rule "leq_literals" (formula "27") (term "0"))
                                                 (builtin "One Step Simplification" (formula "27"))
                                                (rule "true_left" (formula "27"))
                                                (rule "inEqSimp_contradInEq0" (formula "12") (term "0") (ifseqformula "45"))
                                                (rule "inEqSimp_homoInEq1" (formula "12") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,0"))
                                                (rule "add_literals" (formula "12") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "12") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "12") (term "0,0,0"))
                                                (rule "leq_literals" (formula "12") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "true_left" (formula "12"))
                                                (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "23"))
                                                (rule "times_zero_1" (formula "21") (term "0,0"))
                                                (rule "add_zero_left" (formula "21") (term "0"))
                                                (rule "inEqSimp_subsumption6" (formula "21") (ifseqformula "13"))
                                                (rule "mul_literals" (formula "21") (term "1,1,0"))
                                                (rule "greater_literals" (formula "21") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "21"))
                                                (rule "leq_literals" (formula "21") (term "0"))
                                                 (builtin "One Step Simplification" (formula "21"))
                                                (rule "true_left" (formula "21"))
                                                (rule "inEqSimp_exactShadow3" (formula "46") (ifseqformula "44"))
                                                (rule "times_zero_1" (formula "46") (term "0,0"))
                                                (rule "add_zero_left" (formula "46") (term "0"))
                                                (rule "inEqSimp_subsumption1" (formula "46") (ifseqformula "13"))
                                                (rule "leq_literals" (formula "46") (term "0"))
                                                 (builtin "One Step Simplification" (formula "46"))
                                                (rule "true_left" (formula "46"))
                                                (rule "inEqSimp_antiSymm" (formula "8") (ifseqformula "3"))
                                                (rule "applyEq" (formula "31") (term "1,1,1,1,0,0,0,1,1,0") (ifseqformula "8"))
                                                (rule "applyEqRigid" (formula "31") (term "1,0,1,0,1,0") (ifseqformula "8"))
                                                (rule "applyEqRigid" (formula "2") (term "0,0") (ifseqformula "8"))
                                                (rule "applyEqRigid" (formula "31") (term "1,1,1,1,0,0,0,0,1,1,0") (ifseqformula "8"))
                                                (rule "applyEqRigid" (formula "9") (term "0") (ifseqformula "8"))
                                                (rule "inEqSimp_homoInEq1" (formula "9"))
                                                (rule "polySimp_pullOutFactor1" (formula "9") (term "0"))
                                                (rule "add_literals" (formula "9") (term "1,0"))
                                                (rule "times_zero_1" (formula "9") (term "0"))
                                                (rule "leq_literals" (formula "9"))
                                                (rule "true_left" (formula "9"))
                                                (rule "applyEq" (formula "3") (term "0") (ifseqformula "8"))
                                                (rule "inEqSimp_homoInEq0" (formula "3"))
                                                (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                                                (rule "add_literals" (formula "3") (term "1,0"))
                                                (rule "times_zero_1" (formula "3") (term "0"))
                                                (rule "qeq_literals" (formula "3"))
                                                (rule "true_left" (formula "3"))
                                                (rule "applyEqRigid" (formula "14") (term "0") (ifseqformula "7"))
                                                (rule "inEqSimp_homoInEq0" (formula "14"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0"))
                                                (rule "mul_literals" (formula "14") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                                (rule "add_literals" (formula "14") (term "0,0"))
                                                (rule "applyEqRigid" (formula "44") (term "0") (ifseqformula "7"))
                                                (rule "inEqSimp_homoInEq1" (formula "44"))
                                                (rule "polySimp_mulComm0" (formula "44") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "44") (term "1,0"))
                                                (rule "mul_literals" (formula "44") (term "0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0"))
                                                (rule "polySimp_addComm1" (formula "44") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "44") (term "0,0"))
                                                (rule "add_literals" (formula "44") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "44") (term "0,0"))
                                                (rule "applyEq" (formula "23") (term "0") (ifseqformula "7"))
                                                (rule "inEqSimp_homoInEq1" (formula "23"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                                (rule "mul_literals" (formula "23") (term "0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0"))
                                                (rule "polySimp_addComm1" (formula "23") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "23") (term "0,0"))
                                                (rule "add_literals" (formula "23") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "23") (term "0,0"))
                                                (rule "applyEq" (formula "39") (term "1,0") (ifseqformula "7"))
                                                (rule "applyEqRigid" (formula "13") (term "0") (ifseqformula "7"))
                                                (rule "inEqSimp_homoInEq1" (formula "13"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                                (rule "mul_literals" (formula "13") (term "0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                                (rule "add_literals" (formula "13") (term "0,0"))
                                                (rule "applyEq" (formula "28") (term "1,0,1,0,1,0") (ifseqformula "7"))
                                                (rule "applyEqRigid" (formula "28") (term "1,0,1,1,0,0,1,1,0") (ifseqformula "7"))
                                                (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "7"))
                                                (rule "applyEqRigid" (formula "29") (term "1,1,0,1,0,0,1,1,0") (ifseqformula "7"))
                                                (rule "polySimp_addAssoc" (formula "29") (term "1,0,1,0,0,1,1,0"))
                                                (rule "add_literals" (formula "29") (term "0,1,0,1,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "29") (term "1,0,1,0,0,1,1,0"))
                                                (rule "applyEq" (formula "29") (term "1,1,0,0,0,0,0,0,1,1,0") (ifseqformula "7"))
                                                (rule "polySimp_addAssoc" (formula "29") (term "1,0,0,0,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "29") (term "0,1,0,0,0,0,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "29") (term "1,0,0,0,0,0,0,1,1,0"))
                                                (rule "applyEq" (formula "24") (term "1") (ifseqformula "7"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "44"))
                                                (rule "polySimp_mulLiterals" (formula "44") (term "1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "23"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "1"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                                (rule "inEqSimp_subsumption4" (formula "14") (ifseqformula "3"))
                                                (rule "mul_literals" (formula "14") (term "0,1,0"))
                                                (rule "greater_literals" (formula "14") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "14"))
                                                (rule "leq_literals" (formula "14") (term "0"))
                                                 (builtin "One Step Simplification" (formula "14"))
                                                (rule "true_left" (formula "14"))
                                                (rule "inEqSimp_subsumption4" (formula "42") (ifseqformula "41"))
                                                (rule "greater_literals" (formula "42") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "42"))
                                                (rule "polySimp_mulComm0" (formula "42") (term "0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "42") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0"))
                                                (rule "polySimp_pullOutFactor0" (formula "42") (term "0,0"))
                                                (rule "add_literals" (formula "42") (term "1,0,0"))
                                                (rule "times_zero_1" (formula "42") (term "0,0"))
                                                (rule "qeq_literals" (formula "42") (term "0"))
                                                 (builtin "One Step Simplification" (formula "42"))
                                                (rule "true_left" (formula "42"))
                                                (rule "inEqSimp_subsumption6" (formula "13") (ifseqformula "12"))
                                                (rule "mul_literals" (formula "13") (term "1,1,0"))
                                                (rule "greater_literals" (formula "13") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "13"))
                                                (rule "leq_literals" (formula "13") (term "0"))
                                                 (builtin "One Step Simplification" (formula "13"))
                                                (rule "true_left" (formula "13"))
                                                (rule "elimGcdLeq" (formula "26") (term "0,0,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=quotient_1") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                                (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "26") (term "0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "sub_literals" (formula "26") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,1,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "26") (term "1,1,0,1,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "26") (term "1,0,1,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "26") (term "0,1,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "26") (term "1,1,0,0,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "26") (term "0,0,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "0,0,1,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_pullOutFactor0" (formula "26") (term "0,1,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "26") (term "1,0,1,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "26") (term "0,1,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "qeq_literals" (formula "26") (term "1,0,0,0,0,0,0,0,1,1,0"))
                                                 (builtin "One Step Simplification" (formula "26"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "26") (term "1,1,0,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "26") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "leq_literals" (formula "26") (term "0,0,0,0,0,0,0,1,1,0"))
                                                 (builtin "One Step Simplification" (formula "26"))
                                                (rule "polyDiv_pullOut" (formula "2") (term "0") (inst "polyDivCoeff=quotient_1"))
                                                (rule "equal_literals" (formula "2") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0,0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "2") (term "1,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,0"))
                                                (rule "div_literals" (formula "2") (term "0,0"))
                                                (rule "add_zero_left" (formula "2") (term "0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "elimGcdLeq" (formula "25") (term "0,1,0,0,1,1,0") (inst "elimGcdRightDiv=quotient_1") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                                (rule "mul_literals" (formula "25") (term "0,0,0,0,0,1,0,0,1,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0,0,1,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,0,0,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                                                (rule "sub_literals" (formula "25") (term "0,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,1,0,0,1,0,0,1,1,0"))
                                                (rule "add_literals" (formula "25") (term "1,1,0,1,0,0,1,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "25") (term "1,0,1,0,0,1,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "25") (term "0,1,0,0,1,0,0,1,1,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,0,0,0,1,0,0,1,1,0"))
                                                (rule "add_literals" (formula "25") (term "1,1,0,0,0,0,1,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,1,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "25") (term "0,0,0,0,1,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "0,0,1,0,0,1,0,0,1,1,0"))
                                                (rule "polySimp_pullOutFactor0" (formula "25") (term "0,1,0,0,1,0,0,1,1,0"))
                                                (rule "add_literals" (formula "25") (term "1,0,1,0,0,1,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "25") (term "0,1,0,0,1,0,0,1,1,0"))
                                                (rule "qeq_literals" (formula "25") (term "1,0,0,1,0,0,1,1,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,1,0,0,1,1,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,0,0,1,0,0,1,1,0"))
                                                (rule "add_literals" (formula "25") (term "1,1,0,0,0,1,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "25") (term "1,0,0,0,1,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "25") (term "0,0,0,1,0,0,1,1,0"))
                                                (rule "leq_literals" (formula "25") (term "0,0,1,0,0,1,1,0"))
                                                 (builtin "One Step Simplification" (formula "25"))
                                                (rule "nnf_notAnd" (formula "13") (term "0,1,0,1,0"))
                                                 (builtin "One Step Simplification" (formula "13"))
                                                (rule "methodBodyExpand" (formula "41") (term "1") (newnames "heapBefore_maskNull_0,savedHeapBefore_maskNull"))
                                                 (builtin "One Step Simplification" (formula "41"))
                                                (rule "commute_or_2" (formula "12") (term "0"))
                                                (rule "commute_or" (formula "24") (term "0,0"))
                                                (rule "nnf_imp2or" (formula "24") (term "0,1,1,0"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "16") (term "1,0,0,2,0") (ifseqformula "27"))
                                                (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "43"))
                                                 (builtin "One Step Simplification" (formula "16"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "24") (term "0") (ifseqformula "28"))
                                                (rule "replace_known_left" (formula "24") (term "0") (ifseqformula "25"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "true_left" (formula "24"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "44") (term "0") (ifseqformula "28"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "45"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "nnf_imp2or" (formula "27") (term "0,1,1,0"))
                                                (rule "nnf_notAnd" (formula "14") (term "0,0,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "14") (term "0,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0,1,0"))
                                                (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0,1,0"))
                                                (rule "add_literals" (formula "14") (term "0,0,0,0,0,0,1,0"))
                                                (rule "add_zero_left" (formula "14") (term "0,0,0,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "14") (term "1,0,0,0,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "14") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1,0"))
                                                (rule "nnf_notAnd" (formula "26") (term "0,0,1,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "26") (term "0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "26") (term "0,0,0,0,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "26") (term "0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "26") (term "1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "26") (term "1,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "26") (term "0,1,1,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0,1,1,0"))
                                                (rule "nnf_notAnd" (formula "27") (term "0,0,1,1,0"))
                                                (rule "commute_or" (formula "10") (term "0,0,1"))
                                                (rule "nnf_notOr" (formula "27") (term "1,0,0,1,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "27") (term "0,1,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,1,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,1,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "27") (term "1,0,1,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "27") (term "1,0,1,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "27") (term "0,1,0,1,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "27") (term "1,1,0,1,0,0,1,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "27") (term "1,1,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "27") (term "1,0,0,1,1,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "27") (term "0,0,1,1,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,1,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "27") (term "1,1,1,0,0,1,1,0"))
                                                (rule "nnf_notAnd" (formula "27") (term "0,0,0,1,1,0"))
                                                (rule "nnf_notOr" (formula "27") (term "1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "27") (term "0,1,0,0,0,1,1,0"))
                                                (rule "times_zero_1" (formula "27") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                                (rule "add_zero_right" (formula "27") (term "0,0,0,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,1,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "27") (term "1,0,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "27") (term "1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "27") (term "1,1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "27") (term "1,1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,1,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "27") (term "0,1,1,1,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "27") (term "1,1,1,1,0,0,0,1,1,0"))
                                                (rule "nnf_notAnd" (formula "27") (term "0,0,0,0,1,1,0"))
                                                (rule "nnf_notOr" (formula "27") (term "0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "27") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "27") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "27") (term "0,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0,0,0,0,1,1,0"))
                                                (rule "nnf_notOr" (formula "27") (term "1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "27") (term "1,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "27") (term "1,1,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "27") (term "1,1,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,1,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "27") (term "0,1,1,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "27") (term "1,1,1,1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_notLeq" (formula "27") (term "0,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "mul_literals" (formula "27") (term "0,1,0,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "add_literals" (formula "27") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "add_zero_left" (formula "27") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,0,0,0,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "27") (term "1,0,1,0,0,0,0,1,1,0"))
                                                (rule "jdiv_axiom" (formula "8") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "8") (term "0,0,2,1"))
                                                (rule "eqSymm" (formula "8"))
                                                (rule "applyEqRigid" (formula "8") (term "1") (ifseqformula "9"))
                                                (rule "inEqSimp_subsumption6" (formula "8") (term "0,0") (ifseqformula "13"))
                                                (rule "greater_literals" (formula "8") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "8"))
                                                (rule "mul_literals" (formula "8") (term "1,0,0,0"))
                                                (rule "leq_literals" (formula "8") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "8"))
                                                (rule "polyDiv_pullOut" (formula "8") (term "0") (inst "polyDivCoeff=quotient_1"))
                                                (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,2,0"))
                                                (rule "equal_literals" (formula "8") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "8"))
                                                (rule "polySimp_pullOutFactor0" (formula "8") (term "0,0,0"))
                                                (rule "add_literals" (formula "8") (term "1,0,0,0"))
                                                (rule "times_zero_1" (formula "8") (term "0,0,0"))
                                                (rule "div_literals" (formula "8") (term "0,0"))
                                                (rule "add_zero_left" (formula "8") (term "0"))
                                                 (builtin "One Step Simplification" (formula "8"))
                                                (rule "true_left" (formula "8"))
                                                (rule "commute_or" (formula "27") (term "0,0"))
                                                (rule "commute_or" (formula "13") (term "0,0"))
                                                (rule "shift_paren_or" (formula "14") (term "0,1,0"))
                                                (rule "commute_or_2" (formula "26") (term "0,1,1,0"))
                                                (rule "jdiv_axiom" (formula "16") (term "0"))
                                                (rule "eqSymm" (formula "16"))
                                                (rule "polySimp_mulComm0" (formula "16") (term "0,0,2,0"))
                                                (rule "polySimp_rightDist" (formula "16") (term "0,0,2,0"))
                                                (rule "mul_literals" (formula "16") (term "0,0,0,2,0"))
                                                (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,2,0"))
                                                (rule "applyEq" (formula "16") (term "1") (ifseqformula "17"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0"))
                                                (rule "mul_literals" (formula "16") (term "1,0,0"))
                                                (rule "inEqSimp_subsumption6" (formula "16") (term "0,0") (ifseqformula "12"))
                                                (rule "greater_literals" (formula "16") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "16"))
                                                (rule "mul_literals" (formula "16") (term "1,0,0,0"))
                                                (rule "leq_literals" (formula "16") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "16"))
                                                (rule "polyDiv_pullOut" (formula "16") (term "0") (inst "polyDivCoeff=quotient_1"))
                                                (rule "equal_literals" (formula "16") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "16"))
                                                (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0"))
                                                (rule "polySimp_homoEq" (formula "16"))
                                                (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0,0,1,0"))
                                                (rule "add_literals" (formula "16") (term "1,1,0,0,0,1,0"))
                                                (rule "times_zero_1" (formula "16") (term "1,0,0,0,1,0"))
                                                (rule "add_literals" (formula "16") (term "0,0,0,1,0"))
                                                (rule "div_literals" (formula "16") (term "0,0,1,0"))
                                                (rule "add_zero_left" (formula "16") (term "0,1,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "16") (term "0"))
                                                (rule "add_literals" (formula "16") (term "1,0"))
                                                (rule "times_zero_1" (formula "16") (term "0"))
                                                 (builtin "One Step Simplification" (formula "16"))
                                                (rule "true_left" (formula "16"))
                                                (rule "cnf_rightDist" (formula "10") (term "0,1"))
                                                (rule "returnUnfold" (formula "43") (term "1") (inst "#v0=o_2"))
                                                (rule "variableDeclarationAssign" (formula "43") (term "1"))
                                                (rule "variableDeclaration" (formula "43") (term "1") (newnames "o_2"))
                                                (rule "commute_or_2" (formula "14") (term "0,0,1,0"))
                                                (rule "inEqSimp_or_weaken2" (formula "14") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "14") (term "1,0,1,0,1,0"))
                                                (rule "add_literals" (formula "14") (term "0,1,0,1,0,1,0"))
                                                (rule "add_zero_left" (formula "14") (term "1,0,1,0,1,0"))
                                                 (builtin "One Step Simplification" (formula "14"))
                                                (rule "commute_and" (formula "27") (term "1,0,0,1,1,0"))
                                                (rule "commute_or_2" (formula "10") (term "0,0,1"))
                                                (rule "commute_or" (formula "26") (term "0,0,1,1,0"))
                                                (rule "shift_paren_or" (formula "10") (term "1,0,1"))
                                                (rule "commute_or" (formula "14") (term "0,0,1,0"))
                                                (rule "commute_or" (formula "10") (term "0,0,0,1"))
                                                (rule "cnf_rightDist" (formula "27") (term "0,0,0,0,1,1,0"))
                                                (rule "remove_parentheses_right" (formula "43") (term "1"))
                                                (rule "commute_or" (formula "27") (term "0,0,0,0,0,1,1,0"))
                                                (rule "condition" (formula "43") (term "1"))
                                                (rule "cnf_rightDist" (formula "27") (term "1,0,0,0,0,1,1,0"))
                                                (rule "commute_or" (formula "27") (term "0,1,0,0,0,0,1,1,0"))
                                                (rule "cnf_rightDist" (formula "27") (term "0,0,0,0,0,1,1,0"))
                                                 (builtin "One Step Simplification" (formula "27"))
                                                (rule "commute_or" (formula "27") (term "0,0,0,0,0,0,1,1,0"))
                                                (rule "commute_and" (formula "27") (term "0,0,0,0,0,1,1,0"))
                                                (rule "all_pull_out3" (formula "26") (term "1,0"))
                                                (rule "shift_paren_or" (formula "26") (term "0,1,0"))
                                                (rule "shift_paren_or" (formula "26") (term "0,0,1,0"))
                                                (rule "commute_or_2" (formula "26") (term "0,0,0,1,0"))
                                                (rule "all_pull_out3" (formula "14") (term "0"))
                                                (rule "shift_paren_or" (formula "14") (term "0,0"))
                                                (rule "shift_paren_or" (formula "14") (term "0,0,0"))
                                                (rule "commute_or_2" (formula "14") (term "0,0,0,0"))
                                                (rule "commute_or" (formula "14") (term "0,0,0,0,0"))
                                                (rule "shift_paren_and" (formula "27") (term "0,0,0,0,1,1,0"))
                                                (rule "cnf_rightDist" (formula "27") (term "0,0,0,1,1,0"))
                                                (rule "commute_or" (formula "27") (term "0,0,0,0,1,1,0"))
                                                (rule "cnf_rightDist" (formula "27") (term "1,0,0,0,1,1,0"))
                                                 (builtin "One Step Simplification" (formula "27"))
                                                (rule "cnf_rightDist" (formula "27") (term "0,0,0,0,1,1,0"))
                                                (rule "commute_or_2" (formula "27") (term "1,0,0,0,0,1,1,0"))
                                                (rule "commute_or" (formula "27") (term "0,1,0,0,0,0,1,1,0"))
                                                (rule "cnf_rightDist" (formula "27") (term "0,1,0,0,0,1,1,0"))
                                                 (builtin "One Step Simplification" (formula "27"))
                                                (rule "cnf_rightDist" (formula "27") (term "0,0,0,0,0,1,1,0"))
                                                (rule "commute_or_2" (formula "27") (term "1,0,0,0,0,0,1,1,0"))
                                                (rule "commute_or" (formula "27") (term "0,1,0,0,0,0,0,1,1,0"))
                                                (rule "all_pull_out3" (formula "26") (term "0"))
                                                (rule "shift_paren_or" (formula "26") (term "0,0"))
                                                (rule "shift_paren_or" (formula "26") (term "0,0,0"))
                                                (rule "shift_paren_or" (formula "26") (term "0,0,0,0"))
                                                (rule "commute_or_2" (formula "26") (term "0,0,0,0,0"))
                                                (rule "commute_or" (formula "26") (term "0,0,0,0,0,0"))
                                                (rule "ifElseUnfold" (formula "43") (term "1") (inst "#boolv=x"))
                                                (rule "variableDeclaration" (formula "43") (term "1") (newnames "x"))
                                                (rule "equality_comparison_simple" (formula "43") (term "1"))
                                                 (builtin "One Step Simplification" (formula "43"))
                                                (rule "replace_known_right" (formula "43") (term "0,0,1,0") (ifseqformula "47"))
                                                 (builtin "One Step Simplification" (formula "43"))
                                                (rule "cnf_rightDist" (formula "27") (term "0,0,1,0,0,0,1,1,0"))
                                                (rule "commute_or" (formula "27") (term "0,0,0,1,0,0,0,1,1,0"))
                                                (rule "cnf_rightDist" (formula "27") (term "0,0,0,0,0,0,1,1,0"))
                                                (rule "commute_or_2" (formula "27") (term "1,0,0,0,0,0,0,1,1,0"))
                                                (rule "shift_paren_and" (formula "27") (term "0,0,0,1,1,0"))
                                                (rule "shift_paren_and" (formula "27") (term "0,0,0,0,1,1,0"))
                                                (rule "allLeft" (formula "13") (inst "t=i_1_0"))
                                                (rule "replace_known_left" (formula "13") (term "0,0,0,0") (ifseqformula "26"))
                                                 (builtin "One Step Simplification" (formula "13"))
                                                (rule "inEqSimp_contradInEq0" (formula "13") (term "1") (ifseqformula "25"))
                                                (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1"))
                                                (rule "mul_literals" (formula "13") (term "0,1,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "13") (term "0,0,1"))
                                                (rule "polySimp_addComm0" (formula "13") (term "0,0,0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1"))
                                                (rule "add_literals" (formula "13") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "13") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "13") (term "0,0,1"))
                                                (rule "leq_literals" (formula "13") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "13"))
                                                (rule "inEqSimp_contradInEq1" (formula "13") (term "1") (ifseqformula "24"))
                                                (rule "qeq_literals" (formula "13") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "13"))
                                                (rule "shift_paren_and" (formula "28") (term "0,0,0,0,0,1,1,0"))
                                                (rule "commute_or_2" (formula "28") (term "0,1,1,0"))
                                                (rule "commute_or" (formula "28") (term "0,0,1,1,0"))
                                                (rule "cnf_rightDist" (formula "28") (term "0,0,1,1,0"))
                                                (rule "commute_or_2" (formula "28") (term "1,0,0,1,1,0"))
                                                (rule "commute_or" (formula "28") (term "0,1,0,0,1,1,0"))
                                                (rule "cnf_rightDist" (formula "28") (term "0,0,0,1,1,0"))
                                                (rule "commute_or_2" (formula "28") (term "1,0,0,0,1,1,0"))
                                                (rule "commute_or" (formula "28") (term "0,1,0,0,0,1,1,0"))
                                                (rule "cnf_rightDist" (formula "28") (term "0,0,0,0,1,1,0"))
                                                (rule "commute_or_2" (formula "28") (term "1,0,0,0,0,1,1,0"))
                                                (rule "commute_or_2" (formula "28") (term "0,1,0,0,0,0,1,1,0"))
                                                (rule "commute_or" (formula "28") (term "0,0,1,0,0,0,0,1,1,0"))
                                                (rule "cnf_rightDist" (formula "28") (term "0,0,0,0,0,1,1,0"))
                                                (rule "commute_or_2" (formula "28") (term "1,0,0,0,0,0,1,1,0"))
                                                (rule "commute_or" (formula "28") (term "0,1,0,0,0,0,0,1,1,0"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "6") (term "0") (ifseqformula "30"))
                                                (rule "applyEq" (formula "6") (term "1,0,1") (ifseqformula "7"))
                                                (rule "replace_known_left" (formula "6") (term "1") (ifseqformula "34"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "true_left" (formula "6"))
                                                (rule "cnf_rightDist" (formula "28") (term "0,0,0,0,0,0,1,1,0"))
                                                (rule "commute_or_2" (formula "28") (term "1,0,0,0,0,0,0,1,1,0"))
                                                (rule "commute_or_2" (formula "28") (term "0,1,0,0,0,0,0,0,1,1,0"))
                                                (rule "commute_or" (formula "28") (term "0,0,1,0,0,0,0,0,0,1,1,0"))
                                                (rule "cnf_rightDist" (formula "28") (term "0,0,0,0,0,0,0,1,1,0"))
                                                (rule "commute_or_2" (formula "28") (term "1,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "commute_or_2" (formula "28") (term "0,1,0,0,0,0,0,0,0,1,1,0"))
                                                (rule "ifElseSplit" (formula "44"))
                                                (branch "if x true"
                                                    (builtin "One Step Simplification" (formula "45"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                                (branch "if x false"
                                                    (builtin "One Step Simplification" (formula "45"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "assignment" (formula "44") (term "1"))
                                                    (builtin "One Step Simplification" (formula "44"))
                                                   (rule "blockEmpty" (formula "44") (term "1"))
                                                   (rule "methodCallReturn" (formula "44") (term "1"))
                                                   (rule "assignment" (formula "44") (term "1"))
                                                    (builtin "One Step Simplification" (formula "44"))
                                                   (rule "methodCallEmpty" (formula "44") (term "1"))
                                                   (rule "emptyModality" (formula "44") (term "1"))
                                                    (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "48")) (ifInst ""  (formula "33")))
                                                   (rule "notRight" (formula "44"))
                                                   (rule "eqSymm" (formula "1"))
                                                   (rule "commute_or" (formula "28") (term "0,0,1,0,0,0,0,0,0,0,1,1,0"))
                                                   (rule "cnf_rightDist" (formula "28") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                                   (rule "commute_or_2" (formula "28") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                                   (rule "ifthenelse_split" (formula "2") (term "0,0"))
                                                   (branch "i_2_0 >= 1 TRUE"
                                                      (rule "polySimp_mulComm0" (formula "3") (term "0"))
                                                      (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "2"))
                                                      (rule "leq_literals" (formula "21") (term "0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "true_left" (formula "21"))
                                                      (rule "elimGcdEq" (formula "3") (inst "elimGcdRightDiv=add(Z(0(#)), quotient_0)") (inst "elimGcdLeftDiv=bprod{int x;}(Z(0(#)),
              add(Z(neglit(1(#))), i_2_0),
              Z(2(#)))") (inst "elimGcd=Z(2(#))"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "mul_literals" (formula "3") (term "0,1,0,0,1"))
                                                      (rule "add_zero_left" (formula "3") (term "1,1,1"))
                                                      (rule "add_zero_left" (formula "3") (term "1,1,0,0,1"))
                                                      (rule "mul_literals" (formula "3") (term "0,1,0,1,0"))
                                                      (rule "add_zero_left" (formula "3") (term "1,1,0,1,0"))
                                                      (rule "mul_literals" (formula "3") (term "0,1,0,0,0"))
                                                      (rule "add_zero_left" (formula "3") (term "1,1,0,0,0"))
                                                      (rule "add_literals" (formula "3") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0,1"))
                                                      (rule "add_literals" (formula "3") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "3") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "3") (term "0,0,1"))
                                                      (rule "equal_literals" (formula "3") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0,0"))
                                                      (rule "add_literals" (formula "3") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "3") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "3") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "3") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                                      (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "3") (term "0,0"))
                                                      (rule "qeq_literals" (formula "3") (term "0"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "closeFalse" (formula "3"))
                                                   )
                                                   (branch "i_2_0 >= 1 FALSE"
                                                      (rule "polySimp_elimOneLeft0" (formula "2") (term "0"))
                                                      (rule "inEqSimp_geqRight" (formula "44"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_subsumption0" (formula "22") (ifseqformula "1"))
                                                      (rule "leq_literals" (formula "22") (term "0"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "true_left" (formula "22"))
                                                      (rule "inEqSimp_antiSymm" (formula "21") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "22") (term "0") (ifseqformula "21"))
                                                      (rule "qeq_literals" (formula "22"))
                                                      (rule "true_left" (formula "22"))
                                                      (rule "applyEqRigid" (formula "8") (term "1,0") (ifseqformula "21"))
                                                      (rule "pow_literals" (formula "8") (term "0"))
                                                      (rule "polySimp_homoEq" (formula "8"))
                                                      (rule "mul_literals" (formula "8") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                      (rule "add_literals" (formula "8") (term "0,0"))
                                                      (rule "add_zero_left" (formula "8") (term "0"))
                                                      (rule "applyEq" (formula "1") (term "0") (ifseqformula "21"))
                                                      (rule "leq_literals" (formula "1"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "applyEq" (formula "21") (term "0") (ifseqformula "20"))
                                                      (rule "inEqSimp_commuteLeq" (formula "21"))
                                                      (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "20"))
                                                      (rule "add_zero_right" (formula "2") (term "1,0"))
                                                      (rule "applyEqRigid" (formula "21") (term "0") (ifseqformula "7"))
                                                      (rule "qeq_literals" (formula "21"))
                                                      (rule "true_left" (formula "21"))
                                                      (rule "applyEqRigid" (formula "36") (term "1,1,0") (ifseqformula "7"))
                                                      (rule "add_zero_right" (formula "36") (term "1,0"))
                                                      (rule "applyEqRigid" (formula "26") (term "1,1,1,1,1,1,0,0,1,1,0") (ifseqformula "7"))
                                                      (rule "add_zero_right" (formula "26") (term "1,1,1,1,1,0,0,1,1,0"))
                                                      (rule "applyEq" (formula "25") (term "1,1,0,1,1,1,0,0") (ifseqformula "7"))
                                                      (rule "add_zero_right" (formula "25") (term "1,0,1,1,1,0,0"))
                                                      (rule "applyEq" (formula "6") (term "0,2,0") (ifseqformula "7"))
                                                      (rule "applyEq" (formula "26") (term "1,1,0,1,0,1,0") (ifseqformula "7"))
                                                      (rule "add_zero_right" (formula "26") (term "1,0,1,0,1,0"))
                                                      (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "7"))
                                                      (rule "jdiv_axiom_inline" (formula "8") (term "0"))
                                                      (rule "qeq_literals" (formula "8") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "8"))
                                                      (rule "div_literals" (formula "8") (term "0"))
                                                      (rule "eqSymm" (formula "8"))
                                                      (rule "applyEq" (formula "26") (term "1,1,1,1,1,1,0,0,0,1,1,0") (ifseqformula "7"))
                                                      (rule "add_zero_right" (formula "26") (term "1,1,1,1,1,0,0,0,1,1,0"))
                                                      (rule "applyEqRigid" (formula "26") (term "1,1,1,1,1,1,0,0,0,0,0,0,1,1,0") (ifseqformula "7"))
                                                      (rule "add_zero_right" (formula "26") (term "1,1,1,1,1,0,0,0,0,0,0,1,1,0"))
                                                      (rule "applyEq" (formula "25") (term "1,1,0,1,0,0,0,0") (ifseqformula "7"))
                                                      (rule "add_zero_right" (formula "25") (term "1,0,1,0,0,0,0"))
                                                      (rule "applyEqRigid" (formula "26") (term "1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,0") (ifseqformula "7"))
                                                      (rule "add_zero_right" (formula "26") (term "1,1,1,1,1,0,0,0,0,0,0,0,1,1,0"))
                                                      (rule "applyEqRigid" (formula "17") (term "1,0,0") (ifseqformula "7"))
                                                      (rule "add_zero_right" (formula "17") (term "0,0"))
                                                      (rule "jdiv_axiom_inline" (formula "17") (term "0"))
                                                      (rule "div_literals" (formula "17") (term "1,0"))
                                                      (rule "mul_literals" (formula "17") (term "0,0,2,0"))
                                                      (rule "qeq_literals" (formula "17") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "eqSymm" (formula "17"))
                                                      (rule "applyEq" (formula "25") (term "1,1,1,1,1,1,0,0,0,0,0,1,1,0") (ifseqformula "7"))
                                                      (rule "add_zero_right" (formula "25") (term "1,1,1,1,1,0,0,0,0,0,1,1,0"))
                                                      (rule "applyEq" (formula "25") (term "1,1,1,1,1,1,0,0,0,0,1,1,0") (ifseqformula "7"))
                                                      (rule "add_zero_right" (formula "25") (term "1,1,1,1,1,0,0,0,0,1,1,0"))
                                                      (rule "applyEq" (formula "20") (term "1,1") (ifseqformula "7"))
                                                      (rule "add_zero_right" (formula "20") (term "1"))
                                                      (rule "applyEqRigid" (formula "9") (term "1") (ifseqformula "7"))
                                                      (rule "apply_eq_monomials" (formula "7") (term "0") (ifseqformula "8"))
                                                      (rule "add_zero_left" (formula "7") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "7") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "7") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor0" (formula "7") (term "0"))
                                                      (rule "add_literals" (formula "7") (term "1,0"))
                                                      (rule "times_zero_1" (formula "7") (term "0"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "true_left" (formula "7"))
                                                      (rule "applyEqRigid" (formula "24") (term "1,1,1,1,0,1,1,0") (ifseqformula "7"))
                                                      (rule "add_zero_right" (formula "24") (term "1,1,1,0,1,1,0"))
                                                      (rule "applyEq" (formula "21") (term "1,1") (ifseqformula "7"))
                                                      (rule "add_zero_right" (formula "21") (term "1"))
                                                      (rule "applyEq" (formula "24") (term "1,1,1,0,0,1,0,0,0,0,1,1,0") (ifseqformula "7"))
                                                      (rule "add_zero_right" (formula "24") (term "1,1,0,0,1,0,0,0,0,1,1,0"))
                                                      (rule "applyEq" (formula "14") (term "1,1,0,0,0,0") (ifseqformula "7"))
                                                      (rule "applyEqRigid" (formula "17") (term "1,0") (ifseqformula "7"))
                                                      (rule "bsum_lower_equals_upper" (formula "17") (term "0"))
                                                      (rule "eqSymm" (formula "17"))
                                                      (rule "applyEqRigid" (formula "9") (term "1,1,1,0,1") (ifseqformula "7"))
                                                      (rule "applyEq" (formula "24") (term "1,1,0,0") (ifseqformula "7"))
                                                      (rule "applyEqRigid" (formula "24") (term "1,1,0,0,0,1,0,0,0,0,0,0,0,0,1,1,0") (ifseqformula "7"))
                                                      (rule "add_zero_right" (formula "24") (term "1,0,0,0,1,0,0,0,0,0,0,0,0,1,1,0"))
                                                      (rule "applyEqRigid" (formula "24") (term "1,1,1,0,1,0,0,0,1,1,0") (ifseqformula "7"))
                                                      (rule "add_zero_right" (formula "24") (term "1,1,0,1,0,0,0,1,1,0"))
                                                      (rule "applyEqRigid" (formula "9") (term "1,1,0") (ifseqformula "7"))
                                                      (rule "add_zero_right" (formula "9") (term "1,0"))
                                                      (rule "applyEq" (formula "3") (term "0") (ifseqformula "7"))
                                                      (rule "leq_literals" (formula "3"))
                                                      (rule "true_left" (formula "3"))
                                                      (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "6"))
                                                      (rule "applyEq" (formula "8") (term "1,1,0,0,1") (ifseqformula "6"))
                                                      (rule "applyEqRigid" (formula "37") (term "1") (ifseqformula "6"))
                                                      (rule "applyEq" (formula "13") (term "1,1,0,0,0") (ifseqformula "6"))
                                                      (rule "applyEqRigid" (formula "10") (term "0") (ifseqformula "6"))
                                                      (rule "qeq_literals" (formula "10"))
                                                      (rule "closeFalse" (formula "10"))
                                                   )
                                                )
                                             )
                                             (branch "i_2_0 >= 0 FALSE"
                                                (rule "close" (formula "40") (ifseqformula "17"))
                                             )
                                          )
                                       )
                                       (branch "pow(2, i_2_0) >= 0 FALSE"
                                          (rule "close" (formula "44") (ifseqformula "19"))
                                       )
                                    )
                                    (branch "Assume java.util.VerifiedIdentityHashMap.maskNull(key) != key"
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "notLeft" (formula "1"))
                                       (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "24") (term "0,1,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulAssoc" (formula "24") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0,0,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "7") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_gtToGeq" (formula "23") (term "1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "23") (term "0,1,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "24") (term "0,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulAssoc" (formula "24") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "0,1,0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "43") (term "0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "21"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "21") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "24") (term "0,1,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,1,0,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "36"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "36") (term "0"))
                                       (rule "inEqSimp_gtToGeq" (formula "6") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "13"))
                                       (rule "mul_literals" (formula "13") (term "1,0,0"))
                                       (rule "add_literals" (formula "13") (term "0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0,1,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "16"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "16") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0,1,1,0"))
                                       (rule "applyEq" (formula "18") (term "0") (ifseqformula "19"))
                                       (rule "applyEq" (formula "42") (term "0,2,0,1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "42") (term "0,0,1,0,1,0") (ifseqformula "18"))
                                       (rule "applyEq" (formula "42") (term "0,1") (ifseqformula "2"))
                                       (rule "eqSymm" (formula "42") (term "1"))
                                       (rule "replace_known_right" (formula "42") (term "1") (ifseqformula "37"))
                                        (builtin "One Step Simplification" (formula "42"))
                                       (rule "false_right" (formula "42"))
                                       (rule "jmod_axiom" (formula "5") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                       (rule "jmod_axiom" (formula "34") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "34") (term "1,0"))
                                       (rule "Query_axiom_for_maskNull_java_lang_Object__in_java_util_VerifiedIdentityHashMap" (formula "37") (term "0") (inst "maskNull_sk=maskNull_sk_0") (inst "#p0=o_1") (inst "#res=o"))
                                       (rule "eqSymm" (formula "1") (term "1,0,1"))
                                       (rule "polySimp_sepNegMonomial" (formula "6"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                       (rule "polySimp_sepNegMonomial" (formula "35"))
                                       (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "0,1,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "24") (term "0,1,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "24") (term "0,1,1,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,0,1"))
                                       (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,1"))
                                       (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,0,1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "8") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "0,0"))
                                       (rule "polySimp_elimOne" (formula "8") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "23") (term "1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "0,1,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "23") (term "0,1,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1,0,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "24") (term "1,0,1,0,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "24") (term "0,1,0,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,1,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "21"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                       (rule "polySimp_elimOne" (formula "21") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,1,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1,0,1,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "24") (term "1,0,1,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "24") (term "0,1,0,1,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,1,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "24") (term "1,1,0,1,0,0,1,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "36"))
                                       (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                       (rule "polySimp_elimOne" (formula "36") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "7") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "0,0"))
                                       (rule "polySimp_elimOne" (formula "7") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "14"))
                                       (rule "mul_literals" (formula "14") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "13") (term "0,1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,1"))
                                       (rule "mul_literals" (formula "7") (term "0,1,0,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0,1"))
                                       (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,1,1"))
                                       (rule "mul_literals" (formula "8") (term "0,1,0,0,0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,1,1"))
                                       (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,1,1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "17"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                       (rule "polySimp_elimOne" (formula "17") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                       (rule "polySimp_elimOne" (formula "5") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "23") (term "0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0,1,1,0"))
                                       (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "10"))
                                       (rule "leq_literals" (formula "18") (term "0"))
                                        (builtin "One Step Simplification" (formula "18"))
                                       (rule "true_left" (formula "18"))
                                       (rule "elimGcdLeq" (formula "23") (term "0,1,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "sub_literals" (formula "23") (term "0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "23") (term "0,0,0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "23") (term "1,1,0,0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "23") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "23") (term "1,1,0,1,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "23") (term "1,0,1,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "23") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "23") (term "0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "23") (term "0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "23") (term "0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "23") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_addComm1" (formula "23") (term "0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "23") (term "0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "23") (term "1,1,0,1,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "23") (term "1,0,1,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "23") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "qeq_literals" (formula "23") (term "1,0,0,1,0,0,0,0,1,1,0"))
                                        (builtin "One Step Simplification" (formula "23"))
                                       (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "23") (term "0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "add_zero_left" (formula "23") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0" (formula "23") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "23") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "23") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "leq_literals" (formula "23") (term "0,0,1,0,0,0,0,1,1,0"))
                                        (builtin "One Step Simplification" (formula "23"))
                                       (rule "elimGcdGeq" (formula "8") (term "1,0,0,1,1") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=m") (inst "elimGcd=Z(2(#))"))
                                       (rule "add_zero_right" (formula "8") (term "0,0,0,0,0,1,0,0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,1,0,0,1,1"))
                                       (rule "add_zero_right" (formula "8") (term "0,0,0,1,0,1,0,0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0,1,0,0,1,1"))
                                       (rule "sub_literals" (formula "8") (term "0,0,0,0,0,0,1,0,0,1,1"))
                                       (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0,1,0,0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "0,0,0,1,0,1,0,0,1,1"))
                                       (rule "add_zero_right" (formula "8") (term "0,0,0,0,0,1,0,0,1,1"))
                                       (rule "times_zero_1" (formula "8") (term "0,0,0,1,0,1,0,0,1,1"))
                                       (rule "add_zero_left" (formula "8") (term "0,0,1,0,1,0,0,1,1"))
                                       (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0,0,1,0,0,1,1"))
                                       (rule "add_literals" (formula "8") (term "1,1,0,0,0,1,0,0,1,1"))
                                       (rule "times_zero_1" (formula "8") (term "1,0,0,0,1,0,0,1,1"))
                                       (rule "add_zero_right" (formula "8") (term "0,0,0,1,0,0,1,1"))
                                       (rule "qeq_literals" (formula "8") (term "0,0,1,0,0,1,1"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "polySimp_pullOutFactor0" (formula "8") (term "0,0,1,0,0,1,1"))
                                       (rule "add_literals" (formula "8") (term "1,0,0,1,0,0,1,1"))
                                       (rule "times_zero_1" (formula "8") (term "0,0,1,0,0,1,1"))
                                       (rule "leq_literals" (formula "8") (term "0,1,0,0,1,1"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "elimGcdGeq" (formula "23") (term "1,1,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                       (rule "add_zero_right" (formula "23") (term "0,0,0,0,0,1,1,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0,1,1,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,1,1,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "23") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                                       (rule "sub_literals" (formula "23") (term "0,0,0,0,0,0,1,1,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,0,0,1,1,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "23") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "23") (term "1,0,0,0,0,0,1,1,0,0,1,1,0"))
                                       (rule "add_zero_left" (formula "23") (term "0,0,1,0,1,1,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "23") (term "0,0,0,0,0,1,1,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0" (formula "23") (term "0,1,0,1,1,0,0,1,1,0"))
                                       (rule "add_literals" (formula "23") (term "1,0,1,0,1,1,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "23") (term "0,1,0,1,1,0,0,1,1,0"))
                                       (rule "leq_literals" (formula "23") (term "1,0,1,1,0,0,1,1,0"))
                                        (builtin "One Step Simplification" (formula "23"))
                                       (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0,1,1,0,0,1,1,0"))
                                       (rule "add_literals" (formula "23") (term "1,1,0,0,1,1,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "23") (term "1,0,0,1,1,0,0,1,1,0"))
                                       (rule "add_literals" (formula "23") (term "0,0,1,1,0,0,1,1,0"))
                                       (rule "qeq_literals" (formula "23") (term "0,1,1,0,0,1,1,0"))
                                        (builtin "One Step Simplification" (formula "23"))
                                       (rule "elimGcdGeq" (formula "23") (term "0,1,0,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                       (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "23") (term "0,0,0,1,0,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                                       (rule "sub_literals" (formula "23") (term "0,0,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "23") (term "0,0,0,1,0,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_addLiterals" (formula "23") (term "0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "add_zero_left" (formula "23") (term "0,0,1,0,0,1,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "23") (term "0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0" (formula "23") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "23") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "23") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                       (rule "leq_literals" (formula "23") (term "1,0,0,1,0,0,0,1,1,0"))
                                        (builtin "One Step Simplification" (formula "23"))
                                       (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0,0,1,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "23") (term "1,1,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "23") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "23") (term "0,0,0,1,0,0,0,1,1,0"))
                                       (rule "qeq_literals" (formula "23") (term "0,0,1,0,0,0,1,1,0"))
                                        (builtin "One Step Simplification" (formula "23"))
                                       (rule "elimGcdLeq" (formula "23") (term "1,0,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "23") (term "0,0,0,0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "sub_literals" (formula "23") (term "0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "23") (term "1,1,0,0,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "23") (term "1,0,0,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "23") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "23") (term "1,1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "23") (term "1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "23") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "23") (term "0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "23") (term "0,0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "23") (term "0,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "23") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_addComm1" (formula "23") (term "0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "23") (term "0,0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "23") (term "1,1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "23") (term "1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "23") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "qeq_literals" (formula "23") (term "1,0,1,0,0,0,0,0,1,1,0"))
                                        (builtin "One Step Simplification" (formula "23"))
                                       (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_addComm1" (formula "23") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "23") (term "0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "add_zero_left" (formula "23") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0" (formula "23") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "23") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "23") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "leq_literals" (formula "23") (term "0,1,0,0,0,0,0,1,1,0"))
                                        (builtin "One Step Simplification" (formula "23"))
                                       (rule "newSym_eq" (formula "34") (inst "l=l_0") (inst "newSymDef=mul(result_1, Z(0(#)))"))
                                       (rule "times_zero_1" (formula "34") (term "1,1"))
                                       (rule "add_zero_right" (formula "34") (term "1"))
                                       (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "34"))
                                       (rule "eqSymm" (formula "35"))
                                       (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "35"))
                                       (rule "applyEq" (formula "37") (term "0") (ifseqformula "35"))
                                       (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "35"))
                                       (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                       (rule "applyEq" (formula "7") (term "1,1,0,0,1") (ifseqformula "35"))
                                       (rule "applyEq" (formula "36") (term "1,1") (ifseqformula "35"))
                                       (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "35"))
                                       (rule "inEqSimp_homoInEq1" (formula "8") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                       (rule "applyEq" (formula "8") (term "1,1,0,0,0,1") (ifseqformula "35"))
                                       (rule "applyEq" (formula "33") (term "1") (ifseqformula "35"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0"))
                                       (rule "mul_literals" (formula "7") (term "0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0"))
                                       (rule "mul_literals" (formula "8") (term "0,1,0"))
                                       (rule "elimGcdGeq_antec" (formula "37") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                       (rule "leq_literals" (formula "37") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "37"))
                                       (rule "times_zero_1" (formula "37") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "37") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "37") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "37") (term "0,0"))
                                       (rule "add_literals" (formula "37") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "37") (term "1,0,0"))
                                       (rule "add_literals" (formula "37") (term "0,0"))
                                       (rule "leq_literals" (formula "37") (term "0"))
                                        (builtin "One Step Simplification" (formula "37"))
                                       (rule "elimGcdGeq" (formula "8") (term "1,0,0,0,1") (inst "elimGcdRightDiv=l_0") (inst "elimGcdLeftDiv=n") (inst "elimGcd=Z(2(#))"))
                                       (rule "mul_literals" (formula "8") (term "0,0,0,0,0,1,0,1,0,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0,1,0,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,1,0,0,0,1"))
                                       (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0,0,1,0,0,0,1"))
                                       (rule "sub_literals" (formula "8") (term "0,0,0,0,0,0,0,1,0,0,0,1"))
                                       (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,1,0,1,0,0,0,1"))
                                       (rule "add_literals" (formula "8") (term "1,1,0,1,0,1,0,0,0,1"))
                                       (rule "times_zero_1" (formula "8") (term "1,0,1,0,1,0,0,0,1"))
                                       (rule "add_zero_right" (formula "8") (term "0,1,0,1,0,0,0,1"))
                                       (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0,0,1,0,0,0,1"))
                                       (rule "add_literals" (formula "8") (term "1,1,0,0,0,1,0,0,0,1"))
                                       (rule "times_zero_1" (formula "8") (term "1,0,0,0,1,0,0,0,1"))
                                       (rule "add_zero_right" (formula "8") (term "0,0,0,1,0,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "0,0,1,0,1,0,0,0,1"))
                                       (rule "polySimp_pullOutFactor0" (formula "8") (term "0,1,0,1,0,0,0,1"))
                                       (rule "add_literals" (formula "8") (term "1,0,1,0,1,0,0,0,1"))
                                       (rule "times_zero_1" (formula "8") (term "0,1,0,1,0,0,0,1"))
                                       (rule "leq_literals" (formula "8") (term "1,0,1,0,0,0,1"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,1,0,0,0,1"))
                                       (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0,1,0,0,0,1"))
                                       (rule "add_literals" (formula "8") (term "1,1,0,0,1,0,0,0,1"))
                                       (rule "times_zero_1" (formula "8") (term "1,0,0,1,0,0,0,1"))
                                       (rule "add_literals" (formula "8") (term "0,0,1,0,0,0,1"))
                                       (rule "qeq_literals" (formula "8") (term "0,1,0,0,0,1"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "elimGcdGeq" (formula "7") (term "1,0,0,1") (inst "elimGcdRightDiv=l_0") (inst "elimGcdLeftDiv=n") (inst "elimGcd=Z(2(#))"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0,1,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,1,0,0,1"))
                                       (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0,0,1,0,0,1"))
                                       (rule "mul_literals" (formula "7") (term "0,0,0,0,0,1,0,1,0,0,1"))
                                       (rule "sub_literals" (formula "7") (term "0,0,0,0,0,0,0,1,0,0,1"))
                                       (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,1,0,1,0,0,1"))
                                       (rule "add_literals" (formula "7") (term "1,1,0,1,0,1,0,0,1"))
                                       (rule "times_zero_1" (formula "7") (term "1,0,1,0,1,0,0,1"))
                                       (rule "add_zero_right" (formula "7") (term "0,1,0,1,0,0,1"))
                                       (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0,0,1,0,0,1"))
                                       (rule "add_literals" (formula "7") (term "1,1,0,0,0,1,0,0,1"))
                                       (rule "times_zero_1" (formula "7") (term "1,0,0,0,1,0,0,1"))
                                       (rule "add_zero_right" (formula "7") (term "0,0,0,1,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0,1,0,0,1"))
                                       (rule "polySimp_pullOutFactor0" (formula "7") (term "0,1,0,1,0,0,1"))
                                       (rule "add_literals" (formula "7") (term "1,0,1,0,1,0,0,1"))
                                       (rule "times_zero_1" (formula "7") (term "0,1,0,1,0,0,1"))
                                       (rule "leq_literals" (formula "7") (term "1,0,1,0,0,1"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,1,0,0,1"))
                                       (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0,1,0,0,1"))
                                       (rule "add_literals" (formula "7") (term "1,1,0,0,1,0,0,1"))
                                       (rule "times_zero_1" (formula "7") (term "1,0,0,1,0,0,1"))
                                       (rule "add_zero_right" (formula "7") (term "0,0,1,0,0,1"))
                                       (rule "qeq_literals" (formula "7") (term "0,1,0,0,1"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "newSym_eq" (formula "6") (inst "l=l_1") (inst "newSymDef=mul(i_0, Z(0(#)))"))
                                       (rule "times_zero_1" (formula "6") (term "1,1"))
                                       (rule "add_zero_right" (formula "6") (term "1"))
                                       (rule "applyEqRigid" (formula "7") (term "0,0") (ifseqformula "6"))
                                       (rule "eqSymm" (formula "7"))
                                       (rule "applyEqRigid" (formula "6") (term "0,0") (ifseqformula "7"))
                                       (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "7"))
                                       (rule "applyEqRigid" (formula "9") (term "0,0") (ifseqformula "7"))
                                       (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                                       (rule "applyEqRigid" (formula "9") (term "1,1,0,0,0,1,1") (ifseqformula "7"))
                                       (rule "applyEq" (formula "4") (term "0") (ifseqformula "7"))
                                       (rule "applyEqRigid" (formula "3") (term "0,2,0") (ifseqformula "7"))
                                       (rule "applyEq" (formula "5") (term "1,1") (ifseqformula "7"))
                                       (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "7"))
                                       (rule "inEqSimp_homoInEq1" (formula "8") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                       (rule "applyEqRigid" (formula "8") (term "1,1,0,0,0,1") (ifseqformula "7"))
                                       (rule "applyEqRigid" (formula "2") (term "1") (ifseqformula "7"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0"))
                                       (rule "mul_literals" (formula "9") (term "0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                       (rule "mul_literals" (formula "8") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0"))
                                       (rule "elimGcdEq" (formula "2") (inst "elimGcdRightDiv=l_1") (inst "elimGcdLeftDiv=div(mul(l_1, Z(2(#))), Z(2(#)))") (inst "elimGcd=Z(2(#))"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "mul_literals" (formula "2") (term "0,1,0,0,1"))
                                       (rule "mul_literals" (formula "2") (term "0,1,0,1,0"))
                                       (rule "add_literals" (formula "2") (term "1,0,0"))
                                       (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1"))
                                       (rule "polySimp_pullOutFactor0" (formula "2") (term "0,0,1"))
                                       (rule "add_literals" (formula "2") (term "1,0,0,1"))
                                       (rule "times_zero_1" (formula "2") (term "0,0,1"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                                       (rule "polySimp_pullOutFactor0" (formula "2") (term "0,0,0"))
                                       (rule "add_literals" (formula "2") (term "1,0,0,0"))
                                       (rule "times_zero_1" (formula "2") (term "0,0,0"))
                                       (rule "leq_literals" (formula "2") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor0" (formula "2") (term "0,0"))
                                       (rule "add_literals" (formula "2") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "2") (term "0,0"))
                                       (rule "qeq_literals" (formula "2") (term "0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "elimGcdGeq_antec" (formula "4") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                       (rule "leq_literals" (formula "4") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "times_zero_1" (formula "4") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "4") (term "0,0,0,0"))
                                       (rule "add_zero_right" (formula "4") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                       (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                       (rule "add_literals" (formula "4") (term "0,0"))
                                       (rule "leq_literals" (formula "4") (term "0"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "elimGcdLeq" (formula "8") (term "0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_1)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0,0"))
                                       (rule "sub_literals" (formula "8") (term "0,0,0,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "8") (term "0,0,0,0,0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,0"))
                                       (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,1,0,0"))
                                       (rule "add_literals" (formula "8") (term "1,1,0,1,0,0"))
                                       (rule "times_zero_1" (formula "8") (term "1,0,1,0,0"))
                                       (rule "add_zero_right" (formula "8") (term "0,1,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "8") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "8") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "8") (term "0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "8") (term "0,0,1,0,0"))
                                       (rule "mul_literals" (formula "8") (term "0,0,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "8") (term "0,1,0,0"))
                                       (rule "polySimp_addComm1" (formula "8") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,1,0,0"))
                                       (rule "add_literals" (formula "8") (term "1,1,0,1,0,0"))
                                       (rule "times_zero_1" (formula "8") (term "1,0,1,0,0"))
                                       (rule "add_zero_right" (formula "8") (term "0,1,0,0"))
                                       (rule "qeq_literals" (formula "8") (term "1,0,0"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "8") (term "0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "8") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "8") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "8") (term "0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "8") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0" (formula "8") (term "0,0,0"))
                                       (rule "add_literals" (formula "8") (term "1,0,0,0"))
                                       (rule "times_zero_1" (formula "8") (term "0,0,0"))
                                       (rule "leq_literals" (formula "8") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "elimGcdGeq" (formula "9") (term "0") (inst "elimGcdRightDiv=add(Z(1(#)), l_1)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                       (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0,0"))
                                       (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "9") (term "0,0,0,0,0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,0"))
                                       (rule "sub_literals" (formula "9") (term "0,0,0,0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,1,0,0"))
                                       (rule "add_literals" (formula "9") (term "1,1,0,1,0,0"))
                                       (rule "times_zero_1" (formula "9") (term "1,0,1,0,0"))
                                       (rule "add_zero_right" (formula "9") (term "0,1,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "9") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "9") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "9") (term "0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "9") (term "0,0,1,0,0"))
                                       (rule "mul_literals" (formula "9") (term "0,0,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "9") (term "0,1,0,0"))
                                       (rule "polySimp_addComm1" (formula "9") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,1,0,0"))
                                       (rule "add_literals" (formula "9") (term "1,1,0,1,0,0"))
                                       (rule "times_zero_1" (formula "9") (term "1,0,1,0,0"))
                                       (rule "add_zero_right" (formula "9") (term "0,1,0,0"))
                                       (rule "leq_literals" (formula "9") (term "1,0,0"))
                                        (builtin "One Step Simplification" (formula "9"))
                                       (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "9") (term "0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "9") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "9") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "9") (term "0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "9") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0" (formula "9") (term "0,0,0"))
                                       (rule "add_literals" (formula "9") (term "1,0,0,0"))
                                       (rule "times_zero_1" (formula "9") (term "0,0,0"))
                                       (rule "qeq_literals" (formula "9") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "9"))
                                       (rule "polyDiv_pullOut" (formula "2") (term "0") (inst "polyDivCoeff=l_1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,2,0"))
                                       (rule "equal_literals" (formula "2") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "polySimp_homoEq" (formula "2"))
                                       (rule "polySimp_pullOutFactor0" (formula "2") (term "0,0,0,1,0"))
                                       (rule "add_literals" (formula "2") (term "1,0,0,0,1,0"))
                                       (rule "times_zero_1" (formula "2") (term "0,0,0,1,0"))
                                       (rule "div_literals" (formula "2") (term "0,0,1,0"))
                                       (rule "add_zero_left" (formula "2") (term "0,1,0"))
                                       (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                       (rule "add_literals" (formula "2") (term "1,0"))
                                       (rule "times_zero_1" (formula "2") (term "0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "elimGcdLeq" (formula "8") (term "0,0,0,1,1") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_1)") (inst "elimGcdLeftDiv=m") (inst "elimGcd=Z(2(#))"))
                                       (rule "sub_literals" (formula "8") (term "0,0,0,0,0,0,0,0,0,0,1,1"))
                                       (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0,0,0,0,0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0,0,0,0,1,1"))
                                       (rule "mul_literals" (formula "8") (term "0,0,0,0,0,1,0,0,0,0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,0,0,0,1,1"))
                                       (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,1,0,0,0,0,1,1"))
                                       (rule "add_literals" (formula "8") (term "1,1,0,1,0,0,0,0,1,1"))
                                       (rule "times_zero_1" (formula "8") (term "1,0,1,0,0,0,0,1,1"))
                                       (rule "add_zero_right" (formula "8") (term "0,1,0,0,0,0,1,1"))
                                       (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0,0,0,0,0,1,1"))
                                       (rule "add_literals" (formula "8") (term "1,1,0,0,0,0,0,0,1,1"))
                                       (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0,0,1,1"))
                                       (rule "add_zero_right" (formula "8") (term "0,0,0,0,0,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "8") (term "0,0,1,0,0,0,0,1,1"))
                                       (rule "mul_literals" (formula "8") (term "0,0,0,1,0,0,0,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0,0,0,1,1"))
                                       (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0,0,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "8") (term "0,1,0,0,0,0,1,1"))
                                       (rule "polySimp_addComm1" (formula "8") (term "0,0,1,0,0,0,0,1,1"))
                                       (rule "add_literals" (formula "8") (term "0,0,0,1,0,0,0,0,1,1"))
                                       (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,1,0,0,0,0,1,1"))
                                       (rule "add_literals" (formula "8") (term "1,1,0,1,0,0,0,0,1,1"))
                                       (rule "times_zero_1" (formula "8") (term "1,0,1,0,0,0,0,1,1"))
                                       (rule "add_zero_right" (formula "8") (term "0,1,0,0,0,0,1,1"))
                                       (rule "qeq_literals" (formula "8") (term "1,0,0,0,0,1,1"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0,0,1,1"))
                                       (rule "add_literals" (formula "8") (term "0,0,0,0,0,0,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0,1,1"))
                                       (rule "polySimp_addComm1" (formula "8") (term "0,0,0,0,0,0,1,1"))
                                       (rule "add_literals" (formula "8") (term "0,0,0,0,0,0,0,1,1"))
                                       (rule "add_zero_left" (formula "8") (term "0,0,0,0,0,0,1,1"))
                                       (rule "polySimp_pullOutFactor0" (formula "8") (term "0,0,0,0,0,1,1"))
                                       (rule "add_literals" (formula "8") (term "1,0,0,0,0,0,1,1"))
                                       (rule "times_zero_1" (formula "8") (term "0,0,0,0,0,1,1"))
                                       (rule "leq_literals" (formula "8") (term "0,0,0,0,1,1"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "elimGcdLeq" (formula "7") (term "0,0,0,1") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_1)") (inst "elimGcdLeftDiv=n") (inst "elimGcd=Z(2(#))"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0,0,0,0,1"))
                                       (rule "mul_literals" (formula "7") (term "0,0,0,0,0,1,0,0,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,0,0,0,1"))
                                       (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0,0,0,0,0,1"))
                                       (rule "sub_literals" (formula "7") (term "0,0,0,0,0,0,0,0,0,0,1"))
                                       (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,1,0,0,0,0,1"))
                                       (rule "add_literals" (formula "7") (term "1,1,0,1,0,0,0,0,1"))
                                       (rule "times_zero_1" (formula "7") (term "1,0,1,0,0,0,0,1"))
                                       (rule "add_zero_right" (formula "7") (term "0,1,0,0,0,0,1"))
                                       (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0,0,0,0,0,1"))
                                       (rule "add_literals" (formula "7") (term "1,1,0,0,0,0,0,0,1"))
                                       (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0,0,1"))
                                       (rule "add_zero_right" (formula "7") (term "0,0,0,0,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "7") (term "0,0,1,0,0,0,0,1"))
                                       (rule "mul_literals" (formula "7") (term "0,0,0,1,0,0,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0,0,0,1"))
                                       (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "7") (term "0,1,0,0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "7") (term "0,0,1,0,0,0,0,1"))
                                       (rule "add_literals" (formula "7") (term "0,0,0,1,0,0,0,0,1"))
                                       (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,1,0,0,0,0,1"))
                                       (rule "add_literals" (formula "7") (term "1,1,0,1,0,0,0,0,1"))
                                       (rule "times_zero_1" (formula "7") (term "1,0,1,0,0,0,0,1"))
                                       (rule "add_zero_right" (formula "7") (term "0,1,0,0,0,0,1"))
                                       (rule "qeq_literals" (formula "7") (term "1,0,0,0,0,1"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0,0,1"))
                                       (rule "add_literals" (formula "7") (term "0,0,0,0,0,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "7") (term "0,0,0,0,0,0,1"))
                                       (rule "add_literals" (formula "7") (term "0,0,0,0,0,0,0,1"))
                                       (rule "add_zero_left" (formula "7") (term "0,0,0,0,0,0,1"))
                                       (rule "polySimp_pullOutFactor0" (formula "7") (term "0,0,0,0,0,1"))
                                       (rule "add_literals" (formula "7") (term "1,0,0,0,0,0,1"))
                                       (rule "times_zero_1" (formula "7") (term "0,0,0,0,0,1"))
                                       (rule "leq_literals" (formula "7") (term "0,0,0,0,1"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "11"))
                                       (rule "polySimp_rightDist" (formula "17") (term "0,0"))
                                       (rule "mul_literals" (formula "17") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "17") (term "0"))
                                       (rule "add_literals" (formula "17") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                       (rule "polySimp_elimOne" (formula "17") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "11"))
                                       (rule "polySimp_rightDist" (formula "37") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0"))
                                       (rule "mul_literals" (formula "37") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "37") (term "0"))
                                       (rule "add_literals" (formula "37") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "37"))
                                       (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "37") (inst "elimGcdRightDiv=Z(1(1(9(0(7(8(6(3(5(#))))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                       (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0,0,1,0"))
                                       (rule "neg_literal" (formula "37") (term "0,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "37") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "37"))
                                       (rule "mul_literals" (formula "37") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "37") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "37") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "37") (term "0,0"))
                                       (rule "add_literals" (formula "37") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "37") (term "1,0,0"))
                                       (rule "add_literals" (formula "37") (term "0,0"))
                                       (rule "qeq_literals" (formula "37") (term "0"))
                                        (builtin "One Step Simplification" (formula "37"))
                                       (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "11"))
                                       (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                                       (rule "mul_literals" (formula "4") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0"))
                                       (rule "add_literals" (formula "4") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "4") (inst "elimGcdRightDiv=Z(1(1(9(0(7(8(6(3(5(#))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0"))
                                       (rule "neg_literal" (formula "4") (term "0,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "4") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "4") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "4") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                       (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                       (rule "add_literals" (formula "4") (term "0,0"))
                                       (rule "qeq_literals" (formula "4") (term "0"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "boxToDiamond" (formula "1") (term "1"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "notLeft" (formula "1"))
                                       (rule "nnf_imp2or" (formula "12") (term "1,0"))
                                       (rule "nnf_imp2or" (formula "13") (term "1,0,1,0"))
                                       (rule "nnf_imp2or" (formula "23") (term "0"))
                                       (rule "nnf_imp2or" (formula "24") (term "0"))
                                       (rule "commute_and" (formula "13") (term "0,0"))
                                       (rule "commute_and" (formula "12") (term "0,0"))
                                       (rule "jdiv_axiom" (formula "15") (term "1,0"))
                                       (rule "eqSymm" (formula "15"))
                                       (rule "inEqSimp_subsumption1" (formula "15") (term "0,0") (ifseqformula "10"))
                                       (rule "leq_literals" (formula "15") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "15"))
                                       (rule "eqSymm" (formula "15"))
                                       (rule "applyEqRigid" (formula "24") (term "1,1,0,0,0,0") (ifseqformula "15"))
                                       (rule "applyEqRigid" (formula "25") (term "1,1,0,0,0,0") (ifseqformula "15"))
                                       (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "15"))
                                       (rule "applyEqRigid" (formula "13") (term "1,1,0,0,0,1,0") (ifseqformula "15"))
                                       (rule "applyEq" (formula "22") (term "0") (ifseqformula "15"))
                                       (rule "applyEqRigid" (formula "13") (term "1,1,1,0,0") (ifseqformula "15"))
                                       (rule "applyEq" (formula "12") (term "1,1,1,0,0") (ifseqformula "15"))
                                       (rule "nnf_imp2or" (formula "8") (term "0,1,1"))
                                       (rule "nnf_imp2or" (formula "8") (term "0,0,1"))
                                       (rule "nnf_imp2or" (formula "7") (term "0,1"))
                                       (rule "nnf_imp2or" (formula "24") (term "1,0"))
                                       (rule "nnf_imp2or" (formula "25") (term "1,0"))
                                       (rule "nnf_imp2or" (formula "13") (term "0"))
                                       (rule "nnf_imp2or" (formula "12") (term "0"))
                                       (rule "nnf_notAnd" (formula "24") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "24") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "24") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "24") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "24") (term "1,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "24") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "24") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "24") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                                       (rule "mul_literals" (formula "24") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "25") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "25") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "25") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "25") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                                       (rule "mul_literals" (formula "25") (term "1,1,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "25") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "25") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "25") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "25") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "13") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
                                       (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "13") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                       (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "12") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
                                       (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "12") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                       (rule "mul_literals" (formula "12") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "7") (term "0,0,1"))
                                       (rule "inEqSimp_notLeq" (formula "7") (term "0,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0,1"))
                                       (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0,1"))
                                       (rule "add_literals" (formula "7") (term "0,0,0,0,0,0,1"))
                                       (rule "add_zero_left" (formula "7") (term "0,0,0,0,0,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "0,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,1"))
                                       (rule "polySimp_elimOne" (formula "7") (term "1,0,0,0,1"))
                                       (rule "inEqSimp_notGeq" (formula "7") (term "1,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0,1"))
                                       (rule "mul_literals" (formula "7") (term "0,1,1,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0,1"))
                                       (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0,1"))
                                       (rule "nnf_notAnd" (formula "24") (term "0,1,0"))
                                        (builtin "One Step Simplification" (formula "24"))
                                       (rule "inEqSimp_notLeq" (formula "24") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,1,0,1,0"))
                                       (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,1,0"))
                                       (rule "add_literals" (formula "24") (term "0,0,0,1,0,1,0"))
                                       (rule "add_zero_left" (formula "24") (term "0,0,1,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,1,0"))
                                       (rule "nnf_notAnd" (formula "25") (term "0,1,0"))
                                        (builtin "One Step Simplification" (formula "25"))
                                       (rule "inEqSimp_notGeq" (formula "25") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,1,0,1,0"))
                                       (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,1,0"))
                                       (rule "add_literals" (formula "25") (term "0,0,0,1,0,1,0"))
                                       (rule "add_zero_left" (formula "25") (term "0,0,1,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,1,0"))
                                       (rule "nnf_imp2or" (formula "13") (term "0,1,0"))
                                       (rule "nnf_notAnd" (formula "8") (term "0,0,1,1"))
                                       (rule "inEqSimp_notGeq" (formula "8") (term "1,0,0,1,1"))
                                       (rule "times_zero_1" (formula "8") (term "1,0,0,1,0,0,1,1"))
                                       (rule "add_zero_right" (formula "8") (term "0,0,1,0,0,1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,1,1"))
                                       (rule "mul_literals" (formula "8") (term "1,1,0,0,1,1"))
                                       (rule "inEqSimp_notLeq" (formula "8") (term "0,0,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0,1,1"))
                                       (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0,1,1"))
                                       (rule "add_literals" (formula "8") (term "0,0,0,0,0,0,1,1"))
                                       (rule "add_zero_left" (formula "8") (term "0,0,0,0,0,1,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "0,0,0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,1,1"))
                                       (rule "polySimp_elimOne" (formula "8") (term "1,0,0,0,1,1"))
                                       (rule "nnf_notAnd" (formula "8") (term "0,0,0,1"))
                                       (rule "inEqSimp_notLeq" (formula "8") (term "0,0,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0,0,1"))
                                       (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0,0,1"))
                                       (rule "add_literals" (formula "8") (term "0,0,0,0,0,0,0,1"))
                                       (rule "add_zero_left" (formula "8") (term "0,0,0,0,0,0,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "0,0,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,0,1"))
                                       (rule "polySimp_elimOne" (formula "8") (term "1,0,0,0,0,1"))
                                       (rule "inEqSimp_notGeq" (formula "8") (term "1,0,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0,0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0,0,1"))
                                       (rule "mul_literals" (formula "8") (term "0,1,1,0,0,0,1"))
                                       (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0,0,1"))
                                       (rule "jdiv_axiom" (formula "36") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "36") (term "0,0,2,1"))
                                       (rule "eqSymm" (formula "36"))
                                       (rule "applyEq" (formula "36") (term "1") (ifseqformula "37"))
                                       (rule "inEqSimp_subsumption6" (formula "36") (term "0,0") (ifseqformula "41"))
                                       (rule "times_zero_1" (formula "36") (term "1,1,0,0,0"))
                                       (rule "greater_literals" (formula "36") (term "0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "leq_literals" (formula "36") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "polyDiv_pullOut" (formula "36") (term "0") (inst "polyDivCoeff=l_0"))
                                       (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0,2,0"))
                                       (rule "equal_literals" (formula "36") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "polySimp_pullOutFactor0" (formula "36") (term "0,0,0"))
                                       (rule "add_literals" (formula "36") (term "1,0,0,0"))
                                       (rule "times_zero_1" (formula "36") (term "0,0,0"))
                                       (rule "div_literals" (formula "36") (term "0,0"))
                                       (rule "add_zero_left" (formula "36") (term "0"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "true_left" (formula "36"))
                                       (rule "nnf_imp2or" (formula "24") (term "0,1,1,0"))
                                       (rule "nnf_imp2or" (formula "25") (term "0,1,1,0"))
                                       (rule "nnf_notAnd" (formula "13") (term "0,0,1,0"))
                                       (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "13") (term "0,1,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,1,0"))
                                       (rule "inEqSimp_notLeq" (formula "13") (term "0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0,1,0"))
                                       (rule "add_literals" (formula "13") (term "0,0,0,0,0,0,1,0"))
                                       (rule "add_zero_left" (formula "13") (term "0,0,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "13") (term "1,0,0,0,1,0"))
                                       (rule "nnf_notAnd" (formula "13") (term "0,1,0,1,0"))
                                        (builtin "One Step Simplification" (formula "13"))
                                       (rule "jdiv_axiom" (formula "5") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "0,0,2,1"))
                                       (rule "eqSymm" (formula "5"))
                                       (rule "applyEqRigid" (formula "5") (term "1") (ifseqformula "6"))
                                       (rule "inEqSimp_subsumption6" (formula "5") (term "0,0") (ifseqformula "2"))
                                       (rule "greater_literals" (formula "5") (term "0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "times_zero_1" (formula "5") (term "1,0,0,0"))
                                       (rule "leq_literals" (formula "5") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "polyDiv_pullOut" (formula "5") (term "0") (inst "polyDivCoeff=l_1"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,2,0"))
                                       (rule "equal_literals" (formula "5") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "polySimp_pullOutFactor0" (formula "5") (term "0,0,0"))
                                       (rule "add_literals" (formula "5") (term "1,0,0,0"))
                                       (rule "times_zero_1" (formula "5") (term "0,0,0"))
                                       (rule "div_literals" (formula "5") (term "0,0"))
                                       (rule "add_zero_left" (formula "5") (term "0"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "true_left" (formula "5"))
                                       (rule "nnf_notAnd" (formula "24") (term "0,0,1,1,0"))
                                       (rule "inEqSimp_notGeq" (formula "24") (term "1,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "24") (term "0,1,1,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1,1,0"))
                                       (rule "inEqSimp_notLeq" (formula "24") (term "0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "24") (term "0,0,0,0,0,0,1,1,0"))
                                       (rule "add_zero_left" (formula "24") (term "0,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "24") (term "1,0,0,0,1,1,0"))
                                       (rule "nnf_notAnd" (formula "25") (term "0,0,1,1,0"))
                                       (rule "nnf_notOr" (formula "25") (term "1,0,0,1,1,0"))
                                       (rule "inEqSimp_notGeq" (formula "25") (term "1,1,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "25") (term "1,0,0,1,1,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "25") (term "0,0,1,1,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,1,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "25") (term "1,1,1,0,0,1,1,0"))
                                       (rule "inEqSimp_notLeq" (formula "25") (term "0,1,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,1,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "25") (term "0,1,0,0,0,1,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,1,0,0,1,1,0"))
                                       (rule "add_literals" (formula "25") (term "0,0,0,0,1,0,0,1,1,0"))
                                       (rule "add_zero_left" (formula "25") (term "0,0,0,1,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0,1,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "25") (term "1,0,1,0,0,1,1,0"))
                                       (rule "nnf_notAnd" (formula "25") (term "0,0,0,1,1,0"))
                                       (rule "nnf_notAnd" (formula "25") (term "0,0,0,0,1,1,0"))
                                       (rule "nnf_notOr" (formula "25") (term "1,0,0,0,1,1,0"))
                                       (rule "inEqSimp_notGeq" (formula "25") (term "0,1,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "25") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "25") (term "0,0,0,1,0,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,1,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "25") (term "1,0,1,0,0,0,1,1,0"))
                                       (rule "inEqSimp_notGeq" (formula "25") (term "1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "25") (term "1,1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "25") (term "1,1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,1,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "25") (term "0,1,1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "25") (term "1,1,1,1,0,0,0,1,1,0"))
                                       (rule "nnf_notOr" (formula "25") (term "1,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_notGeq" (formula "25") (term "1,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,1,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "25") (term "1,1,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "25") (term "1,1,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,1,0,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "25") (term "0,1,1,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "25") (term "1,1,1,1,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_notLeq" (formula "25") (term "0,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "25") (term "0,1,0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "25") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "add_zero_left" (formula "25") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "25") (term "1,0,1,0,0,0,0,1,1,0"))
                                       (rule "nnf_notOr" (formula "25") (term "0,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "25") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "add_zero_left" (formula "25") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_notLeq" (formula "25") (term "0,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "25") (term "0,0,0,0,0,0,0,0,0,1,1,0"))
                                       (rule "add_zero_left" (formula "25") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "25") (term "1,0,0,0,0,0,0,1,1,0"))
                                       (rule "commute_or_2" (formula "12") (term "0"))
                                       (rule "commute_or" (formula "24") (term "0,0"))
                                       (rule "methodBodyExpand" (formula "41") (term "1") (newnames "heapBefore_maskNull_0,savedHeapBefore_maskNull"))
                                        (builtin "One Step Simplification" (formula "41"))
                                       (rule "commute_or" (formula "25") (term "0,0"))
                                       (rule "commute_or" (formula "7") (term "0,0,1"))
                                       (rule "commute_or" (formula "8") (term "0,0,1,1"))
                                       (rule "commute_or" (formula "8") (term "0,0,0,1"))
                                       (rule "div_axiom" (formula "15") (term "1") (inst "quotient=quotient_0"))
                                       (rule "mul_literals" (formula "15") (term "1,1,1,1,1"))
                                       (rule "equal_literals" (formula "15") (term "0"))
                                        (builtin "One Step Simplification" (formula "15"))
                                       (rule "qeq_literals" (formula "15") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "15"))
                                       (rule "andLeft" (formula "15"))
                                       (rule "andLeft" (formula "15"))
                                       (rule "polySimp_addComm1" (formula "17") (term "1"))
                                       (rule "add_literals" (formula "17") (term "0,1"))
                                       (rule "inEqSimp_commuteLeq" (formula "16"))
                                       (rule "inEqSimp_homoInEq1" (formula "17"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "17") (term "0"))
                                       (rule "applyEq" (formula "27") (term "1,1,0,0") (ifseqformula "15"))
                                       (rule "applyEqRigid" (formula "13") (term "1,0,0,0,1,0") (ifseqformula "15"))
                                       (rule "applyEqRigid" (formula "19") (term "1,0") (ifseqformula "15"))
                                       (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "15"))
                                       (rule "applyEqRigid" (formula "28") (term "1,1,0,0") (ifseqformula "15"))
                                       (rule "applyEqRigid" (formula "25") (term "0") (ifseqformula "15"))
                                       (rule "inEqSimp_homoInEq1" (formula "25"))
                                       (rule "polySimp_addComm1" (formula "25") (term "0"))
                                       (rule "applyEq" (formula "13") (term "1,1,0,0") (ifseqformula "15"))
                                       (rule "applyEq" (formula "18") (term "1") (ifseqformula "15"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "17"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1"))
                                       (rule "mul_literals" (formula "17") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "25"))
                                       (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                       (rule "polySimp_rightDist" (formula "25") (term "1"))
                                       (rule "mul_literals" (formula "25") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "17"))
                                       (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                                       (rule "mul_literals" (formula "22") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "22") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                                       (rule "add_literals" (formula "22") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "22") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                       (rule "polySimp_elimOne" (formula "22") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "17"))
                                       (rule "polySimp_rightDist" (formula "43") (term "0,0"))
                                       (rule "mul_literals" (formula "43") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "43") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "43") (term "0,0"))
                                       (rule "add_literals" (formula "43") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "43") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "43"))
                                       (rule "polySimp_mulLiterals" (formula "43") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "43") (inst "elimGcdRightDiv=quotient_0") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                       (rule "polySimp_mulLiterals" (formula "43") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,1,0"))
                                       (rule "neg_literal" (formula "43") (term "0,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "43") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "43"))
                                       (rule "polySimp_pullOutFactor0b" (formula "43") (term "0,0"))
                                       (rule "add_literals" (formula "43") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "43") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "43") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "43") (term "0,0"))
                                       (rule "add_literals" (formula "43") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "43") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "43") (term "0,0"))
                                       (rule "qeq_literals" (formula "43") (term "0"))
                                        (builtin "One Step Simplification" (formula "43"))
                                       (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "17"))
                                       (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                       (rule "mul_literals" (formula "4") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                       (rule "add_literals" (formula "4") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "4") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "4") (inst "elimGcdRightDiv=quotient_0") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0"))
                                       (rule "neg_literal" (formula "4") (term "0,0,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "4") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                       (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "4") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                       (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "4") (term "0,0"))
                                       (rule "qeq_literals" (formula "4") (term "0"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "12"))
                                       (rule "polySimp_mulAssoc" (formula "17") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "17") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "17") (inst "elimGcdRightDiv=Z(2(1(9(0(7(8(6(3(5(#))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,0,1,0"))
                                       (rule "neg_literal" (formula "17") (term "0,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "17") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "17"))
                                       (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "17") (term "0,0,0,0"))
                                       (rule "add_zero_right" (formula "17") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0"))
                                       (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "17") (term "0,0"))
                                       (rule "qeq_literals" (formula "17") (term "0"))
                                        (builtin "One Step Simplification" (formula "17"))
                                       (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "19"))
                                       (rule "mul_literals" (formula "11") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                       (rule "add_literals" (formula "11") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                       (rule "mul_literals" (formula "11") (term "1"))
                                       (rule "elimGcdGeq_antec" (formula "11") (inst "elimGcdRightDiv=Z(4(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "11") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "11"))
                                       (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                                       (rule "polySimp_addLiterals" (formula "11") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                                       (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "11") (term "0,0"))
                                       (rule "leq_literals" (formula "11") (term "0"))
                                        (builtin "One Step Simplification" (formula "11"))
                                       (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "29"))
                                       (rule "times_zero_1" (formula "28") (term "0,0"))
                                       (rule "add_zero_left" (formula "28") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "28"))
                                       (rule "mul_literals" (formula "28") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "11"))
                                       (rule "leq_literals" (formula "28") (term "0"))
                                        (builtin "One Step Simplification" (formula "28"))
                                       (rule "true_left" (formula "28"))
                                       (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "25"))
                                       (rule "times_zero_1" (formula "23") (term "0,0"))
                                       (rule "add_zero_left" (formula "23") (term "0"))
                                       (rule "inEqSimp_subsumption6" (formula "23") (ifseqformula "11"))
                                       (rule "mul_literals" (formula "23") (term "1,1,0"))
                                       (rule "greater_literals" (formula "23") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "23"))
                                       (rule "leq_literals" (formula "23") (term "0"))
                                        (builtin "One Step Simplification" (formula "23"))
                                       (rule "true_left" (formula "23"))
                                       (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "4"))
                                       (rule "mul_literals" (formula "2") (term "0,0"))
                                       (rule "add_zero_left" (formula "2") (term "0"))
                                       (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "12"))
                                       (rule "leq_literals" (formula "2") (term "0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "inEqSimp_exactShadow3" (formula "48") (ifseqformula "46"))
                                       (rule "times_zero_1" (formula "48") (term "0,0"))
                                       (rule "add_zero_left" (formula "48") (term "0"))
                                       (rule "inEqSimp_subsumption1" (formula "48") (ifseqformula "11"))
                                       (rule "leq_literals" (formula "48") (term "0"))
                                        (builtin "One Step Simplification" (formula "48"))
                                       (rule "true_left" (formula "48"))
                                       (rule "commute_or_2" (formula "31") (term "0,1,1,0"))
                                       (rule "commute_or" (formula "14") (term "0,0"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "27") (term "0,0") (ifseqformula "34"))
                                       (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "52"))
                                        (builtin "One Step Simplification" (formula "27"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0") (ifseqformula "35"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "54"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "32") (term "0") (ifseqformula "36"))
                                       (rule "replace_known_left" (formula "32") (term "0") (ifseqformula "33"))
                                        (builtin "One Step Simplification" (formula "32"))
                                       (rule "true_left" (formula "32"))
                                       (rule "cnf_rightDist" (formula "9") (term "0,1"))
                                       (rule "shift_paren_or" (formula "16") (term "0,1,0"))
                                       (rule "commute_and" (formula "34") (term "1,0,0,1,1,0"))
                                       (rule "cnf_rightDist" (formula "10") (term "0,1,1"))
                                       (rule "cnf_rightDist" (formula "10") (term "0,0,1"))
                                       (rule "returnUnfold" (formula "51") (term "1") (inst "#v0=o_2"))
                                       (rule "variableDeclarationAssign" (formula "51") (term "1"))
                                       (rule "variableDeclaration" (formula "51") (term "1") (newnames "o_2"))
                                       (rule "commute_and" (formula "34") (term "0,0,0,0,0,1,1,0"))
                                       (rule "commute_or_2" (formula "9") (term "0,0,1"))
                                       (rule "shift_paren_or" (formula "9") (term "1,0,1"))
                                       (rule "commute_or_2" (formula "16") (term "0,0,1,0"))
                                       (rule "inEqSimp_or_weaken2" (formula "16") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "1,0,1,0,1,0"))
                                       (rule "add_literals" (formula "16") (term "0,1,0,1,0,1,0"))
                                       (rule "add_zero_left" (formula "16") (term "1,0,1,0,1,0"))
                                        (builtin "One Step Simplification" (formula "16"))
                                       (rule "commute_or_2" (formula "10") (term "0,0,1,1"))
                                       (rule "commute_or_2" (formula "10") (term "0,0,0,1"))
                                       (rule "commute_or" (formula "33") (term "0,0,1,1,0"))
                                       (rule "commute_or" (formula "9") (term "0,0,0,1"))
                                       (rule "commute_or" (formula "16") (term "0,0,1,0"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "2") (term "0") (ifseqformula "36"))
                                       (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "3"))
                                       (rule "replace_known_right" (formula "2") (term "0") (ifseqformula "57"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "3"))
                                       (rule "shift_paren_or" (formula "10") (term "1,0,1,1"))
                                       (rule "shift_paren_or" (formula "10") (term "1,0,0,1"))
                                       (rule "commute_or" (formula "10") (term "0,0,0,1,1"))
                                       (rule "commute_or" (formula "10") (term "0,0,0,0,1"))
                                       (rule "remove_parentheses_right" (formula "51") (term "1"))
                                       (rule "cnf_rightDist" (formula "34") (term "0,0,0,0,1,1,0"))
                                       (rule "commute_or" (formula "34") (term "0,0,0,0,0,1,1,0"))
                                       (rule "condition" (formula "51") (term "1"))
                                       (rule "cnf_rightDist" (formula "34") (term "1,0,0,0,0,1,1,0"))
                                       (rule "commute_or" (formula "34") (term "0,1,0,0,0,0,1,1,0"))
                                       (rule "cnf_rightDist" (formula "34") (term "0,0,0,0,0,1,1,0"))
                                        (builtin "One Step Simplification" (formula "34"))
                                       (rule "commute_or" (formula "34") (term "1,0,0,0,0,0,1,1,0"))
                                       (rule "all_pull_out3" (formula "33") (term "1,0"))
                                       (rule "shift_paren_or" (formula "33") (term "0,1,0"))
                                       (rule "shift_paren_or" (formula "33") (term "0,0,1,0"))
                                       (rule "commute_or_2" (formula "33") (term "0,0,0,1,0"))
                                       (rule "all_pull_out3" (formula "16") (term "0"))
                                       (rule "shift_paren_or" (formula "16") (term "0,0"))
                                       (rule "shift_paren_or" (formula "16") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "16") (term "0,0,0,0"))
                                       (rule "commute_or" (formula "16") (term "0,0,0,0,0"))
                                       (rule "shift_paren_and" (formula "34") (term "0,0,0,0,1,1,0"))
                                       (rule "cnf_rightDist" (formula "34") (term "0,0,0,1,1,0"))
                                       (rule "commute_or" (formula "34") (term "0,0,0,0,1,1,0"))
                                       (rule "cnf_rightDist" (formula "34") (term "1,0,0,0,1,1,0"))
                                        (builtin "One Step Simplification" (formula "34"))
                                       (rule "cnf_rightDist" (formula "34") (term "0,0,0,0,1,1,0"))
                                       (rule "commute_or_2" (formula "34") (term "1,0,0,0,0,1,1,0"))
                                       (rule "commute_or" (formula "34") (term "0,1,0,0,0,0,1,1,0"))
                                       (rule "cnf_rightDist" (formula "34") (term "0,1,0,0,0,1,1,0"))
                                        (builtin "One Step Simplification" (formula "34"))
                                       (rule "cnf_rightDist" (formula "34") (term "0,0,0,0,0,1,1,0"))
                                       (rule "commute_or_2" (formula "34") (term "1,0,0,0,0,0,1,1,0"))
                                       (rule "commute_or" (formula "34") (term "0,1,0,0,0,0,0,1,1,0"))
                                       (rule "all_pull_out3" (formula "33") (term "0"))
                                       (rule "shift_paren_or" (formula "33") (term "0,0"))
                                       (rule "shift_paren_or" (formula "33") (term "0,0,0"))
                                       (rule "shift_paren_or" (formula "33") (term "0,0,0,0"))
                                       (rule "commute_or_2" (formula "33") (term "0,0,0,0,0"))
                                       (rule "commute_or" (formula "33") (term "0,0,0,0,0,0"))
                                       (rule "ifElseUnfold" (formula "51") (term "1") (inst "#boolv=x"))
                                       (rule "variableDeclaration" (formula "51") (term "1") (newnames "x"))
                                       (rule "equality_comparison_simple" (formula "51") (term "1"))
                                        (builtin "One Step Simplification" (formula "51"))
                                       (rule "replace_known_right" (formula "51") (term "0,0,1,0") (ifseqformula "56"))
                                        (builtin "One Step Simplification" (formula "51"))
                                       (rule "cnf_rightDist" (formula "34") (term "0,0,1,0,0,0,1,1,0"))
                                       (rule "commute_or" (formula "34") (term "0,0,0,1,0,0,0,1,1,0"))
                                       (rule "cnf_rightDist" (formula "34") (term "0,0,0,0,0,0,1,1,0"))
                                       (rule "commute_or_2" (formula "34") (term "1,0,0,0,0,0,0,1,1,0"))
                                       (rule "shift_paren_and" (formula "34") (term "0,0,0,1,1,0"))
                                       (rule "shift_paren_and" (formula "34") (term "0,0,0,0,1,1,0"))
                                       (rule "shift_paren_and" (formula "34") (term "0,0,0,0,0,1,1,0"))
                                       (rule "commute_or_2" (formula "34") (term "0,1,1,0"))
                                       (rule "commute_or" (formula "34") (term "0,0,1,1,0"))
                                       (rule "cnf_rightDist" (formula "34") (term "0,0,1,1,0"))
                                       (rule "commute_or_2" (formula "34") (term "1,0,0,1,1,0"))
                                       (rule "commute_or" (formula "34") (term "0,1,0,0,1,1,0"))
                                       (rule "cnf_rightDist" (formula "34") (term "0,0,0,1,1,0"))
                                       (rule "commute_or_2" (formula "34") (term "1,0,0,0,1,1,0"))
                                       (rule "commute_or" (formula "34") (term "0,1,0,0,0,1,1,0"))
                                       (rule "cnf_rightDist" (formula "34") (term "0,0,0,0,1,1,0"))
                                       (rule "commute_or_2" (formula "34") (term "1,0,0,0,0,1,1,0"))
                                       (rule "commute_or_2" (formula "34") (term "0,1,0,0,0,0,1,1,0"))
                                       (rule "commute_or" (formula "34") (term "0,0,1,0,0,0,0,1,1,0"))
                                       (rule "cnf_rightDist" (formula "34") (term "0,0,0,0,0,1,1,0"))
                                       (rule "commute_or_2" (formula "34") (term "1,0,0,0,0,0,1,1,0"))
                                       (rule "commute_or" (formula "34") (term "0,1,0,0,0,0,0,1,1,0"))
                                       (rule "cnf_rightDist" (formula "34") (term "0,0,0,0,0,0,1,1,0"))
                                       (rule "commute_or_2" (formula "34") (term "1,0,0,0,0,0,0,1,1,0"))
                                       (rule "commute_or_2" (formula "34") (term "0,1,0,0,0,0,0,0,1,1,0"))
                                       (rule "allLeft" (formula "15") (inst "t=i_1_0"))
                                       (rule "replace_known_left" (formula "15") (term "0,0,0,0") (ifseqformula "33"))
                                        (builtin "One Step Simplification" (formula "15"))
                                       (rule "inEqSimp_contradInEq1" (formula "15") (term "1,0") (ifseqformula "31"))
                                       (rule "qeq_literals" (formula "15") (term "0,1,0"))
                                        (builtin "One Step Simplification" (formula "15"))
                                       (rule "inEqSimp_contradInEq0" (formula "15") (term "1") (ifseqformula "32"))
                                       (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1"))
                                       (rule "mul_literals" (formula "15") (term "0,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,0,1"))
                                       (rule "polySimp_addComm0" (formula "15") (term "0,0,0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1"))
                                       (rule "add_literals" (formula "15") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "15") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "15") (term "0,0,1"))
                                       (rule "leq_literals" (formula "15") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "15"))
                                       (rule "commute_or" (formula "35") (term "0,0,1,0,0,0,0,0,0,1,1,0"))
                                       (rule "cnf_rightDist" (formula "35") (term "0,0,0,0,0,0,0,1,1,0"))
                                       (rule "commute_or_2" (formula "35") (term "1,0,0,0,0,0,0,0,1,1,0"))
                                       (rule "commute_or_2" (formula "35") (term "0,1,0,0,0,0,0,0,0,1,1,0"))
                                       (rule "ifElseSplit" (formula "52"))
                                       (branch "if x true"
                                           (builtin "One Step Simplification" (formula "53"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                       (branch "if x false"
                                           (builtin "One Step Simplification" (formula "53"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "assignment" (formula "52") (term "1"))
                                           (builtin "One Step Simplification" (formula "52"))
                                          (rule "blockEmpty" (formula "52") (term "1"))
                                          (rule "methodCallReturn" (formula "52") (term "1"))
                                          (rule "assignment" (formula "52") (term "1"))
                                           (builtin "One Step Simplification" (formula "52"))
                                          (rule "methodCallEmpty" (formula "52") (term "1"))
                                          (rule "emptyModality" (formula "52") (term "1"))
                                           (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "57")) (ifInst ""  (formula "40")))
                                          (rule "notRight" (formula "52"))
                                          (rule "eqSymm" (formula "1"))
                                          (rule "close" (formula "53") (ifseqformula "1"))
                                       )
                                    )
                                 )
                                 (branch "Assume i_0 / 2 * 2 != i_0"
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "inEqSimp_ltToLeq" (formula "15"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "15") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "5") (term "0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "23") (term "0,1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "12"))
                                    (rule "mul_literals" (formula "12") (term "1,0,0"))
                                    (rule "add_literals" (formula "12") (term "0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "6") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                    (rule "inEqSimp_gtToGeq" (formula "5") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "20"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "20") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "42") (term "0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0,1,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "35"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "35") (term "0"))
                                    (rule "inEqSimp_gtToGeq" (formula "22") (term "1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "22") (term "0,1,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "23") (term "0,1,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulAssoc" (formula "23") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "0,1,0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,1,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulAssoc" (formula "23") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "applyEq" (formula "42") (term "0,0,1,0,1,0") (ifseqformula "18"))
                                    (rule "applyEq" (formula "17") (term "0") (ifseqformula "18"))
                                    (rule "jmod_axiom" (formula "33") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "33") (term "1,0"))
                                    (rule "jmod_axiom" (formula "4") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                    (rule "Query_axiom_for_maskNull_java_lang_Object__in_java_util_VerifiedIdentityHashMap" (formula "41") (term "1,1") (inst "maskNull_sk=maskNull_sk_0") (inst "#p0=o_1") (inst "#res=o"))
                                    (rule "eqSymm" (formula "1") (term "1,0,1"))
                                    (rule "polySimp_sepNegMonomial" (formula "34"))
                                    (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                    (rule "polySimp_sepNegMonomial" (formula "5"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "16"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                    (rule "polySimp_elimOne" (formula "16") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0,1"))
                                    (rule "mul_literals" (formula "6") (term "0,1,0,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,1,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,0,1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "23") (term "0,1,0,1,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "23") (term "1,1,0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "22") (term "0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "13"))
                                    (rule "mul_literals" (formula "13") (term "1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "7") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "0,0"))
                                    (rule "polySimp_elimOne" (formula "7") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "6") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "0,0"))
                                    (rule "polySimp_elimOne" (formula "6") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "20"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                    (rule "polySimp_elimOne" (formula "20") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0,1,1"))
                                    (rule "mul_literals" (formula "7") (term "0,1,0,0,0,1,1"))
                                    (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0,1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "12") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0,0,1"))
                                    (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "35"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                                    (rule "polySimp_elimOne" (formula "35") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "22") (term "1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "22") (term "0,1,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,1,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,1,0,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,0,1,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,1,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "23") (term "0,1,0,1,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                    (rule "polySimp_elimOne" (formula "4") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "0,1,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "23") (term "0,1,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "23") (term "0,1,1,0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "42") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "42") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "42") (term "0,1,0"))
                                    (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "9"))
                                    (rule "leq_literals" (formula "17") (term "0"))
                                     (builtin "One Step Simplification" (formula "17"))
                                    (rule "true_left" (formula "17"))
                                    (rule "polyDiv_pullOut" (formula "41") (term "1,1,1,0") (inst "polyDivCoeff=jdiv(i_0, Z(2(#)))"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,2,1,1,1,0"))
                                    (rule "equal_literals" (formula "41") (term "0,1,1,1,0"))
                                     (builtin "One Step Simplification" (formula "41"))
                                    (rule "polySimp_addComm0" (formula "41") (term "1,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "41") (term "1,1,0"))
                                    (rule "elimGcdLeq" (formula "22") (term "1,0,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "22") (term "0,0,0,0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "sub_literals" (formula "22") (term "0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "22") (term "1,1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "22") (term "1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "22") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "22") (term "1,1,0,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "22") (term "1,0,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "22") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "22") (term "0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "22") (term "0,0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_addComm1" (formula "22") (term "0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "22") (term "0,0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "22") (term "1,1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "22") (term "1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "22") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "qeq_literals" (formula "22") (term "1,0,1,0,0,0,0,0,1,1,0"))
                                     (builtin "One Step Simplification" (formula "22"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "22") (term "0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_addComm1" (formula "22") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "22") (term "0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "22") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0" (formula "22") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "22") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "22") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "leq_literals" (formula "22") (term "0,1,0,0,0,0,0,1,1,0"))
                                     (builtin "One Step Simplification" (formula "22"))
                                    (rule "elimGcdGeq" (formula "7") (term "1,0,0,1,1") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=m") (inst "elimGcd=Z(2(#))"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0,1,0,0,1,1"))
                                    (rule "add_zero_right" (formula "7") (term "0,0,0,1,0,1,0,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,1,0,0,1,1"))
                                    (rule "add_zero_right" (formula "7") (term "0,0,0,0,0,1,0,0,1,1"))
                                    (rule "times_zero_1" (formula "7") (term "0,0,0,1,0,1,0,0,1,1"))
                                    (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0,1,0,0,1,1"))
                                    (rule "sub_literals" (formula "7") (term "0,0,0,0,0,0,1,0,0,1,1"))
                                    (rule "add_zero_left" (formula "7") (term "0,0,1,0,1,0,0,1,1"))
                                    (rule "add_zero_right" (formula "7") (term "0,0,0,0,0,1,0,0,1,1"))
                                    (rule "polySimp_pullOutFactor0" (formula "7") (term "0,1,0,1,0,0,1,1"))
                                    (rule "add_literals" (formula "7") (term "1,0,1,0,1,0,0,1,1"))
                                    (rule "times_zero_1" (formula "7") (term "0,1,0,1,0,0,1,1"))
                                    (rule "leq_literals" (formula "7") (term "1,0,1,0,0,1,1"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0,1,0,0,1,1"))
                                    (rule "add_literals" (formula "7") (term "1,1,0,0,1,0,0,1,1"))
                                    (rule "times_zero_1" (formula "7") (term "1,0,0,1,0,0,1,1"))
                                    (rule "add_zero_right" (formula "7") (term "0,0,1,0,0,1,1"))
                                    (rule "qeq_literals" (formula "7") (term "0,1,0,0,1,1"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "elimGcdGeq" (formula "22") (term "0,1,0,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "22") (term "0,0,0,1,0,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "22") (term "0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "22") (term "0,0,0,1,0,0,1,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "22") (term "1,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "sub_literals" (formula "22") (term "0,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "22") (term "0,0,1,0,0,1,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "22") (term "0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0" (formula "22") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "22") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "22") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                    (rule "leq_literals" (formula "22") (term "1,0,0,1,0,0,0,1,1,0"))
                                     (builtin "One Step Simplification" (formula "22"))
                                    (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,0,0,1,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "22") (term "1,1,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "22") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "22") (term "0,0,0,1,0,0,0,1,1,0"))
                                    (rule "qeq_literals" (formula "22") (term "0,0,1,0,0,0,1,1,0"))
                                     (builtin "One Step Simplification" (formula "22"))
                                    (rule "polyDiv_pullOut" (formula "41") (term "1,1,1,0") (inst "polyDivCoeff=mul(jdiv(i_0, Z(2(#))), Z(neglit(1(#))))"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,2,1,1,1,0"))
                                    (rule "equal_literals" (formula "41") (term "0,1,1,1,0"))
                                     (builtin "One Step Simplification" (formula "41"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,1,1,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,0,1,1,1,0"))
                                    (rule "add_literals" (formula "41") (term "1,1,0,0,1,1,1,0"))
                                    (rule "times_zero_1" (formula "41") (term "1,0,0,1,1,1,0"))
                                    (rule "add_zero_right" (formula "41") (term "0,0,1,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "41") (term "1,1,0"))
                                    (rule "polySimp_addComm1" (formula "41") (term "0,1,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "41") (term "1,1,0"))
                                    (rule "add_literals" (formula "41") (term "1,1,1,1,0"))
                                    (rule "times_zero_1" (formula "41") (term "1,1,1,0"))
                                    (rule "add_zero_right" (formula "41") (term "1,1,0"))
                                    (rule "polyDiv_pullOut" (formula "41") (term "1,1,1,0") (inst "polyDivCoeff=jdiv(i_0, Z(2(#)))"))
                                    (rule "equal_literals" (formula "41") (term "0,1,1,1,0"))
                                     (builtin "One Step Simplification" (formula "41"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,1,1,1,0"))
                                    (rule "polySimp_addComm0" (formula "41") (term "1,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "41") (term "1,1,0"))
                                    (rule "elimGcdGeq" (formula "22") (term "1,1,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                    (rule "add_zero_right" (formula "22") (term "0,0,0,0,0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0,1,1,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "22") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,0,1,1,0,0,1,1,0"))
                                    (rule "sub_literals" (formula "22") (term "0,0,0,0,0,0,1,1,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "22") (term "1,0,0,0,0,0,1,1,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "22") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "22") (term "0,0,0,0,0,1,1,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "22") (term "0,0,1,0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,0,0,1,1,0,0,1,1,0"))
                                    (rule "add_literals" (formula "22") (term "1,1,0,0,0,1,1,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "22") (term "1,0,0,0,1,1,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "22") (term "0,0,0,1,1,0,0,1,1,0"))
                                    (rule "qeq_literals" (formula "22") (term "0,0,1,1,0,0,1,1,0"))
                                     (builtin "One Step Simplification" (formula "22"))
                                    (rule "polySimp_pullOutFactor0" (formula "22") (term "0,0,1,1,0,0,1,1,0"))
                                    (rule "add_literals" (formula "22") (term "1,0,0,1,1,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "22") (term "0,0,1,1,0,0,1,1,0"))
                                    (rule "leq_literals" (formula "22") (term "0,1,1,0,0,1,1,0"))
                                     (builtin "One Step Simplification" (formula "22"))
                                    (rule "elimGcdLeq" (formula "22") (term "0,1,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "sub_literals" (formula "22") (term "0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "22") (term "0,0,0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "22") (term "1,1,0,0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "22") (term "1,0,0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "22") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "22") (term "1,1,0,1,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "22") (term "1,0,1,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "22") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "22") (term "0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "22") (term "0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "22") (term "0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "polySimp_addComm1" (formula "22") (term "0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "22") (term "0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "22") (term "1,1,0,1,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "22") (term "1,0,1,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "22") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "qeq_literals" (formula "22") (term "1,0,0,1,0,0,0,0,1,1,0"))
                                     (builtin "One Step Simplification" (formula "22"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "22") (term "0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "22") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0" (formula "22") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "22") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "22") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "leq_literals" (formula "22") (term "0,0,1,0,0,0,0,1,1,0"))
                                     (builtin "One Step Simplification" (formula "22"))
                                    (rule "polyDiv_pullOut" (formula "41") (term "1,1,1,0") (inst "polyDivCoeff=mul(jdiv(i_0, Z(2(#))), Z(neglit(1(#))))"))
                                    (rule "equal_literals" (formula "41") (term "0,1,1,1,0"))
                                     (builtin "One Step Simplification" (formula "41"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,1,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,1,1,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,0,1,1,1,0"))
                                    (rule "add_literals" (formula "41") (term "1,1,0,0,1,1,1,0"))
                                    (rule "times_zero_1" (formula "41") (term "1,0,0,1,1,1,0"))
                                    (rule "add_zero_right" (formula "41") (term "0,0,1,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "41") (term "1,1,0"))
                                    (rule "polySimp_addComm1" (formula "41") (term "0,1,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "41") (term "1,1,0"))
                                    (rule "add_literals" (formula "41") (term "1,1,1,1,0"))
                                    (rule "times_zero_1" (formula "41") (term "1,1,1,0"))
                                    (rule "add_zero_right" (formula "41") (term "1,1,0"))
                                    (rule "polyDiv_pullOut" (formula "41") (term "1,1,1,0") (inst "polyDivCoeff=jdiv(i_0, Z(2(#)))"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,2,1,1,1,0"))
                                    (rule "equal_literals" (formula "41") (term "0,1,1,1,0"))
                                     (builtin "One Step Simplification" (formula "41"))
                                    (rule "polySimp_addComm0" (formula "41") (term "1,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "41") (term "1,1,0"))
                                    (rule "polyDiv_pullOut" (formula "41") (term "1,1,1,0") (inst "polyDivCoeff=mul(jdiv(i_0, Z(2(#))), Z(neglit(1(#))))"))
                                    (rule "equal_literals" (formula "41") (term "0,1,1,1,0"))
                                     (builtin "One Step Simplification" (formula "41"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,1,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,1,1,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,0,1,1,1,0"))
                                    (rule "add_literals" (formula "41") (term "1,1,0,0,1,1,1,0"))
                                    (rule "times_zero_1" (formula "41") (term "1,0,0,1,1,1,0"))
                                    (rule "add_zero_right" (formula "41") (term "0,0,1,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "41") (term "1,1,0"))
                                    (rule "polySimp_addComm1" (formula "41") (term "0,1,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "41") (term "1,1,0"))
                                    (rule "add_literals" (formula "41") (term "1,1,1,1,0"))
                                    (rule "times_zero_1" (formula "41") (term "1,1,1,0"))
                                    (rule "add_zero_right" (formula "41") (term "1,1,0"))
                                    (rule "polyDiv_pullOut" (formula "41") (term "1,1,1,0") (inst "polyDivCoeff=jdiv(i_0, Z(2(#)))"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,2,1,1,1,0"))
                                    (rule "equal_literals" (formula "41") (term "0,1,1,1,0"))
                                     (builtin "One Step Simplification" (formula "41"))
                                    (rule "polySimp_addComm0" (formula "41") (term "1,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "41") (term "1,1,0"))
                                    (rule "polyDiv_pullOut" (formula "41") (term "1,1,1,0") (inst "polyDivCoeff=mul(jdiv(i_0, Z(2(#))), Z(neglit(1(#))))"))
                                    (rule "equal_literals" (formula "41") (term "0,1,1,1,0"))
                                     (builtin "One Step Simplification" (formula "41"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,1,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,1,1,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,0,1,1,1,0"))
                                    (rule "add_literals" (formula "41") (term "1,1,0,0,1,1,1,0"))
                                    (rule "times_zero_1" (formula "41") (term "1,0,0,1,1,1,0"))
                                    (rule "add_zero_right" (formula "41") (term "0,0,1,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "41") (term "1,1,0"))
                                    (rule "polySimp_addComm1" (formula "41") (term "0,1,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "41") (term "1,1,0"))
                                    (rule "add_literals" (formula "41") (term "1,1,1,1,0"))
                                    (rule "times_zero_1" (formula "41") (term "1,1,1,0"))
                                    (rule "add_zero_right" (formula "41") (term "1,1,0"))
                                    (rule "newSym_eq" (formula "33") (inst "l=l_0") (inst "newSymDef=mul(result_1, Z(0(#)))"))
                                    (rule "times_zero_1" (formula "33") (term "1,1"))
                                    (rule "add_zero_right" (formula "33") (term "1"))
                                    (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "33"))
                                    (rule "eqSymm" (formula "34"))
                                    (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "34"))
                                    (rule "applyEq" (formula "7") (term "1,1,0,0,0,1") (ifseqformula "34"))
                                    (rule "applyEq" (formula "36") (term "0") (ifseqformula "34"))
                                    (rule "applyEq" (formula "6") (term "1,1,0,0,1") (ifseqformula "34"))
                                    (rule "applyEq" (formula "35") (term "1,1") (ifseqformula "34"))
                                    (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "34"))
                                    (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                    (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "34"))
                                    (rule "inEqSimp_homoInEq1" (formula "7") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                    (rule "applyEq" (formula "32") (term "1") (ifseqformula "34"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0"))
                                    (rule "mul_literals" (formula "6") (term "0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0"))
                                    (rule "mul_literals" (formula "7") (term "0,1,0"))
                                    (rule "newSym_eq" (formula "5") (inst "l=l_1") (inst "newSymDef=mul(i_0, Z(0(#)))"))
                                    (rule "times_zero_1" (formula "5") (term "1,1"))
                                    (rule "add_zero_right" (formula "5") (term "1"))
                                    (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "5"))
                                    (rule "eqSymm" (formula "6"))
                                    (rule "applyEqRigid" (formula "5") (term "0,0") (ifseqformula "6"))
                                    (rule "applyEq" (formula "7") (term "1,1,0,0,0,1") (ifseqformula "6"))
                                    (rule "applyEqRigid" (formula "8") (term "0,0") (ifseqformula "6"))
                                    (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                    (rule "applyEq" (formula "43") (term "0,0,0,2,0,1") (ifseqformula "6"))
                                    (rule "applyEq" (formula "43") (term "0,1,1,1,0") (ifseqformula "6"))
                                    (rule "applyEqRigid" (formula "7") (term "0,0") (ifseqformula "6"))
                                    (rule "inEqSimp_homoInEq1" (formula "7") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                    (rule "applyEq" (formula "3") (term "0") (ifseqformula "6"))
                                    (rule "applyEq" (formula "38") (term "0,0,0") (ifseqformula "6"))
                                    (rule "applyEq" (formula "2") (term "0,2,0") (ifseqformula "6"))
                                    (rule "applyEqRigid" (formula "43") (term "0,0,0,0") (ifseqformula "6"))
                                    (rule "applyEqRigid" (formula "8") (term "1,1,0,0,0,1,1") (ifseqformula "6"))
                                    (rule "applyEqRigid" (formula "4") (term "1,1") (ifseqformula "6"))
                                    (rule "applyEq" (formula "38") (term "1") (ifseqformula "6"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0"))
                                    (rule "mul_literals" (formula "8") (term "0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0"))
                                    (rule "mul_literals" (formula "7") (term "0,1,0"))
                                    (rule "elimGcdEq" (formula "38") (inst "elimGcdRightDiv=l_1") (inst "elimGcdLeftDiv=div(mul(l_1, Z(2(#))), Z(2(#)))") (inst "elimGcd=Z(2(#))"))
                                     (builtin "One Step Simplification" (formula "38"))
                                    (rule "mul_literals" (formula "38") (term "0,1,0,0,1"))
                                    (rule "mul_literals" (formula "38") (term "0,1,0,0,0"))
                                    (rule "add_literals" (formula "38") (term "1,0,0"))
                                    (rule "mul_literals" (formula "38") (term "0,1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1"))
                                    (rule "polySimp_pullOutFactor0" (formula "38") (term "0,0,1"))
                                    (rule "add_literals" (formula "38") (term "1,0,0,1"))
                                    (rule "times_zero_1" (formula "38") (term "0,0,1"))
                                     (builtin "One Step Simplification" (formula "38"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0"))
                                    (rule "polySimp_pullOutFactor0" (formula "38") (term "0,0,0"))
                                    (rule "add_literals" (formula "38") (term "1,0,0,0"))
                                    (rule "times_zero_1" (formula "38") (term "0,0,0"))
                                    (rule "leq_literals" (formula "38") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "38"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor0" (formula "38") (term "0,0"))
                                    (rule "add_literals" (formula "38") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "38") (term "0,0"))
                                    (rule "qeq_literals" (formula "38") (term "0"))
                                     (builtin "One Step Simplification" (formula "38"))
                                    (rule "elimGcdGeq_antec" (formula "3") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                                    (rule "add_zero_right" (formula "3") (term "0,0,0,1,0"))
                                    (rule "leq_literals" (formula "3") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "times_zero_1" (formula "3") (term "1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "3") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                    (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "3") (term "0,0"))
                                    (rule "leq_literals" (formula "3") (term "0"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "elimGcdGeq_antec" (formula "37") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                    (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,0"))
                                    (rule "add_zero_right" (formula "37") (term "0,0,0,1,0"))
                                    (rule "leq_literals" (formula "37") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "times_zero_1" (formula "37") (term "1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "37") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "37") (term "0,0"))
                                    (rule "add_literals" (formula "37") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "37") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "37") (term "0,0"))
                                    (rule "leq_literals" (formula "37") (term "0"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "elimGcdLeq" (formula "7") (term "0,0,0,1") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_1)") (inst "elimGcdLeftDiv=n") (inst "elimGcd=Z(2(#))"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0,0,0,0,1"))
                                    (rule "mul_literals" (formula "7") (term "0,0,0,0,0,1,0,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,0,0,0,1"))
                                    (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0,0,0,0,0,1"))
                                    (rule "sub_literals" (formula "7") (term "0,0,0,0,0,0,0,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,1,0,0,0,0,1"))
                                    (rule "add_literals" (formula "7") (term "1,1,0,1,0,0,0,0,1"))
                                    (rule "times_zero_1" (formula "7") (term "1,0,1,0,0,0,0,1"))
                                    (rule "add_zero_right" (formula "7") (term "0,1,0,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0,0,0,0,0,1"))
                                    (rule "add_literals" (formula "7") (term "1,1,0,0,0,0,0,0,1"))
                                    (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0,0,1"))
                                    (rule "add_zero_right" (formula "7") (term "0,0,0,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "7") (term "0,0,1,0,0,0,0,1"))
                                    (rule "mul_literals" (formula "7") (term "0,0,0,1,0,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0,0,0,1"))
                                    (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "7") (term "0,1,0,0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "7") (term "0,0,1,0,0,0,0,1"))
                                    (rule "add_literals" (formula "7") (term "0,0,0,1,0,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,1,0,0,0,0,1"))
                                    (rule "add_literals" (formula "7") (term "1,1,0,1,0,0,0,0,1"))
                                    (rule "times_zero_1" (formula "7") (term "1,0,1,0,0,0,0,1"))
                                    (rule "add_zero_right" (formula "7") (term "0,1,0,0,0,0,1"))
                                    (rule "qeq_literals" (formula "7") (term "1,0,0,0,0,1"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0,0,1"))
                                    (rule "add_literals" (formula "7") (term "0,0,0,0,0,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "7") (term "0,0,0,0,0,0,1"))
                                    (rule "add_literals" (formula "7") (term "0,0,0,0,0,0,0,1"))
                                    (rule "add_zero_left" (formula "7") (term "0,0,0,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor0" (formula "7") (term "0,0,0,0,0,1"))
                                    (rule "add_literals" (formula "7") (term "1,0,0,0,0,0,1"))
                                    (rule "times_zero_1" (formula "7") (term "0,0,0,0,0,1"))
                                    (rule "leq_literals" (formula "7") (term "0,0,0,0,1"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "elimGcdGeq" (formula "8") (term "1,0,0,0,1") (inst "elimGcdRightDiv=l_0") (inst "elimGcdLeftDiv=n") (inst "elimGcd=Z(2(#))"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0,1,0,0,0,1"))
                                    (rule "mul_literals" (formula "8") (term "0,0,0,0,0,1,0,1,0,0,0,1"))
                                    (rule "sub_literals" (formula "8") (term "0,0,0,0,0,0,0,1,0,0,0,1"))
                                    (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0,0,1,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,1,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,1,0,1,0,0,0,1"))
                                    (rule "add_literals" (formula "8") (term "1,1,0,1,0,1,0,0,0,1"))
                                    (rule "times_zero_1" (formula "8") (term "1,0,1,0,1,0,0,0,1"))
                                    (rule "add_zero_right" (formula "8") (term "0,1,0,1,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0,0,1,0,0,0,1"))
                                    (rule "add_literals" (formula "8") (term "1,1,0,0,0,1,0,0,0,1"))
                                    (rule "times_zero_1" (formula "8") (term "1,0,0,0,1,0,0,0,1"))
                                    (rule "add_zero_right" (formula "8") (term "0,0,0,1,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "0,0,1,0,1,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor0" (formula "8") (term "0,1,0,1,0,0,0,1"))
                                    (rule "add_literals" (formula "8") (term "1,0,1,0,1,0,0,0,1"))
                                    (rule "times_zero_1" (formula "8") (term "0,1,0,1,0,0,0,1"))
                                    (rule "leq_literals" (formula "8") (term "1,0,1,0,0,0,1"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,1,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0,1,0,0,0,1"))
                                    (rule "add_literals" (formula "8") (term "1,1,0,0,1,0,0,0,1"))
                                    (rule "times_zero_1" (formula "8") (term "1,0,0,1,0,0,0,1"))
                                    (rule "add_zero_right" (formula "8") (term "0,0,1,0,0,0,1"))
                                    (rule "qeq_literals" (formula "8") (term "0,1,0,0,0,1"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "polyDiv_pullOut" (formula "43") (term "0,0,0") (inst "polyDivCoeff=l_1"))
                                    (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,2,0,0,0"))
                                    (rule "equal_literals" (formula "43") (term "0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "43"))
                                    (rule "polySimp_pullOutFactor0" (formula "43") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "43") (term "1,0,0,0,0,0"))
                                    (rule "times_zero_1" (formula "43") (term "0,0,0,0,0"))
                                    (rule "div_literals" (formula "43") (term "0,0,0,0"))
                                    (rule "add_zero_left" (formula "43") (term "0,0,0"))
                                    (rule "replace_known_left" (formula "43") (term "0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "43"))
                                    (rule "polyDiv_pullOut" (formula "38") (term "0") (inst "polyDivCoeff=l_1"))
                                    (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,2,0"))
                                    (rule "equal_literals" (formula "38") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "38"))
                                    (rule "polySimp_homoEq" (formula "38"))
                                    (rule "polySimp_pullOutFactor0" (formula "38") (term "0,0,0,1,0"))
                                    (rule "add_literals" (formula "38") (term "1,0,0,0,1,0"))
                                    (rule "times_zero_1" (formula "38") (term "0,0,0,1,0"))
                                    (rule "div_literals" (formula "38") (term "0,0,1,0"))
                                    (rule "add_zero_left" (formula "38") (term "0,1,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "38") (term "0"))
                                    (rule "add_literals" (formula "38") (term "1,0"))
                                    (rule "times_zero_1" (formula "38") (term "0"))
                                     (builtin "One Step Simplification" (formula "38"))
                                    (rule "closeTrue" (formula "38"))
                                 )
                              )
                              (branch "Case 2"
                                  (builtin "One Step Simplification" (formula "42"))
                                 (rule "insert_hidden_taclet_0" (userinteraction))
                                 (rule "close" (formula "43") (ifseqformula "1"))
                              )
                           )
                           (branch ""
                               (builtin "One Step Simplification" (formula "1"))
                               (builtin "One Step Simplification" (formula "42"))
                              (rule "closeTrue" (formula "42"))
                           )
                        )
                        (branch ""
                            (builtin "One Step Simplification" (formula "1"))
                            (builtin "One Step Simplification" (formula "42"))
                           (rule "closeTrue" (formula "42"))
                        )
                     )
                     (branch ""
                        (rule "impRight" (formula "41"))
                        (rule "andRight" (formula "42"))
                        (branch ""
                           (rule "andRight" (formula "42"))
                           (branch ""
                              (rule "andRight" (formula "42"))
                              (branch ""
                                 (rule "andRight" (formula "42"))
                                 (branch ""
                                    (rule "andRight" (formula "42"))
                                    (branch ""
                                       (rule "andRight" (formula "42"))
                                       (branch ""
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                       (branch ""
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                    )
                                    (branch ""
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                 )
                                 (branch ""
                                    (rule "impRight" (formula "42"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "closeFalse" (formula "2"))
                                 )
                              )
                              (branch ""
                                 (rule "impRight" (formula "42"))
                                 (rule "andRight" (formula "43"))
                                 (branch ""
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "closeFalse" (formula "2"))
                                 )
                                 (branch ""
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "closeFalse" (formula "2"))
                                 )
                              )
                           )
                           (branch ""
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                        (branch ""
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                  )
                  (branch "if x_2 false"
                      (builtin "One Step Simplification" (formula "41"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "ifUnfold" (formula "41") (term "1") (inst "#boolv=x_2"))
                     (rule "variableDeclaration" (formula "41") (term "1") (newnames "x_3"))
                     (rule "equality_comparison_simple" (formula "41") (term "1"))
                      (builtin "One Step Simplification" (formula "41"))
                     (rule "commute_and_2" (formula "22") (term "0,0,0,1,1,0"))
                     (rule "ifSplit" (formula "41"))
                     (branch "if x_3 true"
                         (builtin "One Step Simplification" (formula "42"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "blockReturn" (formula "42") (term "1"))
                        (rule "applyEq" (formula "37") (term "0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "37"))
                        (rule "lsReturnNonVoid" (formula "41") (term "1"))
                        (rule "assignment" (formula "41") (term "1"))
                         (builtin "One Step Simplification" (formula "41"))
                        (rule "methodCallReturn" (formula "41") (term "1"))
                        (rule "assignment" (formula "41") (term "1"))
                         (builtin "One Step Simplification" (formula "41"))
                        (rule "methodCallEmpty" (formula "41") (term "1"))
                        (rule "tryEmpty" (formula "41") (term "1"))
                        (rule "emptyModality" (formula "41") (term "1"))
                        (rule "andRight" (formula "41"))
                        (branch "Case 1"
                           (rule "impRight" (formula "41"))
                           (rule "andRight" (formula "42"))
                           (branch "Case 1"
                              (rule "andRight" (formula "42"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "42"))
                                 (branch "Case 1"
                                     (builtin "One Step Simplification" (formula "42"))
                                    (rule "notRight" (formula "42") (userinteraction))
                                    (rule "exLeft" (formula "1") (inst "sk=j_0") (userinteraction))
                                    (rule "instAll" (formula "1") (term "0,0,0") (ifseqformula "24") (userinteraction))
                                    (rule "cut_direct" (formula "1") (term "1,0,1") (userinteraction))
                                    (branch "CUT: j_0 * 2 > genHash(self.table[j_0 * 2], pow(2, i_2_0)) TRUE"
                                       (rule "doubleImpLeft" (formula "2") (userinteraction))
                                       (branch "Case 1"
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "replace_known_left" (formula "41") (term "1") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "41"))
                                          (rule "inEqSimp_ltRight" (formula "41"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "1") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "11") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "28") (term "0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulAssoc" (formula "28") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "0,1,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulAssoc" (formula "28") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "8"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "8") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "28") (term "0,1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "17"))
                                          (rule "mul_literals" (formula "17") (term "1,0,0"))
                                          (rule "add_literals" (formula "17") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,1,1"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,1,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "40"))
                                          (rule "polySimp_mulComm0" (formula "40") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "40") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "20"))
                                          (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "25"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "25") (term "0"))
                                          (rule "inEqSimp_gtToGeq" (formula "10") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "28") (term "0,1,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_gtToGeq" (formula "27") (term "1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "27") (term "0,1,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_gtToGeq" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "4"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0"))
                                          (rule "applyEq" (formula "4") (term "0,0,1,0") (ifseqformula "23"))
                                          (rule "applyEq" (formula "2") (term "0,0,1,0") (ifseqformula "5"))
                                          (rule "jmod_axiom" (formula "39") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "1,0"))
                                          (rule "jmod_axiom" (formula "9") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
                                          (rule "Query_axiom_for_maskNull_java_lang_Object__in_java_util_VerifiedIdentityHashMap" (formula "5") (term "1") (inst "maskNull_sk=maskNull_sk_0") (inst "#p0=o_1") (inst "#res=o"))
                                          (rule "eqSymm" (formula "5") (term "1,0,1"))
                                          (rule "polySimp_sepNegMonomial" (formula "40"))
                                          (rule "polySimp_mulLiterals" (formula "40") (term "0"))
                                          (rule "polySimp_sepNegMonomial" (formula "10"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                          (rule "Query_axiom_for_maskNull_java_lang_Object__in_java_util_VerifiedIdentityHashMap" (formula "2") (term "0,0,1,0") (inst "maskNull_sk=maskNull_sk_1") (inst "#p0=o_1") (inst "#res=o"))
                                          (rule "eqSymm" (formula "2") (term "1,0,1"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,0,1"))
                                          (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,0,1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "0,0"))
                                          (rule "polySimp_elimOne" (formula "13") (term "0,0"))
                                          (rule "applyEq" (formula "24") (term "0") (ifseqformula "25"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "29") (term "1,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "29") (term "1,0,1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "29") (term "0,1,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "29") (term "0,1,1,0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                          (rule "polySimp_elimOne" (formula "10") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "29") (term "1,0,1,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "29") (term "1,0,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "29") (term "0,1,0,1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,1,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "29") (term "1,1,0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0,1"))
                                          (rule "mul_literals" (formula "12") (term "0,1,0,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "19"))
                                          (rule "mul_literals" (formula "19") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "18") (term "0,1,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,1,1"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,1"))
                                          (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,1,1"))
                                          (rule "mul_literals" (formula "13") (term "0,1,0,0,0,1,1"))
                                          (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,1,1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "41"))
                                          (rule "polySimp_mulLiterals" (formula "41") (term "0"))
                                          (rule "polySimp_elimOne" (formula "41") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "22"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                          (rule "polySimp_elimOne" (formula "22") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "26"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                          (rule "polySimp_elimOne" (formula "26") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "12") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "0,0"))
                                          (rule "polySimp_elimOne" (formula "12") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "29") (term "1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "29") (term "0,1,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "29") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "28") (term "1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "0,1,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "28") (term "0,1,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "29") (term "0,1,0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "28") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "28") (term "0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                          (rule "polySimp_elimOne" (formula "5") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                          (rule "polySimp_elimOne" (formula "3") (term "0"))
                                          (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "1"))
                                          (rule "andLeft" (formula "5"))
                                          (rule "inEqSimp_homoInEq1" (formula "5"))
                                          (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                          (rule "add_literals" (formula "5") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "5") (term "1,0"))
                                          (rule "add_zero_right" (formula "5") (term "0"))
                                          (rule "leq_literals" (formula "5"))
                                          (rule "closeFalse" (formula "5"))
                                       )
                                       (branch "Case 2"
                                           (builtin "One Step Simplification" (formula "3"))
                                           (builtin "One Step Simplification" (formula "40"))
                                          (rule "true_left" (formula "3"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "notRight" (formula "40"))
                                          (rule "andLeft" (formula "3"))
                                          (rule "inEqSimp_ltToLeq" (formula "40"))
                                          (rule "polySimp_mulComm0" (formula "40") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "40") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "25"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "25") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,1,1"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,1,1"))
                                          (rule "inEqSimp_gtToGeq" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "28") (term "0,1,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "28") (term "0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulAssoc" (formula "28") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "0,1,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "17"))
                                          (rule "mul_literals" (formula "17") (term "1,0,0"))
                                          (rule "add_literals" (formula "17") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "8"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "8") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "20"))
                                          (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "11") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,1"))
                                          (rule "inEqSimp_gtToGeq" (formula "27") (term "1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "27") (term "0,1,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulAssoc" (formula "28") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_gtToGeq" (formula "10") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "28") (term "0,1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "4"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0"))
                                          (rule "applyEq" (formula "4") (term "0,0,1,0") (ifseqformula "23"))
                                          (rule "applyEq" (formula "1") (term "0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "2") (term "0,0,1,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "2") (term "0,0,1,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "5") (term "1") (ifseqformula "1"))
                                          (rule "jmod_axiom" (formula "9") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
                                          (rule "jmod_axiom" (formula "39") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "1,0"))
                                          (rule "polySimp_sepNegMonomial" (formula "9"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                          (rule "polySimp_sepNegMonomial" (formula "39"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                                          (rule "Query_axiom_for_maskNull_java_lang_Object__in_java_util_VerifiedIdentityHashMap" (formula "1") (term "0") (inst "maskNull_sk=maskNull_sk_0") (inst "#p0=o_1") (inst "#res=o"))
                                          (rule "eqSymm" (formula "1") (term "1,0,1"))
                                          (rule "applyEqRigid" (formula "1") (term "1,1,0,1") (ifseqformula "2"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "41"))
                                          (rule "polySimp_mulLiterals" (formula "41") (term "0"))
                                          (rule "polySimp_elimOne" (formula "41") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0,0,1"))
                                          (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "29") (term "0,1,0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0,0,0,0,1,1,0"))
                                          (rule "applyEq" (formula "23") (term "0") (ifseqformula "24"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "25"))
                                          (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                          (rule "polySimp_elimOne" (formula "25") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0,1,1"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,1,1"))
                                          (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0,1,1"))
                                          (rule "mul_literals" (formula "12") (term "0,1,0,0,0,1,1"))
                                          (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0,1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "27") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "27") (term "0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "0,1,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "28") (term "0,1,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "28") (term "0,1,0,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "18"))
                                          (rule "mul_literals" (formula "18") (term "1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                          (rule "polySimp_elimOne" (formula "9") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "21"))
                                          (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                          (rule "polySimp_elimOne" (formula "21") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,0,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "0,0"))
                                          (rule "polySimp_elimOne" (formula "12") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0,1"))
                                          (rule "mul_literals" (formula "11") (term "0,1,0,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0,1"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "27") (term "1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "0,1,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "27") (term "0,1,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "28") (term "0,1,1,0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "11") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "0,0"))
                                          (rule "polySimp_elimOne" (formula "11") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,1,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1,0,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "28") (term "0,1,0,1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,1,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "28") (term "1,1,0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "28") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                          (rule "polySimp_elimOne" (formula "5") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                          (rule "polySimp_elimOne" (formula "3") (term "0"))
                                          (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "14"))
                                          (rule "leq_literals" (formula "22") (term "0"))
                                           (builtin "One Step Simplification" (formula "22"))
                                          (rule "true_left" (formula "22"))
                                          (rule "elimGcdLeq" (formula "27") (term "1,0,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "27") (term "0,0,0,0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "sub_literals" (formula "27") (term "0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "27") (term "1,1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "27") (term "1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "27") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "27") (term "1,1,0,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "27") (term "1,0,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "27") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "27") (term "0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "27") (term "0,0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "27") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_addComm1" (formula "27") (term "0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "27") (term "0,0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "27") (term "1,1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "27") (term "1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "27") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "qeq_literals" (formula "27") (term "1,0,1,0,0,0,0,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "27") (term "0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_addComm1" (formula "27") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "27") (term "0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "27") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "27") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "27") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "27") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "leq_literals" (formula "27") (term "0,1,0,0,0,0,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "elimGcdGeq" (formula "12") (term "1,0,0,1,1") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=m") (inst "elimGcd=Z(2(#))"))
                                          (rule "add_zero_right" (formula "12") (term "0,0,0,1,0,1,0,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,1,0,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,1,0,0,1,1"))
                                          (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0,0,1,0,0,1,1"))
                                          (rule "sub_literals" (formula "12") (term "0,0,0,0,0,0,0,1,0,0,1,1"))
                                          (rule "times_zero_1" (formula "12") (term "0,0,0,1,0,1,0,0,1,1"))
                                          (rule "polySimp_addLiterals" (formula "12") (term "0,0,0,0,0,1,0,0,1,1"))
                                          (rule "add_zero_left" (formula "12") (term "0,0,1,0,1,0,0,1,1"))
                                          (rule "add_zero_right" (formula "12") (term "0,0,0,0,0,1,0,0,1,1"))
                                          (rule "polySimp_pullOutFactor0" (formula "12") (term "0,1,0,1,0,0,1,1"))
                                          (rule "add_literals" (formula "12") (term "1,0,1,0,1,0,0,1,1"))
                                          (rule "times_zero_1" (formula "12") (term "0,1,0,1,0,0,1,1"))
                                          (rule "leq_literals" (formula "12") (term "1,0,1,0,0,1,1"))
                                           (builtin "One Step Simplification" (formula "12"))
                                          (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0,1,0,0,1,1"))
                                          (rule "add_literals" (formula "12") (term "1,1,0,0,1,0,0,1,1"))
                                          (rule "times_zero_1" (formula "12") (term "1,0,0,1,0,0,1,1"))
                                          (rule "add_zero_right" (formula "12") (term "0,0,1,0,0,1,1"))
                                          (rule "qeq_literals" (formula "12") (term "0,1,0,0,1,1"))
                                           (builtin "One Step Simplification" (formula "12"))
                                          (rule "elimGcdLeq" (formula "27") (term "0,1,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                          (rule "sub_literals" (formula "27") (term "0,0,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "27") (term "0,0,0,0,0,1,0,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "27") (term "1,1,0,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "27") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "27") (term "1,1,0,1,0,0,1,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "27") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "27") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "27") (term "0,0,1,0,0,1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "27") (term "0,0,0,1,0,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "27") (term "0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "27") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_addComm1" (formula "27") (term "0,0,1,0,0,1,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "27") (term "0,0,0,1,0,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "27") (term "1,1,0,1,0,0,1,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "27") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "27") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                          (rule "qeq_literals" (formula "27") (term "1,0,0,1,0,0,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_addComm1" (formula "27") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "27") (term "0,0,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "27") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "27") (term "0,0,0,1,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "27") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "27") (term "0,0,0,1,0,0,0,1,1,0"))
                                          (rule "leq_literals" (formula "27") (term "0,0,1,0,0,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "elimGcdGeq" (formula "27") (term "1,1,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,0,1,1,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "27") (term "0,0,0,0,0,1,1,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "27") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                                          (rule "sub_literals" (formula "27") (term "0,0,0,0,0,0,1,1,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0,1,1,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "27") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "27") (term "0,0,0,0,0,1,1,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "27") (term "0,0,1,0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,0,0,1,1,0,0,1,1,0"))
                                          (rule "add_literals" (formula "27") (term "1,1,0,0,0,1,1,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "27") (term "1,0,0,0,1,1,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "27") (term "0,0,0,1,1,0,0,1,1,0"))
                                          (rule "qeq_literals" (formula "27") (term "0,0,1,1,0,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "polySimp_pullOutFactor0" (formula "27") (term "0,0,1,1,0,0,1,1,0"))
                                          (rule "add_literals" (formula "27") (term "1,0,0,1,1,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "27") (term "0,0,1,1,0,0,1,1,0"))
                                          (rule "leq_literals" (formula "27") (term "0,1,1,0,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "elimGcdGeq" (formula "27") (term "0,1,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "27") (term "0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "27") (term "0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "sub_literals" (formula "27") (term "0,0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "27") (term "0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "27") (term "0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "27") (term "0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "27") (term "1,1,0,0,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "27") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "qeq_literals" (formula "27") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "polySimp_pullOutFactor0" (formula "27") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "27") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "27") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "leq_literals" (formula "27") (term "0,0,1,0,0,0,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "27"))
                                          (rule "newSym_eq" (formula "38") (inst "l=l_0") (inst "newSymDef=mul(result_1, Z(0(#)))"))
                                          (rule "times_zero_1" (formula "38") (term "1,1"))
                                          (rule "add_zero_right" (formula "38") (term "1"))
                                          (rule "applyEq" (formula "39") (term "0,0") (ifseqformula "38"))
                                          (rule "eqSymm" (formula "39"))
                                          (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "39"))
                                          (rule "inEqSimp_homoInEq0" (formula "11") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                          (rule "applyEq" (formula "11") (term "1,1,0,0,1") (ifseqformula "39"))
                                          (rule "applyEq" (formula "38") (term "0,0") (ifseqformula "39"))
                                          (rule "applyEq" (formula "41") (term "0") (ifseqformula "39"))
                                          (rule "applyEq" (formula "40") (term "1,1") (ifseqformula "39"))
                                          (rule "applyEq" (formula "12") (term "1,1,0,0,0,1") (ifseqformula "39"))
                                          (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "39"))
                                          (rule "inEqSimp_homoInEq1" (formula "12") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                          (rule "applyEq" (formula "37") (term "1") (ifseqformula "39"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                          (rule "mul_literals" (formula "11") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0"))
                                          (rule "mul_literals" (formula "12") (term "0,1,0"))
                                          (rule "elimGcdGeq_antec" (formula "41") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                          (rule "leq_literals" (formula "41") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "41"))
                                          (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "41") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_addLiterals" (formula "41") (term "0,0,0,0"))
                                          (rule "add_zero_right" (formula "41") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,0"))
                                          (rule "add_literals" (formula "41") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "41") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "41") (term "0,0"))
                                          (rule "leq_literals" (formula "41") (term "0"))
                                           (builtin "One Step Simplification" (formula "41"))
                                          (rule "elimGcdGeq" (formula "12") (term "1,0,0,0,1") (inst "elimGcdRightDiv=l_0") (inst "elimGcdLeftDiv=n") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,1,0,0,0,1"))
                                          (rule "mul_literals" (formula "12") (term "0,0,0,0,0,1,0,1,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,1,0,0,0,1"))
                                          (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0,0,1,0,0,0,1"))
                                          (rule "sub_literals" (formula "12") (term "0,0,0,0,0,0,0,1,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,1,0,1,0,0,0,1"))
                                          (rule "add_literals" (formula "12") (term "1,1,0,1,0,1,0,0,0,1"))
                                          (rule "times_zero_1" (formula "12") (term "1,0,1,0,1,0,0,0,1"))
                                          (rule "add_zero_right" (formula "12") (term "0,1,0,1,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0,0,1,0,0,0,1"))
                                          (rule "add_literals" (formula "12") (term "1,1,0,0,0,1,0,0,0,1"))
                                          (rule "times_zero_1" (formula "12") (term "1,0,0,0,1,0,0,0,1"))
                                          (rule "add_zero_right" (formula "12") (term "0,0,0,1,0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "0,0,1,0,1,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor0" (formula "12") (term "0,1,0,1,0,0,0,1"))
                                          (rule "add_literals" (formula "12") (term "1,0,1,0,1,0,0,0,1"))
                                          (rule "times_zero_1" (formula "12") (term "0,1,0,1,0,0,0,1"))
                                          (rule "leq_literals" (formula "12") (term "1,0,1,0,0,0,1"))
                                           (builtin "One Step Simplification" (formula "12"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,1,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0,1,0,0,0,1"))
                                          (rule "add_literals" (formula "12") (term "1,1,0,0,1,0,0,0,1"))
                                          (rule "times_zero_1" (formula "12") (term "1,0,0,1,0,0,0,1"))
                                          (rule "add_zero_right" (formula "12") (term "0,0,1,0,0,0,1"))
                                          (rule "qeq_literals" (formula "12") (term "0,1,0,0,0,1"))
                                           (builtin "One Step Simplification" (formula "12"))
                                          (rule "elimGcdGeq" (formula "11") (term "1,0,0,1") (inst "elimGcdRightDiv=l_0") (inst "elimGcdLeftDiv=n") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,1,0,0,1"))
                                          (rule "mul_literals" (formula "11") (term "0,0,0,0,0,1,0,1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,1,0,0,1"))
                                          (rule "sub_literals" (formula "11") (term "0,0,0,0,0,0,0,1,0,0,1"))
                                          (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0,0,1,0,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,1,0,1,0,0,1"))
                                          (rule "add_literals" (formula "11") (term "1,1,0,1,0,1,0,0,1"))
                                          (rule "times_zero_1" (formula "11") (term "1,0,1,0,1,0,0,1"))
                                          (rule "add_zero_right" (formula "11") (term "0,1,0,1,0,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0,0,1,0,0,1"))
                                          (rule "add_literals" (formula "11") (term "1,1,0,0,0,1,0,0,1"))
                                          (rule "times_zero_1" (formula "11") (term "1,0,0,0,1,0,0,1"))
                                          (rule "add_zero_right" (formula "11") (term "0,0,0,1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0,1,0,0,1"))
                                          (rule "polySimp_pullOutFactor0" (formula "11") (term "0,1,0,1,0,0,1"))
                                          (rule "add_literals" (formula "11") (term "1,0,1,0,1,0,0,1"))
                                          (rule "times_zero_1" (formula "11") (term "0,1,0,1,0,0,1"))
                                          (rule "leq_literals" (formula "11") (term "1,0,1,0,0,1"))
                                           (builtin "One Step Simplification" (formula "11"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,1,0,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0,1,0,0,1"))
                                          (rule "add_literals" (formula "11") (term "1,1,0,0,1,0,0,1"))
                                          (rule "times_zero_1" (formula "11") (term "1,0,0,1,0,0,1"))
                                          (rule "add_zero_right" (formula "11") (term "0,0,1,0,0,1"))
                                          (rule "qeq_literals" (formula "11") (term "0,1,0,0,1"))
                                           (builtin "One Step Simplification" (formula "11"))
                                          (rule "newSym_eq" (formula "10") (inst "l=l_1") (inst "newSymDef=mul(i_0, Z(0(#)))"))
                                          (rule "times_zero_1" (formula "10") (term "1,1"))
                                          (rule "add_zero_right" (formula "10") (term "1"))
                                          (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "10"))
                                          (rule "eqSymm" (formula "11"))
                                          (rule "applyEq" (formula "7") (term "0,2,0") (ifseqformula "11"))
                                          (rule "applyEqRigid" (formula "13") (term "1,1,0,0,0,1,1") (ifseqformula "11"))
                                          (rule "applyEqRigid" (formula "10") (term "0,0") (ifseqformula "11"))
                                          (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "11"))
                                          (rule "inEqSimp_homoInEq1" (formula "12") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                          (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "11"))
                                          (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                                          (rule "applyEqRigid" (formula "9") (term "1,1") (ifseqformula "11"))
                                          (rule "applyEqRigid" (formula "8") (term "0") (ifseqformula "11"))
                                          (rule "applyEq" (formula "12") (term "1,1,0,0,0,1") (ifseqformula "11"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0"))
                                          (rule "mul_literals" (formula "12") (term "0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0"))
                                          (rule "mul_literals" (formula "13") (term "0,1,0"))
                                          (rule "elimGcdGeq_antec" (formula "8") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0"))
                                          (rule "add_zero_right" (formula "8") (term "0,0,0,1,0"))
                                          (rule "leq_literals" (formula "8") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "times_zero_1" (formula "8") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "8") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                          (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "8") (term "0,0"))
                                          (rule "leq_literals" (formula "8") (term "0"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "elimGcdLeq" (formula "12") (term "0,0,0,1") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_1)") (inst "elimGcdLeftDiv=n") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,0,0,0,1"))
                                          (rule "sub_literals" (formula "12") (term "0,0,0,0,0,0,0,0,0,0,1"))
                                          (rule "mul_literals" (formula "12") (term "0,0,0,0,0,1,0,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,0,0,0,1"))
                                          (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0,0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,1,0,0,0,0,1"))
                                          (rule "add_literals" (formula "12") (term "1,1,0,1,0,0,0,0,1"))
                                          (rule "times_zero_1" (formula "12") (term "1,0,1,0,0,0,0,1"))
                                          (rule "add_zero_right" (formula "12") (term "0,1,0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0,0,0,0,0,1"))
                                          (rule "add_literals" (formula "12") (term "1,1,0,0,0,0,0,0,1"))
                                          (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0,0,1"))
                                          (rule "add_zero_right" (formula "12") (term "0,0,0,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "12") (term "0,0,1,0,0,0,0,1"))
                                          (rule "mul_literals" (formula "12") (term "0,0,0,1,0,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0,0,0,1"))
                                          (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "12") (term "0,1,0,0,0,0,1"))
                                          (rule "polySimp_addComm1" (formula "12") (term "0,0,1,0,0,0,0,1"))
                                          (rule "add_literals" (formula "12") (term "0,0,0,1,0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,1,0,0,0,0,1"))
                                          (rule "add_literals" (formula "12") (term "1,1,0,1,0,0,0,0,1"))
                                          (rule "times_zero_1" (formula "12") (term "1,0,1,0,0,0,0,1"))
                                          (rule "add_zero_right" (formula "12") (term "0,1,0,0,0,0,1"))
                                          (rule "qeq_literals" (formula "12") (term "1,0,0,0,0,1"))
                                           (builtin "One Step Simplification" (formula "12"))
                                          (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0,0,1"))
                                          (rule "add_literals" (formula "12") (term "0,0,0,0,0,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0,1"))
                                          (rule "polySimp_addComm1" (formula "12") (term "0,0,0,0,0,0,1"))
                                          (rule "add_literals" (formula "12") (term "0,0,0,0,0,0,0,1"))
                                          (rule "add_zero_left" (formula "12") (term "0,0,0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor0" (formula "12") (term "0,0,0,0,0,1"))
                                          (rule "add_literals" (formula "12") (term "1,0,0,0,0,0,1"))
                                          (rule "times_zero_1" (formula "12") (term "0,0,0,0,0,1"))
                                          (rule "leq_literals" (formula "12") (term "0,0,0,0,1"))
                                           (builtin "One Step Simplification" (formula "12"))
                                          (rule "elimGcdLeq" (formula "13") (term "0,0,0,1,1") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_1)") (inst "elimGcdLeftDiv=m") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0,0,0,0,1,1"))
                                          (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0,0,0,0,0,1,1"))
                                          (rule "mul_literals" (formula "13") (term "0,0,0,0,0,1,0,0,0,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0,0,0,1,1"))
                                          (rule "sub_literals" (formula "13") (term "0,0,0,0,0,0,0,0,0,0,1,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,1,0,0,0,0,1,1"))
                                          (rule "add_literals" (formula "13") (term "1,1,0,1,0,0,0,0,1,1"))
                                          (rule "times_zero_1" (formula "13") (term "1,0,1,0,0,0,0,1,1"))
                                          (rule "add_zero_right" (formula "13") (term "0,1,0,0,0,0,1,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0,0,0,0,0,1,1"))
                                          (rule "add_literals" (formula "13") (term "1,1,0,0,0,0,0,0,1,1"))
                                          (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0,0,1,1"))
                                          (rule "add_zero_right" (formula "13") (term "0,0,0,0,0,0,1,1"))
                                          (rule "polySimp_rightDist" (formula "13") (term "0,0,1,0,0,0,0,1,1"))
                                          (rule "mul_literals" (formula "13") (term "0,0,0,1,0,0,0,0,1,1"))
                                          (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0,0,0,1,1"))
                                          (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0,0,0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "0,1,0,0,0,0,1,1"))
                                          (rule "polySimp_addComm1" (formula "13") (term "0,0,1,0,0,0,0,1,1"))
                                          (rule "add_literals" (formula "13") (term "0,0,0,1,0,0,0,0,1,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,1,0,0,0,0,1,1"))
                                          (rule "add_literals" (formula "13") (term "1,1,0,1,0,0,0,0,1,1"))
                                          (rule "times_zero_1" (formula "13") (term "1,0,1,0,0,0,0,1,1"))
                                          (rule "add_zero_right" (formula "13") (term "0,1,0,0,0,0,1,1"))
                                          (rule "qeq_literals" (formula "13") (term "1,0,0,0,0,1,1"))
                                           (builtin "One Step Simplification" (formula "13"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0,0,1,1"))
                                          (rule "add_literals" (formula "13") (term "0,0,0,0,0,0,0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0,1,1"))
                                          (rule "polySimp_addComm1" (formula "13") (term "0,0,0,0,0,0,1,1"))
                                          (rule "add_literals" (formula "13") (term "0,0,0,0,0,0,0,1,1"))
                                          (rule "add_zero_left" (formula "13") (term "0,0,0,0,0,0,1,1"))
                                          (rule "polySimp_pullOutFactor0" (formula "13") (term "0,0,0,0,0,1,1"))
                                          (rule "add_literals" (formula "13") (term "1,0,0,0,0,0,1,1"))
                                          (rule "times_zero_1" (formula "13") (term "0,0,0,0,0,1,1"))
                                          (rule "leq_literals" (formula "13") (term "0,0,0,0,1,1"))
                                           (builtin "One Step Simplification" (formula "13"))
                                          (rule "elimGcdGeq" (formula "13") (term "0") (inst "elimGcdRightDiv=add(Z(1(#)), l_1)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0,0"))
                                          (rule "mul_literals" (formula "13") (term "0,0,0,0,0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0"))
                                          (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0,0,0"))
                                          (rule "sub_literals" (formula "13") (term "0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,1,0,0"))
                                          (rule "add_literals" (formula "13") (term "1,1,0,1,0,0"))
                                          (rule "times_zero_1" (formula "13") (term "1,0,1,0,0"))
                                          (rule "add_zero_right" (formula "13") (term "0,1,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "13") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "13") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "13") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "13") (term "0,0,1,0,0"))
                                          (rule "mul_literals" (formula "13") (term "0,0,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "13") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,1,0,0"))
                                          (rule "add_literals" (formula "13") (term "1,1,0,1,0,0"))
                                          (rule "times_zero_1" (formula "13") (term "1,0,1,0,0"))
                                          (rule "add_zero_right" (formula "13") (term "0,1,0,0"))
                                          (rule "leq_literals" (formula "13") (term "1,0,0"))
                                           (builtin "One Step Simplification" (formula "13"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "13") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "13") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "13") (term "0,0,0"))
                                          (rule "add_literals" (formula "13") (term "1,0,0,0"))
                                          (rule "times_zero_1" (formula "13") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "13") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "13"))
                                          (rule "elimGcdLeq" (formula "12") (term "0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_1)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                          (rule "sub_literals" (formula "12") (term "0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,0"))
                                          (rule "mul_literals" (formula "12") (term "0,0,0,0,0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,0"))
                                          (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,1,0,0"))
                                          (rule "add_literals" (formula "12") (term "1,1,0,1,0,0"))
                                          (rule "times_zero_1" (formula "12") (term "1,0,1,0,0"))
                                          (rule "add_zero_right" (formula "12") (term "0,1,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "12") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "12") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "12") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "12") (term "0,0,1,0,0"))
                                          (rule "mul_literals" (formula "12") (term "0,0,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "12") (term "0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "12") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,1,0,0"))
                                          (rule "add_literals" (formula "12") (term "1,1,0,1,0,0"))
                                          (rule "times_zero_1" (formula "12") (term "1,0,1,0,0"))
                                          (rule "add_zero_right" (formula "12") (term "0,1,0,0"))
                                          (rule "qeq_literals" (formula "12") (term "1,0,0"))
                                           (builtin "One Step Simplification" (formula "12"))
                                          (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "12") (term "0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "12") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "12") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "12") (term "0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "12") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "12") (term "0,0,0"))
                                          (rule "add_literals" (formula "12") (term "1,0,0,0"))
                                          (rule "times_zero_1" (formula "12") (term "0,0,0"))
                                          (rule "leq_literals" (formula "12") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "12"))
                                          (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "16"))
                                          (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                                          (rule "mul_literals" (formula "22") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "22") (term "0"))
                                          (rule "add_literals" (formula "22") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                          (rule "polySimp_elimOne" (formula "22") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "42") (ifseqformula "16"))
                                          (rule "polySimp_rightDist" (formula "42") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0"))
                                          (rule "mul_literals" (formula "42") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "42") (term "0"))
                                          (rule "add_literals" (formula "42") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "42"))
                                          (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                          (rule "elimGcdLeq_antec" (formula "42") (inst "elimGcdRightDiv=Z(1(1(9(0(7(8(6(3(5(#))))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "42") (term "1,0,1,0"))
                                          (rule "leq_literals" (formula "42") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "42"))
                                          (rule "neg_literal" (formula "42") (term "0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "42") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_addLiterals" (formula "42") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "42") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "42") (term "0,0"))
                                          (rule "add_literals" (formula "42") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "42") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "42") (term "0,0"))
                                          (rule "qeq_literals" (formula "42") (term "0"))
                                           (builtin "One Step Simplification" (formula "42"))
                                          (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "16"))
                                          (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                                          (rule "mul_literals" (formula "9") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "9") (term "0"))
                                          (rule "add_literals" (formula "9") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                          (rule "elimGcdLeq_antec" (formula "9") (inst "elimGcdRightDiv=Z(1(1(9(0(7(8(6(3(5(#))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0"))
                                          (rule "leq_literals" (formula "9") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "9"))
                                          (rule "neg_literal" (formula "9") (term "0,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_addLiterals" (formula "9") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "9") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                                          (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "9") (term "0,0"))
                                          (rule "qeq_literals" (formula "9") (term "0"))
                                           (builtin "One Step Simplification" (formula "9"))
                                          (rule "boxToDiamond" (formula "1") (term "1"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "nnf_imp2or" (formula "17") (term "1,0"))
                                          (rule "nnf_imp2or" (formula "18") (term "1,0,1,0"))
                                          (rule "nnf_imp2or" (formula "28") (term "0,1,1,0"))
                                          (rule "nnf_imp2or" (formula "29") (term "0"))
                                          (rule "commute_and" (formula "28") (term "0,0"))
                                          (rule "commute_and" (formula "17") (term "0,0"))
                                          (rule "jdiv_axiom" (formula "20") (term "1,0"))
                                          (rule "eqSymm" (formula "20"))
                                          (rule "inEqSimp_subsumption1" (formula "20") (term "0,0") (ifseqformula "15"))
                                          (rule "leq_literals" (formula "20") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "eqSymm" (formula "20"))
                                          (rule "applyEq" (formula "18") (term "1,1,0,0,0,1,0") (ifseqformula "20"))
                                          (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "20"))
                                          (rule "applyEq" (formula "17") (term "1,1,1,0,0") (ifseqformula "20"))
                                          (rule "applyEqRigid" (formula "21") (term "1,0") (ifseqformula "20"))
                                          (rule "applyEqRigid" (formula "27") (term "0") (ifseqformula "20"))
                                          (rule "applyEq" (formula "29") (term "1,1,1,0,0") (ifseqformula "20"))
                                          (rule "applyEq" (formula "18") (term "1,1,0,0,0") (ifseqformula "20"))
                                          (rule "applyEq" (formula "30") (term "1,1,0,0,0,0") (ifseqformula "20"))
                                          (rule "nnf_imp2or" (formula "13") (term "0,1,1"))
                                          (rule "nnf_imp2or" (formula "13") (term "0,0,1"))
                                          (rule "nnf_imp2or" (formula "12") (term "0,1"))
                                          (rule "nnf_imp2or" (formula "29") (term "1,0"))
                                          (rule "nnf_imp2or" (formula "30") (term "1,0"))
                                          (rule "nnf_imp2or" (formula "17") (term "0"))
                                          (rule "nnf_imp2or" (formula "18") (term "0"))
                                          (rule "nnf_imp2or" (formula "29") (term "0"))
                                          (rule "nnf_notAnd" (formula "30") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "30") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "30") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "30") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "30") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "30") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "30") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "30") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "30") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
                                          (rule "mul_literals" (formula "30") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "17") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "17") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "17") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                                          (rule "mul_literals" (formula "17") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "18") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "18") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "18") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "18") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "18") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "18") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "18") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "18") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                          (rule "mul_literals" (formula "18") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "29") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "29") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "29") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "29") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "29") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "29") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0"))
                                          (rule "mul_literals" (formula "29") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "12") (term "0,0,1"))
                                          (rule "inEqSimp_notLeq" (formula "12") (term "0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0,1"))
                                          (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0,1"))
                                          (rule "add_literals" (formula "12") (term "0,0,0,0,0,0,1"))
                                          (rule "add_zero_left" (formula "12") (term "0,0,0,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "12") (term "1,0,0,0,1"))
                                          (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,1"))
                                          (rule "mul_literals" (formula "12") (term "0,1,1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,1"))
                                          (rule "nnf_notAnd" (formula "30") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "30"))
                                          (rule "inEqSimp_notGeq" (formula "30") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,1,0,1,0"))
                                          (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,1,0"))
                                          (rule "add_literals" (formula "30") (term "0,0,0,1,0,1,0"))
                                          (rule "add_zero_left" (formula "30") (term "0,0,1,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,1,0"))
                                          (rule "nnf_imp2or" (formula "18") (term "0,1,0"))
                                          (rule "nnf_notAnd" (formula "29") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "29"))
                                          (rule "inEqSimp_notLeq" (formula "29") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,1,0,1,0"))
                                          (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,1,0"))
                                          (rule "add_literals" (formula "29") (term "0,0,0,1,0,1,0"))
                                          (rule "add_zero_left" (formula "29") (term "0,0,1,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,1,0"))
                                          (rule "nnf_notAnd" (formula "13") (term "0,0,1,1"))
                                          (rule "inEqSimp_notLeq" (formula "13") (term "0,0,0,1,1"))
                                          (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0,1,1"))
                                          (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0,1,1"))
                                          (rule "add_literals" (formula "13") (term "0,0,0,0,0,0,1,1"))
                                          (rule "add_zero_left" (formula "13") (term "0,0,0,0,0,1,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,1,1"))
                                          (rule "polySimp_elimOne" (formula "13") (term "1,0,0,0,1,1"))
                                          (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0,1,1"))
                                          (rule "times_zero_1" (formula "13") (term "1,0,0,1,0,0,1,1"))
                                          (rule "add_zero_right" (formula "13") (term "0,0,1,0,0,1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,1,1"))
                                          (rule "mul_literals" (formula "13") (term "1,1,0,0,1,1"))
                                          (rule "nnf_notAnd" (formula "13") (term "0,0,0,1"))
                                          (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,0,1"))
                                          (rule "mul_literals" (formula "13") (term "0,1,1,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,0,1"))
                                          (rule "inEqSimp_notLeq" (formula "13") (term "0,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0,0,1"))
                                          (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0,0,1"))
                                          (rule "add_literals" (formula "13") (term "0,0,0,0,0,0,0,1"))
                                          (rule "add_zero_left" (formula "13") (term "0,0,0,0,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "13") (term "1,0,0,0,0,1"))
                                          (rule "nnf_imp2or" (formula "30") (term "0,1,1,0"))
                                          (rule "nnf_notAnd" (formula "18") (term "0,0,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "18") (term "0,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,0,1,0"))
                                          (rule "add_literals" (formula "18") (term "0,0,0,0,0,0,1,0"))
                                          (rule "add_zero_left" (formula "18") (term "0,0,0,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "18") (term "1,0,0,0,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "18") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "18") (term "0,1,1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0,1,0"))
                                          (rule "jdiv_axiom" (formula "41") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "41") (term "0,0,2,1"))
                                          (rule "eqSymm" (formula "41"))
                                          (rule "applyEq" (formula "41") (term "1") (ifseqformula "42"))
                                          (rule "inEqSimp_subsumption6" (formula "41") (term "0,0") (ifseqformula "46"))
                                          (rule "times_zero_1" (formula "41") (term "1,1,0,0,0"))
                                          (rule "greater_literals" (formula "41") (term "0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "41"))
                                          (rule "leq_literals" (formula "41") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "41"))
                                          (rule "polyDiv_pullOut" (formula "41") (term "0") (inst "polyDivCoeff=l_0"))
                                          (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,2,0"))
                                          (rule "equal_literals" (formula "41") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "41"))
                                          (rule "polySimp_homoEq" (formula "41"))
                                          (rule "polySimp_pullOutFactor0" (formula "41") (term "0,0,0,1,0"))
                                          (rule "add_literals" (formula "41") (term "1,0,0,0,1,0"))
                                          (rule "times_zero_1" (formula "41") (term "0,0,0,1,0"))
                                          (rule "div_literals" (formula "41") (term "0,0,1,0"))
                                          (rule "add_zero_left" (formula "41") (term "0,1,0"))
                                          (rule "polySimp_pullOutFactor1" (formula "41") (term "0"))
                                          (rule "add_literals" (formula "41") (term "1,0"))
                                          (rule "times_zero_1" (formula "41") (term "0"))
                                           (builtin "One Step Simplification" (formula "41"))
                                          (rule "true_left" (formula "41"))
                                          (rule "nnf_notAnd" (formula "18") (term "0,1,0,1,0"))
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "nnf_notAnd" (formula "29") (term "0,0,1,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "29") (term "0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "29") (term "0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "29") (term "0,0,0,0,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "29") (term "0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "29") (term "1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "29") (term "1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "29") (term "0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0,1,1,0"))
                                          (rule "nnf_notAnd" (formula "30") (term "0,0,1,1,0"))
                                          (rule "jdiv_axiom" (formula "10") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "0,0,2,1"))
                                          (rule "eqSymm" (formula "10"))
                                          (rule "applyEq" (formula "10") (term "1") (ifseqformula "11"))
                                          (rule "inEqSimp_subsumption6" (formula "10") (term "0,0") (ifseqformula "7"))
                                          (rule "greater_literals" (formula "10") (term "0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "times_zero_1" (formula "10") (term "1,0,0,0"))
                                          (rule "leq_literals" (formula "10") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "polyDiv_pullOut" (formula "10") (term "0") (inst "polyDivCoeff=l_1"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,2,0"))
                                          (rule "equal_literals" (formula "10") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "polySimp_homoEq" (formula "10"))
                                          (rule "polySimp_pullOutFactor0" (formula "10") (term "0,0,0,1,0"))
                                          (rule "add_literals" (formula "10") (term "1,0,0,0,1,0"))
                                          (rule "times_zero_1" (formula "10") (term "0,0,0,1,0"))
                                          (rule "div_literals" (formula "10") (term "0,0,1,0"))
                                          (rule "add_zero_left" (formula "10") (term "0,1,0"))
                                          (rule "polySimp_pullOutFactor1" (formula "10") (term "0"))
                                          (rule "add_literals" (formula "10") (term "1,0"))
                                          (rule "times_zero_1" (formula "10") (term "0"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "true_left" (formula "10"))
                                          (rule "nnf_notOr" (formula "30") (term "1,0,0,1,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "30") (term "0,1,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "30") (term "0,1,0,0,0,1,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,1,0,0,1,1,0"))
                                          (rule "add_literals" (formula "30") (term "0,0,0,0,1,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "30") (term "0,0,0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "0,1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "30") (term "1,0,1,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "30") (term "1,0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "30") (term "1,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "30") (term "1,0,0,1,1,0,0,1,1,0"))
                                          (rule "add_literals" (formula "30") (term "0,0,1,1,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "30") (term "1,1,1,0,0,1,1,0"))
                                          (rule "nnf_notAnd" (formula "30") (term "0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "17") (term "0"))
                                          (rule "nnf_notAnd" (formula "30") (term "0,0,0,0,1,1,0"))
                                          (rule "nnf_notOr" (formula "30") (term "1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "30") (term "0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "30") (term "0,1,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,1,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "30") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "30") (term "0,0,0,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "30") (term "1,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "30") (term "1,0,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "30") (term "1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "30") (term "1,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "30") (term "1,1,1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "30") (term "0,1,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "30") (term "1,1,1,1,0,0,0,1,1,0"))
                                          (rule "nnf_notOr" (formula "30") (term "0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "30") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "30") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "30") (term "0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "30") (term "0,1,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "30") (term "0,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "30") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "30") (term "1,0,0,0,0,0,0,1,1,0"))
                                          (rule "nnf_notOr" (formula "30") (term "1,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "30") (term "0,1,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "30") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "30") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,1,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "30") (term "1,0,1,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "30") (term "1,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,1,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "30") (term "1,1,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "30") (term "1,1,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,1,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "30") (term "0,1,1,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "30") (term "1,1,1,1,0,0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "30") (term "0,0"))
                                          (rule "methodBodyExpand" (formula "46") (term "1") (newnames "heapBefore_maskNull_0,savedHeapBefore_maskNull"))
                                           (builtin "One Step Simplification" (formula "46"))
                                          (rule "commute_or" (formula "12") (term "0,0,1"))
                                          (rule "commute_or" (formula "13") (term "0,0,1,1"))
                                          (rule "commute_or" (formula "13") (term "0,0,0,1"))
                                          (rule "commute_or" (formula "18") (term "0,0"))
                                          (rule "div_axiom" (formula "20") (term "1") (inst "quotient=quotient_0"))
                                          (rule "qeq_literals" (formula "20") (term "0,1,1"))
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "equal_literals" (formula "20") (term "0"))
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "mul_literals" (formula "20") (term "1,1,1"))
                                          (rule "andLeft" (formula "20"))
                                          (rule "andLeft" (formula "20"))
                                          (rule "polySimp_addComm1" (formula "22") (term "1"))
                                          (rule "add_literals" (formula "22") (term "0,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "21"))
                                          (rule "inEqSimp_homoInEq1" (formula "22"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "22") (term "0"))
                                          (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "20"))
                                          (rule "inEqSimp_homoInEq1" (formula "4"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0"))
                                          (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "20"))
                                          (rule "applyEqRigid" (formula "30") (term "0") (ifseqformula "20"))
                                          (rule "inEqSimp_homoInEq1" (formula "30"))
                                          (rule "polySimp_addComm1" (formula "30") (term "0"))
                                          (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "20"))
                                          (rule "applyEqRigid" (formula "33") (term "1,1,0,0") (ifseqformula "20"))
                                          (rule "applyEq" (formula "18") (term "1,0,0,0,1,0") (ifseqformula "20"))
                                          (rule "applyEq" (formula "18") (term "1,1,0,0") (ifseqformula "20"))
                                          (rule "applyEq" (formula "32") (term "1,1,0,0") (ifseqformula "20"))
                                          (rule "applyEqRigid" (formula "23") (term "1") (ifseqformula "20"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "22"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1"))
                                          (rule "polySimp_rightDist" (formula "22") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                                          (rule "mul_literals" (formula "22") (term "0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                          (rule "polySimp_rightDist" (formula "4") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                          (rule "mul_literals" (formula "4") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "30"))
                                          (rule "polySimp_mulComm0" (formula "30") (term "1"))
                                          (rule "polySimp_rightDist" (formula "30") (term "1"))
                                          (rule "mul_literals" (formula "30") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "30") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "30") (term "1,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "47") (ifseqformula "22"))
                                          (rule "polySimp_rightDist" (formula "47") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0"))
                                          (rule "mul_literals" (formula "47") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "47") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "47") (term "0,0"))
                                          (rule "add_literals" (formula "47") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "47") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "47"))
                                          (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                          (rule "elimGcdLeq_antec" (formula "47") (inst "elimGcdRightDiv=quotient_0") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                          (rule "mul_literals" (formula "47") (term "0,1,0,0,0,0,1,0"))
                                          (rule "neg_literal" (formula "47") (term "0,0,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "47") (term "1,0,1,0"))
                                          (rule "leq_literals" (formula "47") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "47"))
                                          (rule "polySimp_pullOutFactor0b" (formula "47") (term "0,0"))
                                          (rule "add_literals" (formula "47") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "47") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "47") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "47") (term "0,0"))
                                          (rule "add_literals" (formula "47") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "47") (term "1,0,0"))
                                          (rule "add_literals" (formula "47") (term "0,0"))
                                          (rule "qeq_literals" (formula "47") (term "0"))
                                           (builtin "One Step Simplification" (formula "47"))
                                          (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "16"))
                                          (rule "polySimp_mulAssoc" (formula "21") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "21") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "21") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "21") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                          (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                          (rule "elimGcdLeq_antec" (formula "21") (inst "elimGcdRightDiv=Z(2(1(9(0(7(8(6(3(5(#))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0,0,1,0"))
                                          (rule "neg_literal" (formula "21") (term "0,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "21") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "21"))
                                          (rule "mul_literals" (formula "21") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_addLiterals" (formula "21") (term "0,0,0,0"))
                                          (rule "add_zero_right" (formula "21") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0"))
                                          (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                          (rule "add_literals" (formula "21") (term "0,0"))
                                          (rule "qeq_literals" (formula "21") (term "0"))
                                           (builtin "One Step Simplification" (formula "21"))
                                          (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "23"))
                                          (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                          (rule "mul_literals" (formula "28") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "28") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                          (rule "add_literals" (formula "28") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "28") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                          (rule "polySimp_elimOne" (formula "28") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "4"))
                                          (rule "mul_literals" (formula "3") (term "0,0"))
                                          (rule "add_zero_left" (formula "3") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                          (rule "mul_literals" (formula "3") (term "1"))
                                          (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "24"))
                                          (rule "mul_literals" (formula "16") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                          (rule "add_literals" (formula "16") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                          (rule "mul_literals" (formula "16") (term "1"))
                                          (rule "elimGcdGeq_antec" (formula "16") (inst "elimGcdRightDiv=Z(4(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0"))
                                          (rule "leq_literals" (formula "16") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "16"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "16") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "16") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                                          (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                          (rule "add_literals" (formula "16") (term "0,0"))
                                          (rule "leq_literals" (formula "16") (term "0"))
                                           (builtin "One Step Simplification" (formula "16"))
                                          (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "16"))
                                          (rule "leq_literals" (formula "3") (term "0"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "33"))
                                          (rule "times_zero_1" (formula "32") (term "0,0"))
                                          (rule "add_zero_left" (formula "32") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "32"))
                                          (rule "mul_literals" (formula "32") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "32") (ifseqformula "15"))
                                          (rule "leq_literals" (formula "32") (term "0"))
                                           (builtin "One Step Simplification" (formula "32"))
                                          (rule "true_left" (formula "32"))
                                          (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "24"))
                                          (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
                                          (rule "mul_literals" (formula "9") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "9") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                          (rule "add_literals" (formula "9") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "9") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                          (rule "elimGcdLeq_antec" (formula "9") (inst "elimGcdRightDiv=quotient_0") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,1,0"))
                                          (rule "neg_literal" (formula "9") (term "0,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "9") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "9"))
                                          (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                                          (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "9") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                                          (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                          (rule "add_literals" (formula "9") (term "0,0"))
                                          (rule "qeq_literals" (formula "9") (term "0"))
                                           (builtin "One Step Simplification" (formula "9"))
                                          (rule "inEqSimp_exactShadow3" (formula "53") (ifseqformula "51"))
                                          (rule "times_zero_1" (formula "53") (term "0,0"))
                                          (rule "add_zero_left" (formula "53") (term "0"))
                                          (rule "inEqSimp_subsumption1" (formula "53") (ifseqformula "16"))
                                          (rule "leq_literals" (formula "53") (term "0"))
                                           (builtin "One Step Simplification" (formula "53"))
                                          (rule "true_left" (formula "53"))
                                          (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "9"))
                                          (rule "times_zero_1" (formula "7") (term "0,0"))
                                          (rule "add_zero_left" (formula "7") (term "0"))
                                          (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "17"))
                                          (rule "leq_literals" (formula "7") (term "0"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "true_left" (formula "7"))
                                          (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "30"))
                                          (rule "times_zero_1" (formula "28") (term "0,0"))
                                          (rule "add_zero_left" (formula "28") (term "0"))
                                          (rule "inEqSimp_subsumption6" (formula "28") (ifseqformula "16"))
                                          (rule "mul_literals" (formula "28") (term "1,1,0"))
                                          (rule "greater_literals" (formula "28") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "28"))
                                          (rule "leq_literals" (formula "28") (term "0"))
                                           (builtin "One Step Simplification" (formula "28"))
                                          (rule "true_left" (formula "28"))
                                          (rule "commute_or_2" (formula "36") (term "0,1,1,0"))
                                          (rule "commute_or" (formula "19") (term "0,0"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "5") (term "0") (ifseqformula "39"))
                                          (rule "replace_known_left" (formula "5") (term "0") (ifseqformula "6"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "true_left" (formula "5"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "6") (term "1,0") (ifseqformula "39"))
                                          (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "56"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "36") (term "0") (ifseqformula "40"))
                                          (rule "replace_known_left" (formula "36") (term "0") (ifseqformula "37"))
                                           (builtin "One Step Simplification" (formula "36"))
                                          (rule "true_left" (formula "36"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "40"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "cnf_rightDist" (formula "15") (term "0,1"))
                                          (rule "commute_and" (formula "39") (term "1,0,0,1,1,0"))
                                          (rule "shift_paren_or" (formula "22") (term "0,1,0"))
                                          (rule "cnf_rightDist" (formula "16") (term "0,1,1"))
                                          (rule "cnf_rightDist" (formula "16") (term "0,0,1"))
                                          (rule "returnUnfold" (formula "56") (term "1") (inst "#v0=o_2"))
                                          (rule "variableDeclarationAssign" (formula "56") (term "1"))
                                          (rule "variableDeclaration" (formula "56") (term "1") (newnames "o_2"))
                                          (rule "commute_and" (formula "39") (term "0,0,0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "15") (term "0,0,1"))
                                          (rule "shift_paren_or" (formula "15") (term "1,0,1"))
                                          (rule "commute_or_2" (formula "22") (term "0,0,1,0"))
                                          (rule "inEqSimp_or_weaken2" (formula "22") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "22") (term "1,0,1,0,1,0"))
                                          (rule "add_literals" (formula "22") (term "0,1,0,1,0,1,0"))
                                          (rule "add_zero_left" (formula "22") (term "1,0,1,0,1,0"))
                                           (builtin "One Step Simplification" (formula "22"))
                                          (rule "commute_or_2" (formula "16") (term "0,0,1,1"))
                                          (rule "commute_or" (formula "38") (term "0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "16") (term "0,0,0,1"))
                                          (rule "commute_or" (formula "15") (term "0,0,0,1"))
                                          (rule "commute_or" (formula "22") (term "0,0,1,0"))
                                          (rule "shift_paren_or" (formula "16") (term "1,0,1,1"))
                                          (rule "shift_paren_or" (formula "16") (term "1,0,0,1"))
                                          (rule "commute_or" (formula "16") (term "0,0,0,1,1"))
                                          (rule "commute_or" (formula "16") (term "0,0,0,0,1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "8") (term "0") (ifseqformula "41"))
                                          (rule "replace_known_left" (formula "8") (term "0") (ifseqformula "9"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "true_left" (formula "8"))
                                          (rule "remove_parentheses_right" (formula "56") (term "1"))
                                          (rule "cnf_rightDist" (formula "39") (term "0,0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "39") (term "0,0,0,0,0,1,1,0"))
                                          (rule "condition" (formula "56") (term "1"))
                                          (rule "cnf_rightDist" (formula "39") (term "1,0,0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "39") (term "0,1,0,0,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "39") (term "0,0,0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "39") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "all_pull_out3" (formula "38") (term "1,0"))
                                          (rule "shift_paren_or" (formula "38") (term "0,1,0"))
                                          (rule "shift_paren_or" (formula "38") (term "0,0,1,0"))
                                          (rule "commute_or_2" (formula "38") (term "0,0,0,1,0"))
                                          (rule "all_pull_out3" (formula "22") (term "0"))
                                          (rule "shift_paren_or" (formula "22") (term "0,0"))
                                          (rule "shift_paren_or" (formula "22") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "22") (term "0,0,0,0"))
                                          (rule "commute_or" (formula "22") (term "0,0,0,0,0"))
                                          (rule "shift_paren_and" (formula "39") (term "0,0,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "39") (term "0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "39") (term "0,0,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "39") (term "1,0,0,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "39"))
                                          (rule "cnf_rightDist" (formula "39") (term "0,0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "39") (term "1,0,0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "39") (term "0,1,0,0,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "39") (term "0,1,0,0,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "39"))
                                          (rule "cnf_rightDist" (formula "39") (term "0,0,0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "39") (term "1,0,0,0,0,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "39"))
                                          (rule "all_pull_out3" (formula "38") (term "0"))
                                          (rule "shift_paren_or" (formula "38") (term "0,0"))
                                          (rule "shift_paren_or" (formula "38") (term "0,0,0"))
                                          (rule "shift_paren_or" (formula "38") (term "0,0,0,0"))
                                          (rule "commute_or_2" (formula "38") (term "0,0,0,0,0"))
                                          (rule "commute_or" (formula "38") (term "0,0,0,0,0,0"))
                                          (rule "ifElseUnfold" (formula "56") (term "1") (inst "#boolv=x"))
                                          (rule "variableDeclaration" (formula "56") (term "1") (newnames "x"))
                                          (rule "equality_comparison_simple" (formula "56") (term "1"))
                                           (builtin "One Step Simplification" (formula "56"))
                                          (rule "replace_known_right" (formula "56") (term "0,0,1,0") (ifseqformula "60"))
                                           (builtin "One Step Simplification" (formula "56"))
                                          (rule "cnf_rightDist" (formula "39") (term "0,0,1,0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "39") (term "0,0,0,1,0,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "39") (term "0,0,0,0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "39") (term "1,0,0,0,0,0,0,1,1,0"))
                                          (rule "shift_paren_or" (formula "39") (term "0,0,0,0,0,0,0,1,1,0"))
                                          (rule "shift_paren_and" (formula "39") (term "0,0,0,1,1,0"))
                                          (rule "shift_paren_and" (formula "39") (term "0,0,0,0,1,1,0"))
                                          (rule "shift_paren_and" (formula "39") (term "0,0,0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "39") (term "0,1,1,0"))
                                          (rule "commute_or" (formula "39") (term "0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "39") (term "0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "39") (term "1,0,0,1,1,0"))
                                          (rule "commute_or" (formula "39") (term "0,1,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "39") (term "0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "39") (term "1,0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "39") (term "0,1,0,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "39") (term "0,0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "39") (term "1,0,0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "39") (term "0,1,0,0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "39") (term "0,0,1,0,0,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "39") (term "0,0,0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "39") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "39") (term "0,1,0,0,0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "39") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "39") (term "0,0,0,0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "39") (term "1,0,0,0,0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "39") (term "0,1,0,0,0,0,0,0,1,1,0"))
                                          (rule "allLeft" (formula "21") (inst "t=i_1_0"))
                                          (rule "replace_known_left" (formula "21") (term "0,0,0,0") (ifseqformula "38"))
                                           (builtin "One Step Simplification" (formula "21"))
                                          (rule "inEqSimp_contradInEq0" (formula "21") (term "1") (ifseqformula "37"))
                                          (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "21") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "21") (term "0,0,1"))
                                          (rule "polySimp_addComm0" (formula "21") (term "0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1"))
                                          (rule "add_literals" (formula "21") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "21") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "21") (term "0,0,1"))
                                          (rule "leq_literals" (formula "21") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "21"))
                                          (rule "inEqSimp_contradInEq1" (formula "21") (term "1") (ifseqformula "36"))
                                          (rule "qeq_literals" (formula "21") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "21"))
                                          (rule "allLeft" (formula "22") (inst "t=j_0"))
                                          (rule "replace_known_left" (formula "22") (term "0,0,0,0") (ifseqformula "6"))
                                           (builtin "One Step Simplification" (formula "22"))
                                          (rule "inEqSimp_contradInEq0" (formula "22") (term "1") (ifseqformula "5"))
                                          (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "22") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "22") (term "0,0,1"))
                                          (rule "polySimp_addComm0" (formula "22") (term "0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1"))
                                          (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "22") (term "0,0,1"))
                                          (rule "leq_literals" (formula "22") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "22"))
                                          (rule "inEqSimp_contradInEq1" (formula "22") (term "1") (ifseqformula "4"))
                                          (rule "qeq_literals" (formula "22") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "22"))
                                          (rule "commute_or" (formula "41") (term "0,0,1,0,0,0,0,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "41") (term "0,0,0,0,0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "41") (term "1,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "ifElseSplit" (formula "58"))
                                          (branch "if x true"
                                              (builtin "One Step Simplification" (formula "59"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                          (branch "if x false"
                                              (builtin "One Step Simplification" (formula "1"))
                                              (builtin "One Step Simplification" (formula "59"))
                                             (rule "true_left" (formula "1"))
                                             (rule "assignment" (formula "58") (term "1"))
                                              (builtin "One Step Simplification" (formula "58"))
                                             (rule "blockEmpty" (formula "58") (term "1"))
                                             (rule "methodCallReturn" (formula "58") (term "1"))
                                             (rule "assignment" (formula "58") (term "1"))
                                              (builtin "One Step Simplification" (formula "58"))
                                             (rule "methodCallEmpty" (formula "58") (term "1"))
                                             (rule "emptyModality" (formula "58") (term "1"))
                                              (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "62")) (ifInst ""  (formula "46")) (ifInst ""  (formula "62")))
                                             (rule "closeTrue" (formula "58"))
                                          )
                                       )
                                       (branch "Case 3"
                                          (rule "allLeftHide" (formula "2") (inst "t=div(i_0, Z(2(#)))") (userinteraction))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "true_left" (formula "4"))
                                          (rule "andLeft" (formula "3"))
                                          (rule "andLeft" (formula "3"))
                                          (rule "inEqSimp_gtToGeq" (formula "27") (term "1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "27") (term "0,1,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "20"))
                                          (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "11") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_gtToGeq" (formula "10") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "17"))
                                          (rule "mul_literals" (formula "17") (term "1,0,0"))
                                          (rule "add_literals" (formula "17") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "40"))
                                          (rule "polySimp_mulComm0" (formula "40") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "40") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,1,1"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,1,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulAssoc" (formula "28") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "28") (term "0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulAssoc" (formula "28") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "0,1,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "25"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "25") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_gtToGeq" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "28") (term "0,1,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "8"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "8") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "28") (term "0,1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "4"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0"))
                                          (rule "inEqSimp_commuteGeq" (formula "2") (term "1,0"))
                                          (rule "applyEq" (formula "4") (term "0,0,1,0") (ifseqformula "23"))
                                          (rule "applyEq" (formula "2") (term "0,0,0,1,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "1") (term "0,0,1,0") (ifseqformula "5"))
                                          (rule "jmod_axiom" (formula "39") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "1,0"))
                                          (rule "jmod_axiom" (formula "9") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
                                          (rule "Query_axiom_for_maskNull_java_lang_Object__in_java_util_VerifiedIdentityHashMap" (formula "5") (term "1") (inst "maskNull_sk=maskNull_sk_0") (inst "#p0=o_1") (inst "#res=o"))
                                          (rule "eqSymm" (formula "5") (term "1,0,1"))
                                          (rule "polySimp_sepNegMonomial" (formula "40"))
                                          (rule "polySimp_mulLiterals" (formula "40") (term "0"))
                                          (rule "polySimp_sepNegMonomial" (formula "10"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                          (rule "Query_axiom_for_maskNull_java_lang_Object__in_java_util_VerifiedIdentityHashMap" (formula "2") (term "0,0,0,1,0") (inst "maskNull_sk=maskNull_sk_1") (inst "#p0=o_1") (inst "#res=o"))
                                          (rule "eqSymm" (formula "2") (term "1,0,1"))
                                          (rule "Query_axiom_for_maskNull_java_lang_Object__in_java_util_VerifiedIdentityHashMap" (formula "1") (term "0,0,1,0") (inst "maskNull_sk=maskNull_sk_2") (inst "#p0=o_1") (inst "#res=o"))
                                          (rule "eqSymm" (formula "1") (term "1,0,1"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "30") (term "1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "30") (term "0,1,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "23"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                          (rule "polySimp_elimOne" (formula "23") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "0,0"))
                                          (rule "polySimp_elimOne" (formula "14") (term "0,0"))
                                          (rule "applyEq" (formula "25") (term "0") (ifseqformula "26"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "13") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "0,0"))
                                          (rule "polySimp_elimOne" (formula "13") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "19") (term "0,1,0,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "20"))
                                          (rule "mul_literals" (formula "20") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "29") (term "0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "42"))
                                          (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                          (rule "polySimp_elimOne" (formula "42") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,1,1"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,1,1"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,1,1"))
                                          (rule "mul_literals" (formula "14") (term "0,1,0,0,0,1,1"))
                                          (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0,1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "30") (term "0,1,1,0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "30") (term "1,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "30") (term "1,0,1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "30") (term "0,1,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "27"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                          (rule "polySimp_elimOne" (formula "27") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "4") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "0,0,0"))
                                          (rule "polySimp_elimOne" (formula "4") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "29") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "30") (term "1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "30") (term "0,1,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "30") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,1"))
                                          (rule "mul_literals" (formula "13") (term "0,1,0,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,0,1"))
                                          (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0,0,1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                          (rule "polySimp_elimOne" (formula "11") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "30") (term "0,1,0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "30") (term "1,0,1,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "30") (term "1,0,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "30") (term "0,1,0,1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,1,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "30") (term "1,1,0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                          (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                          (rule "polySimp_elimOne" (formula "6") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "16"))
                                          (rule "leq_literals" (formula "24") (term "0"))
                                           (builtin "One Step Simplification" (formula "24"))
                                          (rule "true_left" (formula "24"))
                                          (rule "polyDiv_pullOut" (formula "4") (term "1,1,0,0") (inst "polyDivCoeff=jdiv(i_0, Z(2(#)))"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,2,1,1,0,0"))
                                          (rule "equal_literals" (formula "4") (term "0,1,1,0,0"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "polySimp_addComm0" (formula "4") (term "1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "4") (term "1,0,0"))
                                          (rule "elimGcdLeq" (formula "29") (term "0,1,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                                          (rule "sub_literals" (formula "29") (term "0,0,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "29") (term "0,1,0,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "29") (term "0,0,0,0,0,1,0,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "29") (term "1,1,0,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "29") (term "1,0,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "29") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "29") (term "1,1,0,1,0,0,1,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "29") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "29") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "29") (term "0,1,0,0,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "29") (term "0,0,1,0,0,1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "29") (term "0,0,0,1,0,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "29") (term "0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "29") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_addComm1" (formula "29") (term "0,0,1,0,0,1,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "29") (term "0,0,0,1,0,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "29") (term "1,1,0,1,0,0,1,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "29") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "29") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                          (rule "qeq_literals" (formula "29") (term "1,0,0,1,0,0,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "29"))
                                          (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_addComm1" (formula "29") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "29") (term "0,0,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "29") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "29") (term "0,0,0,1,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "29") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "29") (term "0,0,0,1,0,0,0,1,1,0"))
                                          (rule "leq_literals" (formula "29") (term "0,0,1,0,0,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "29"))
                                          (rule "elimGcdGeq" (formula "14") (term "1,0,0,1,1") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=m") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,1,0,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0,1,0,0,1,1"))
                                          (rule "add_zero_right" (formula "14") (term "0,0,0,1,0,1,0,0,1,1"))
                                          (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0,0,1,0,0,1,1"))
                                          (rule "sub_literals" (formula "14") (term "0,0,0,0,0,0,0,1,0,0,1,1"))
                                          (rule "times_zero_1" (formula "14") (term "0,0,0,1,0,1,0,0,1,1"))
                                          (rule "polySimp_addLiterals" (formula "14") (term "0,0,0,0,0,1,0,0,1,1"))
                                          (rule "add_zero_left" (formula "14") (term "0,0,1,0,1,0,0,1,1"))
                                          (rule "add_zero_right" (formula "14") (term "0,0,0,0,0,1,0,0,1,1"))
                                          (rule "polySimp_pullOutFactor0" (formula "14") (term "0,1,0,1,0,0,1,1"))
                                          (rule "add_literals" (formula "14") (term "1,0,1,0,1,0,0,1,1"))
                                          (rule "times_zero_1" (formula "14") (term "0,1,0,1,0,0,1,1"))
                                          (rule "leq_literals" (formula "14") (term "1,0,1,0,0,1,1"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0,1,0,0,1,1"))
                                          (rule "add_literals" (formula "14") (term "1,1,0,0,1,0,0,1,1"))
                                          (rule "times_zero_1" (formula "14") (term "1,0,0,1,0,0,1,1"))
                                          (rule "add_zero_right" (formula "14") (term "0,0,1,0,0,1,1"))
                                          (rule "qeq_literals" (formula "14") (term "0,1,0,0,1,1"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "elimGcdLeq" (formula "29") (term "1,0,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                          (rule "sub_literals" (formula "29") (term "0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "29") (term "0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "29") (term "0,0,0,0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "29") (term "1,1,0,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "29") (term "1,0,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "29") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "29") (term "1,1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "29") (term "1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "29") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "29") (term "0,1,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "29") (term "0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "29") (term "0,0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "29") (term "0,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "29") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_addComm1" (formula "29") (term "0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "29") (term "0,0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "29") (term "1,1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "29") (term "1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "29") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "qeq_literals" (formula "29") (term "1,0,1,0,0,0,0,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "29"))
                                          (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_addComm1" (formula "29") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "29") (term "0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "29") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "29") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "29") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "29") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "leq_literals" (formula "29") (term "0,1,0,0,0,0,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "29"))
                                          (rule "polyDiv_pullOut" (formula "4") (term "1,1,0,0") (inst "polyDivCoeff=mul(jdiv(i_0, Z(2(#))), Z(neglit(1(#))))"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,2,1,1,0,0"))
                                          (rule "equal_literals" (formula "4") (term "0,1,1,0,0"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,1,1,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0,1,1,0,0"))
                                          (rule "add_literals" (formula "4") (term "1,1,0,0,1,1,0,0"))
                                          (rule "times_zero_1" (formula "4") (term "1,0,0,1,1,0,0"))
                                          (rule "add_zero_right" (formula "4") (term "0,0,1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "4") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "4") (term "1,0,0"))
                                          (rule "add_literals" (formula "4") (term "1,1,1,0,0"))
                                          (rule "times_zero_1" (formula "4") (term "1,1,0,0"))
                                          (rule "add_zero_right" (formula "4") (term "1,0,0"))
                                          (rule "polyDiv_pullOut" (formula "4") (term "1,1,0,0") (inst "polyDivCoeff=jdiv(i_0, Z(2(#)))"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,2,1,1,0,0"))
                                          (rule "equal_literals" (formula "4") (term "0,1,1,0,0"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "polySimp_addComm0" (formula "4") (term "1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "4") (term "1,0,0"))
                                          (rule "elimGcdGeq" (formula "29") (term "0,1,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "29") (term "0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "29") (term "0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "29") (term "0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "sub_literals" (formula "29") (term "0,0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "29") (term "1,0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "29") (term "0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "29") (term "0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "29") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "29") (term "1,0,1,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "29") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "leq_literals" (formula "29") (term "1,0,0,1,0,0,0,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "29"))
                                          (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "29") (term "1,1,0,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "29") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "29") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "qeq_literals" (formula "29") (term "0,0,1,0,0,0,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "29"))
                                          (rule "elimGcdGeq" (formula "29") (term "1,1,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                          (rule "add_zero_right" (formula "29") (term "0,0,0,0,0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1,0,1,1,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "29") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                                          (rule "sub_literals" (formula "29") (term "0,0,0,0,0,0,1,1,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "29") (term "1,0,0,0,0,0,1,1,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "29") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "29") (term "0,0,0,0,0,1,1,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "29") (term "0,0,1,0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,0,0,1,1,0,0,1,1,0"))
                                          (rule "add_literals" (formula "29") (term "1,1,0,0,0,1,1,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "29") (term "1,0,0,0,1,1,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "29") (term "0,0,0,1,1,0,0,1,1,0"))
                                          (rule "qeq_literals" (formula "29") (term "0,0,1,1,0,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "29"))
                                          (rule "polySimp_pullOutFactor0" (formula "29") (term "0,0,1,1,0,0,1,1,0"))
                                          (rule "add_literals" (formula "29") (term "1,0,0,1,1,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "29") (term "0,0,1,1,0,0,1,1,0"))
                                          (rule "leq_literals" (formula "29") (term "0,1,1,0,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "29"))
                                          (rule "polyDiv_pullOut" (formula "4") (term "1,1,0,0") (inst "polyDivCoeff=mul(jdiv(i_0, Z(2(#))), Z(neglit(1(#))))"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,2,1,1,0,0"))
                                          (rule "equal_literals" (formula "4") (term "0,1,1,0,0"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,1,1,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0,1,1,0,0"))
                                          (rule "add_literals" (formula "4") (term "1,1,0,0,1,1,0,0"))
                                          (rule "times_zero_1" (formula "4") (term "1,0,0,1,1,0,0"))
                                          (rule "add_zero_right" (formula "4") (term "0,0,1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "4") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "4") (term "1,0,0"))
                                          (rule "add_literals" (formula "4") (term "1,1,1,0,0"))
                                          (rule "times_zero_1" (formula "4") (term "1,1,0,0"))
                                          (rule "add_zero_right" (formula "4") (term "1,0,0"))
                                          (rule "polyDiv_pullOut" (formula "4") (term "1,1,0,0") (inst "polyDivCoeff=jdiv(i_0, Z(2(#)))"))
                                          (rule "equal_literals" (formula "4") (term "0,1,1,0,0"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,1,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "4") (term "1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "4") (term "1,0,0"))
                                          (rule "polyDiv_pullOut" (formula "4") (term "1,1,0,0") (inst "polyDivCoeff=mul(jdiv(i_0, Z(2(#))), Z(neglit(1(#))))"))
                                          (rule "equal_literals" (formula "4") (term "0,1,1,0,0"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,1,1,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0,1,1,0,0"))
                                          (rule "add_literals" (formula "4") (term "1,1,0,0,1,1,0,0"))
                                          (rule "times_zero_1" (formula "4") (term "1,0,0,1,1,0,0"))
                                          (rule "add_zero_right" (formula "4") (term "0,0,1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "4") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "4") (term "1,0,0"))
                                          (rule "add_literals" (formula "4") (term "1,1,1,0,0"))
                                          (rule "times_zero_1" (formula "4") (term "1,1,0,0"))
                                          (rule "add_zero_right" (formula "4") (term "1,0,0"))
                                          (rule "polyDiv_pullOut" (formula "4") (term "1,1,0,0") (inst "polyDivCoeff=jdiv(i_0, Z(2(#)))"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,2,1,1,0,0"))
                                          (rule "equal_literals" (formula "4") (term "0,1,1,0,0"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "polySimp_addComm0" (formula "4") (term "1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "4") (term "1,0,0"))
                                          (rule "polyDiv_pullOut" (formula "4") (term "1,1,0,0") (inst "polyDivCoeff=mul(jdiv(i_0, Z(2(#))), Z(neglit(1(#))))"))
                                          (rule "equal_literals" (formula "4") (term "0,1,1,0,0"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,1,1,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0,1,1,0,0"))
                                          (rule "add_literals" (formula "4") (term "1,1,0,0,1,1,0,0"))
                                          (rule "times_zero_1" (formula "4") (term "1,0,0,1,1,0,0"))
                                          (rule "add_zero_right" (formula "4") (term "0,0,1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "4") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "4") (term "1,0,0"))
                                          (rule "add_literals" (formula "4") (term "1,1,1,0,0"))
                                          (rule "times_zero_1" (formula "4") (term "1,1,0,0"))
                                          (rule "add_zero_right" (formula "4") (term "1,0,0"))
                                          (rule "newSym_eq" (formula "40") (inst "l=l_0") (inst "newSymDef=mul(result_1, Z(0(#)))"))
                                          (rule "times_zero_1" (formula "40") (term "1,1"))
                                          (rule "add_zero_right" (formula "40") (term "1"))
                                          (rule "applyEq" (formula "41") (term "0,0") (ifseqformula "40"))
                                          (rule "eqSymm" (formula "41"))
                                          (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "41"))
                                          (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                                          (rule "applyEq" (formula "42") (term "1,1") (ifseqformula "41"))
                                          (rule "applyEq" (formula "40") (term "0,0") (ifseqformula "41"))
                                          (rule "applyEq" (formula "14") (term "1,1,0,0,0,1") (ifseqformula "41"))
                                          (rule "applyEq" (formula "43") (term "0") (ifseqformula "41"))
                                          (rule "applyEq" (formula "14") (term "0,0") (ifseqformula "41"))
                                          (rule "inEqSimp_homoInEq1" (formula "14") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                                          (rule "applyEq" (formula "13") (term "1,1,0,0,1") (ifseqformula "41"))
                                          (rule "applyEq" (formula "39") (term "1") (ifseqformula "41"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0"))
                                          (rule "mul_literals" (formula "13") (term "0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0"))
                                          (rule "mul_literals" (formula "14") (term "0,1,0"))
                                          (rule "polyDiv_pullOut" (formula "4") (term "1,1,0") (inst "polyDivCoeff=jdiv(i_0, Z(2(#)))"))
                                          (rule "equal_literals" (formula "4") (term "0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,1,1,0"))
                                          (rule "polySimp_addComm0" (formula "4") (term "1,1,0"))
                                          (rule "elimGcdGeq_antec" (formula "43") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                          (rule "add_zero_right" (formula "43") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "43") (term "1,0,1,0"))
                                          (rule "leq_literals" (formula "43") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "43"))
                                          (rule "times_zero_1" (formula "43") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "43") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "43") (term "0,0"))
                                          (rule "add_literals" (formula "43") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "43") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "43") (term "0,0"))
                                          (rule "leq_literals" (formula "43") (term "0"))
                                           (builtin "One Step Simplification" (formula "43"))
                                          (rule "elimGcdGeq" (formula "14") (term "1,0,0,0,1") (inst "elimGcdRightDiv=l_0") (inst "elimGcdLeftDiv=n") (inst "elimGcd=Z(2(#))"))
                                          (rule "mul_literals" (formula "14") (term "0,0,0,0,0,1,0,1,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0,1,0,0,0,1"))
                                          (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0,0,1,0,0,0,1"))
                                          (rule "sub_literals" (formula "14") (term "0,0,0,0,0,0,0,1,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,1,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,1,0,1,0,0,0,1"))
                                          (rule "add_literals" (formula "14") (term "1,1,0,1,0,1,0,0,0,1"))
                                          (rule "times_zero_1" (formula "14") (term "1,0,1,0,1,0,0,0,1"))
                                          (rule "add_zero_right" (formula "14") (term "0,1,0,1,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0,0,1,0,0,0,1"))
                                          (rule "add_literals" (formula "14") (term "1,1,0,0,0,1,0,0,0,1"))
                                          (rule "times_zero_1" (formula "14") (term "1,0,0,0,1,0,0,0,1"))
                                          (rule "add_zero_right" (formula "14") (term "0,0,0,1,0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "0,0,1,0,1,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor0" (formula "14") (term "0,1,0,1,0,0,0,1"))
                                          (rule "add_literals" (formula "14") (term "1,0,1,0,1,0,0,0,1"))
                                          (rule "times_zero_1" (formula "14") (term "0,1,0,1,0,0,0,1"))
                                          (rule "leq_literals" (formula "14") (term "1,0,1,0,0,0,1"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,1,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0,1,0,0,0,1"))
                                          (rule "add_literals" (formula "14") (term "1,1,0,0,1,0,0,0,1"))
                                          (rule "times_zero_1" (formula "14") (term "1,0,0,1,0,0,0,1"))
                                          (rule "add_zero_right" (formula "14") (term "0,0,1,0,0,0,1"))
                                          (rule "qeq_literals" (formula "14") (term "0,1,0,0,0,1"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "elimGcdGeq" (formula "13") (term "1,0,0,1") (inst "elimGcdRightDiv=l_0") (inst "elimGcdLeftDiv=n") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0,1,0,0,1"))
                                          (rule "mul_literals" (formula "13") (term "0,0,0,0,0,1,0,1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,1,0,0,1"))
                                          (rule "sub_literals" (formula "13") (term "0,0,0,0,0,0,0,1,0,0,1"))
                                          (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0,0,1,0,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,1,0,1,0,0,1"))
                                          (rule "add_literals" (formula "13") (term "1,1,0,1,0,1,0,0,1"))
                                          (rule "times_zero_1" (formula "13") (term "1,0,1,0,1,0,0,1"))
                                          (rule "add_zero_right" (formula "13") (term "0,1,0,1,0,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0,0,1,0,0,1"))
                                          (rule "add_literals" (formula "13") (term "1,1,0,0,0,1,0,0,1"))
                                          (rule "times_zero_1" (formula "13") (term "1,0,0,0,1,0,0,1"))
                                          (rule "add_zero_right" (formula "13") (term "0,0,0,1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "0,0,1,0,1,0,0,1"))
                                          (rule "polySimp_pullOutFactor0" (formula "13") (term "0,1,0,1,0,0,1"))
                                          (rule "add_literals" (formula "13") (term "1,0,1,0,1,0,0,1"))
                                          (rule "times_zero_1" (formula "13") (term "0,1,0,1,0,0,1"))
                                          (rule "leq_literals" (formula "13") (term "1,0,1,0,0,1"))
                                           (builtin "One Step Simplification" (formula "13"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0,1,0,0,1"))
                                          (rule "add_literals" (formula "13") (term "1,1,0,0,1,0,0,1"))
                                          (rule "times_zero_1" (formula "13") (term "1,0,0,1,0,0,1"))
                                          (rule "add_zero_right" (formula "13") (term "0,0,1,0,0,1"))
                                          (rule "qeq_literals" (formula "13") (term "0,1,0,0,1"))
                                           (builtin "One Step Simplification" (formula "13"))
                                          (rule "polyDiv_pullOut" (formula "4") (term "1,1,1,0") (inst "polyDivCoeff=mul(jdiv(i_0, Z(2(#))), Z(neglit(1(#))))"))
                                          (rule "equal_literals" (formula "4") (term "0,1,1,1,0"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,1,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,1,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0,1,1,1,0"))
                                          (rule "add_literals" (formula "4") (term "1,1,0,0,1,1,1,0"))
                                          (rule "times_zero_1" (formula "4") (term "1,0,0,1,1,1,0"))
                                          (rule "add_zero_right" (formula "4") (term "0,0,1,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "4") (term "1,1,0"))
                                          (rule "polySimp_addComm0" (formula "4") (term "0,1,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "4") (term "1,1,0"))
                                          (rule "add_literals" (formula "4") (term "1,1,1,1,0"))
                                          (rule "times_zero_1" (formula "4") (term "1,1,1,0"))
                                          (rule "add_zero_right" (formula "4") (term "1,1,0"))
                                          (rule "polyDiv_pullOut" (formula "4") (term "1,1,0") (inst "polyDivCoeff=jdiv(i_0, Z(2(#)))"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,2,1,1,0"))
                                          (rule "equal_literals" (formula "4") (term "0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "polySimp_addComm0" (formula "4") (term "1,1,0"))
                                          (rule "polyDiv_pullOut" (formula "4") (term "1,1,1,0") (inst "polyDivCoeff=mul(jdiv(i_0, Z(2(#))), Z(neglit(1(#))))"))
                                          (rule "equal_literals" (formula "4") (term "0,1,1,1,0"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,1,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,1,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0,1,1,1,0"))
                                          (rule "add_literals" (formula "4") (term "1,1,0,0,1,1,1,0"))
                                          (rule "times_zero_1" (formula "4") (term "1,0,0,1,1,1,0"))
                                          (rule "add_zero_right" (formula "4") (term "0,0,1,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "4") (term "1,1,0"))
                                          (rule "polySimp_addComm0" (formula "4") (term "0,1,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "4") (term "1,1,0"))
                                          (rule "add_literals" (formula "4") (term "1,1,1,1,0"))
                                          (rule "times_zero_1" (formula "4") (term "1,1,1,0"))
                                          (rule "add_zero_right" (formula "4") (term "1,1,0"))
                                          (rule "polyDiv_pullOut" (formula "4") (term "1,1,0") (inst "polyDivCoeff=jdiv(i_0, Z(2(#)))"))
                                          (rule "equal_literals" (formula "4") (term "0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,1,1,0"))
                                          (rule "polySimp_addComm0" (formula "4") (term "1,1,0"))
                                          (rule "polyDiv_pullOut" (formula "4") (term "1,1,1,0") (inst "polyDivCoeff=mul(jdiv(i_0, Z(2(#))), Z(neglit(1(#))))"))
                                          (rule "equal_literals" (formula "4") (term "0,1,1,1,0"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,1,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,1,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0,1,1,1,0"))
                                          (rule "add_literals" (formula "4") (term "1,1,0,0,1,1,1,0"))
                                          (rule "times_zero_1" (formula "4") (term "1,0,0,1,1,1,0"))
                                          (rule "add_zero_right" (formula "4") (term "0,0,1,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "4") (term "1,1,0"))
                                          (rule "polySimp_addComm0" (formula "4") (term "0,1,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "4") (term "1,1,0"))
                                          (rule "add_literals" (formula "4") (term "1,1,1,1,0"))
                                          (rule "times_zero_1" (formula "4") (term "1,1,1,0"))
                                          (rule "add_zero_right" (formula "4") (term "1,1,0"))
                                          (rule "newSym_eq" (formula "12") (inst "l=l_1") (inst "newSymDef=mul(i_0, Z(0(#)))"))
                                          (rule "times_zero_1" (formula "12") (term "1,1"))
                                          (rule "add_zero_right" (formula "12") (term "1"))
                                          (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "12"))
                                          (rule "eqSymm" (formula "13"))
                                          (rule "applyEqRigid" (formula "14") (term "0,0") (ifseqformula "13"))
                                          (rule "inEqSimp_homoInEq1" (formula "14") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                                          (rule "applyEq" (formula "10") (term "0") (ifseqformula "13"))
                                          (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "13"))
                                          (rule "applyEqRigid" (formula "11") (term "1,1") (ifseqformula "13"))
                                          (rule "applyEq" (formula "4") (term "0,0,0,2,0,0,1") (ifseqformula "13"))
                                          (rule "applyEq" (formula "15") (term "1,1,0,0,0,1,1") (ifseqformula "13"))
                                          (rule "applyEqRigid" (formula "4") (term "0,1,1,0,0") (ifseqformula "13"))
                                          (rule "inEqSimp_homoInEq1" (formula "4") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                          (rule "applyEqRigid" (formula "14") (term "1,1,0,0,0,1") (ifseqformula "13"))
                                          (rule "applyEq" (formula "9") (term "0,2,0") (ifseqformula "13"))
                                          (rule "applyEqRigid" (formula "4") (term "0,1,1,0") (ifseqformula "13"))
                                          (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "13"))
                                          (rule "inEqSimp_homoInEq0" (formula "15") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "15") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0"))
                                          (rule "mul_literals" (formula "14") (term "0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0"))
                                          (rule "mul_literals" (formula "15") (term "0,1,0"))
                                          (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "18"))
                                          (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                          (rule "mul_literals" (formula "24") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "24") (term "0"))
                                          (rule "add_literals" (formula "24") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                          (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                          (rule "polySimp_elimOne" (formula "24") (term "0"))
                                          (rule "elimGcdGeq_antec" (formula "10") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0"))
                                          (rule "add_zero_right" (formula "10") (term "0,0,0,1,0"))
                                          (rule "leq_literals" (formula "10") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "times_zero_1" (formula "10") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "10") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                                          (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "10") (term "0,0"))
                                          (rule "leq_literals" (formula "10") (term "0"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "polyDiv_pullOut" (formula "4") (term "0,0,2,0,0,1") (inst "polyDivCoeff=l_1"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,2,0,0,2,0,0,1"))
                                          (rule "equal_literals" (formula "4") (term "0,0,0,2,0,0,1"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "polySimp_pullOutFactor0" (formula "4") (term "0,0,0,0,2,0,0,1"))
                                          (rule "add_literals" (formula "4") (term "1,0,0,0,0,2,0,0,1"))
                                          (rule "times_zero_1" (formula "4") (term "0,0,0,0,2,0,0,1"))
                                          (rule "div_literals" (formula "4") (term "0,0,0,2,0,0,1"))
                                          (rule "add_zero_left" (formula "4") (term "0,0,2,0,0,1"))
                                          (rule "replace_known_left" (formula "4") (term "0,1") (ifseqformula "9"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "notLeft" (formula "4"))
                                          (rule "elimGcdLeq" (formula "14") (term "0,0,0,1,1") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_1)") (inst "elimGcdLeftDiv=m") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0,0,0,1,1"))
                                          (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0,0,0,0,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0,0,0,0,1,1"))
                                          (rule "mul_literals" (formula "14") (term "0,0,0,0,0,1,0,0,0,0,1,1"))
                                          (rule "sub_literals" (formula "14") (term "0,0,0,0,0,0,0,0,0,0,1,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,1,0,0,0,0,1,1"))
                                          (rule "add_literals" (formula "14") (term "1,1,0,1,0,0,0,0,1,1"))
                                          (rule "times_zero_1" (formula "14") (term "1,0,1,0,0,0,0,1,1"))
                                          (rule "add_zero_right" (formula "14") (term "0,1,0,0,0,0,1,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0,0,0,0,0,1,1"))
                                          (rule "add_literals" (formula "14") (term "1,1,0,0,0,0,0,0,1,1"))
                                          (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0,0,1,1"))
                                          (rule "add_zero_right" (formula "14") (term "0,0,0,0,0,0,1,1"))
                                          (rule "polySimp_rightDist" (formula "14") (term "0,0,1,0,0,0,0,1,1"))
                                          (rule "mul_literals" (formula "14") (term "0,0,0,1,0,0,0,0,1,1"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0,0,0,1,1"))
                                          (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0,0,0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0,1,0,0,0,0,1,1"))
                                          (rule "polySimp_addComm1" (formula "14") (term "0,0,1,0,0,0,0,1,1"))
                                          (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,0,0,1,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,1,0,0,0,0,1,1"))
                                          (rule "add_literals" (formula "14") (term "1,1,0,1,0,0,0,0,1,1"))
                                          (rule "times_zero_1" (formula "14") (term "1,0,1,0,0,0,0,1,1"))
                                          (rule "add_zero_right" (formula "14") (term "0,1,0,0,0,0,1,1"))
                                          (rule "qeq_literals" (formula "14") (term "1,0,0,0,0,1,1"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0,0,1,1"))
                                          (rule "add_literals" (formula "14") (term "0,0,0,0,0,0,0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0,1,1"))
                                          (rule "polySimp_addComm1" (formula "14") (term "0,0,0,0,0,0,1,1"))
                                          (rule "add_literals" (formula "14") (term "0,0,0,0,0,0,0,1,1"))
                                          (rule "add_zero_left" (formula "14") (term "0,0,0,0,0,0,1,1"))
                                          (rule "polySimp_pullOutFactor0" (formula "14") (term "0,0,0,0,0,1,1"))
                                          (rule "add_literals" (formula "14") (term "1,0,0,0,0,0,1,1"))
                                          (rule "times_zero_1" (formula "14") (term "0,0,0,0,0,1,1"))
                                          (rule "leq_literals" (formula "14") (term "0,0,0,0,1,1"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "elimGcdLeq" (formula "13") (term "0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_1)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                          (rule "sub_literals" (formula "13") (term "0,0,0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0,0"))
                                          (rule "mul_literals" (formula "13") (term "0,0,0,0,0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,1,0,0"))
                                          (rule "add_literals" (formula "13") (term "1,1,0,1,0,0"))
                                          (rule "times_zero_1" (formula "13") (term "1,0,1,0,0"))
                                          (rule "add_zero_right" (formula "13") (term "0,1,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "13") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "13") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "13") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "13") (term "0,0,1,0,0"))
                                          (rule "mul_literals" (formula "13") (term "0,0,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "13") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,1,0,0"))
                                          (rule "add_literals" (formula "13") (term "1,1,0,1,0,0"))
                                          (rule "times_zero_1" (formula "13") (term "1,0,1,0,0"))
                                          (rule "add_zero_right" (formula "13") (term "0,1,0,0"))
                                          (rule "qeq_literals" (formula "13") (term "1,0,0"))
                                           (builtin "One Step Simplification" (formula "13"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "13") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "13") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "13") (term "0,0,0"))
                                          (rule "add_literals" (formula "13") (term "1,0,0,0"))
                                          (rule "times_zero_1" (formula "13") (term "0,0,0"))
                                          (rule "leq_literals" (formula "13") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "13"))
                                          (rule "elimGcdLeq" (formula "13") (term "0,0,0,1") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_1)") (inst "elimGcdLeftDiv=n") (inst "elimGcd=Z(2(#))"))
                                          (rule "mul_literals" (formula "13") (term "0,0,0,0,0,1,0,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0,0,0,1"))
                                          (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0,0,0,0,0,1"))
                                          (rule "sub_literals" (formula "13") (term "0,0,0,0,0,0,0,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0,0,0,0,0,1"))
                                          (rule "add_literals" (formula "13") (term "1,1,0,0,0,0,0,0,1"))
                                          (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0,0,1"))
                                          (rule "add_zero_right" (formula "13") (term "0,0,0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,1,0,0,0,0,1"))
                                          (rule "add_literals" (formula "13") (term "1,1,0,1,0,0,0,0,1"))
                                          (rule "times_zero_1" (formula "13") (term "1,0,1,0,0,0,0,1"))
                                          (rule "add_zero_right" (formula "13") (term "0,1,0,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0,0,0,1"))
                                          (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "13") (term "0,0,1,0,0,0,0,1"))
                                          (rule "mul_literals" (formula "13") (term "0,0,0,1,0,0,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0,0,0,1"))
                                          (rule "add_literals" (formula "13") (term "0,0,0,0,0,0,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "0,1,0,0,0,0,1"))
                                          (rule "polySimp_addComm1" (formula "13") (term "0,0,1,0,0,0,0,1"))
                                          (rule "add_literals" (formula "13") (term "0,0,0,1,0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,1,0,0,0,0,1"))
                                          (rule "add_literals" (formula "13") (term "1,1,0,1,0,0,0,0,1"))
                                          (rule "times_zero_1" (formula "13") (term "1,0,1,0,0,0,0,1"))
                                          (rule "add_zero_right" (formula "13") (term "0,1,0,0,0,0,1"))
                                          (rule "qeq_literals" (formula "13") (term "1,0,0,0,0,1"))
                                           (builtin "One Step Simplification" (formula "13"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0,1"))
                                          (rule "polySimp_addComm1" (formula "13") (term "0,0,0,0,0,0,1"))
                                          (rule "add_literals" (formula "13") (term "0,0,0,0,0,0,0,1"))
                                          (rule "add_zero_left" (formula "13") (term "0,0,0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor0" (formula "13") (term "0,0,0,0,0,1"))
                                          (rule "add_literals" (formula "13") (term "1,0,0,0,0,0,1"))
                                          (rule "times_zero_1" (formula "13") (term "0,0,0,0,0,1"))
                                          (rule "leq_literals" (formula "13") (term "0,0,0,0,1"))
                                           (builtin "One Step Simplification" (formula "13"))
                                          (rule "elimGcdGeq" (formula "14") (term "0") (inst "elimGcdRightDiv=add(Z(1(#)), l_1)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0,0"))
                                          (rule "mul_literals" (formula "14") (term "0,0,0,0,0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0"))
                                          (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0,0,0"))
                                          (rule "sub_literals" (formula "14") (term "0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,1,0,0"))
                                          (rule "add_literals" (formula "14") (term "1,1,0,1,0,0"))
                                          (rule "times_zero_1" (formula "14") (term "1,0,1,0,0"))
                                          (rule "add_zero_right" (formula "14") (term "0,1,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "14") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "14") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "14") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "0,0,1,0,0"))
                                          (rule "mul_literals" (formula "14") (term "0,0,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "14") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,1,0,0"))
                                          (rule "add_literals" (formula "14") (term "1,1,0,1,0,0"))
                                          (rule "times_zero_1" (formula "14") (term "1,0,1,0,0"))
                                          (rule "add_zero_right" (formula "14") (term "0,1,0,0"))
                                          (rule "leq_literals" (formula "14") (term "1,0,0"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "14") (term "0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "14") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "14") (term "0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "14") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "14") (term "0,0,0"))
                                          (rule "add_literals" (formula "14") (term "1,0,0,0"))
                                          (rule "times_zero_1" (formula "14") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "14") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "polyDiv_pullOut" (formula "45") (term "0,0") (inst "polyDivCoeff=l_1"))
                                          (rule "equal_literals" (formula "45") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "45"))
                                          (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "45") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "45") (term "1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "45") (term "0,0,0,0"))
                                          (rule "div_literals" (formula "45") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "45") (term "0,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "45") (term "0"))
                                          (rule "polySimp_addComm1" (formula "45") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "45") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "45") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0"))
                                          (rule "mul_literals" (formula "45") (term "0,1,0"))
                                          (rule "polySimp_elimOne" (formula "45") (term "1,1,0"))
                                          (rule "polyDiv_pullOut" (formula "45") (term "1,1") (inst "polyDivCoeff=l_1"))
                                          (rule "equal_literals" (formula "45") (term "0,1,1"))
                                           (builtin "One Step Simplification" (formula "45"))
                                          (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,1,1"))
                                          (rule "polySimp_pullOutFactor0" (formula "45") (term "0,0,1,1"))
                                          (rule "add_literals" (formula "45") (term "1,0,0,1,1"))
                                          (rule "times_zero_1" (formula "45") (term "0,0,1,1"))
                                          (rule "div_literals" (formula "45") (term "0,1,1"))
                                          (rule "add_zero_left" (formula "45") (term "1,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "17"))
                                          (rule "polySimp_rightDist" (formula "43") (term "0,0"))
                                          (rule "mul_literals" (formula "43") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "43") (term "0"))
                                          (rule "add_literals" (formula "43") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "43"))
                                          (rule "polySimp_mulLiterals" (formula "43") (term "0"))
                                          (rule "elimGcdLeq_antec" (formula "43") (inst "elimGcdRightDiv=Z(1(1(9(0(7(8(6(3(5(#))))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,0,0,1,0"))
                                          (rule "neg_literal" (formula "43") (term "0,0,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "43") (term "1,0,1,0"))
                                          (rule "leq_literals" (formula "43") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "43"))
                                          (rule "mul_literals" (formula "43") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_addLiterals" (formula "43") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "43") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "43") (term "0,0"))
                                          (rule "add_literals" (formula "43") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "43") (term "1,0,0"))
                                          (rule "add_literals" (formula "43") (term "0,0"))
                                          (rule "qeq_literals" (formula "43") (term "0"))
                                           (builtin "One Step Simplification" (formula "43"))
                                          (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "17"))
                                          (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0"))
                                          (rule "mul_literals" (formula "10") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "10") (term "0"))
                                          (rule "add_literals" (formula "10") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                          (rule "elimGcdLeq_antec" (formula "10") (inst "elimGcdRightDiv=Z(1(1(9(0(7(8(6(3(5(#))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                          (rule "neg_literal" (formula "10") (term "0,0,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0"))
                                          (rule "leq_literals" (formula "10") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_addLiterals" (formula "10") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "10") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                                          (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                          (rule "add_literals" (formula "10") (term "0,0"))
                                          (rule "qeq_literals" (formula "10") (term "0"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "boxToDiamond" (formula "6") (term "1"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "notLeft" (formula "6"))
                                          (rule "boxToDiamond" (formula "3") (term "1"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "notLeft" (formula "3"))
                                          (rule "boxToDiamond" (formula "1") (term "1"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "nnf_imp2or" (formula "16") (term "1,0"))
                                          (rule "nnf_imp2or" (formula "17") (term "1,0,1,0"))
                                          (rule "nnf_imp2or" (formula "27") (term "1,0"))
                                          (rule "nnf_imp2or" (formula "28") (term "0"))
                                          (rule "commute_and" (formula "17") (term "0,0"))
                                          (rule "commute_and" (formula "16") (term "0,0"))
                                          (rule "commute_and" (formula "27") (term "0,0"))
                                          (rule "jdiv_axiom" (formula "19") (term "1,0"))
                                          (rule "eqSymm" (formula "19"))
                                          (rule "inEqSimp_subsumption1" (formula "19") (term "0,0") (ifseqformula "14"))
                                          (rule "leq_literals" (formula "19") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "eqSymm" (formula "19"))
                                          (rule "applyEq" (formula "3") (term "0") (ifseqformula "19"))
                                          (rule "applyEqRigid" (formula "16") (term "1,1,1,0,0") (ifseqformula "19"))
                                          (rule "applyEq" (formula "17") (term "1,1,1,0,0") (ifseqformula "19"))
                                          (rule "applyEq" (formula "28") (term "1,1,1,0,0") (ifseqformula "19"))
                                          (rule "applyEqRigid" (formula "29") (term "1,1,0,0,0,0") (ifseqformula "19"))
                                          (rule "applyEqRigid" (formula "20") (term "1,0") (ifseqformula "19"))
                                          (rule "applyEqRigid" (formula "26") (term "0") (ifseqformula "19"))
                                          (rule "applyEq" (formula "17") (term "1,1,0,0,0,1,0") (ifseqformula "19"))
                                          (rule "nnf_imp2or" (formula "11") (term "0,1"))
                                          (rule "nnf_imp2or" (formula "12") (term "0,1,1"))
                                          (rule "nnf_imp2or" (formula "12") (term "0,0,1"))
                                          (rule "nnf_imp2or" (formula "29") (term "1,0"))
                                          (rule "nnf_imp2or" (formula "16") (term "0"))
                                          (rule "nnf_imp2or" (formula "28") (term "0"))
                                          (rule "nnf_imp2or" (formula "17") (term "0"))
                                          (rule "nnf_notAnd" (formula "29") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "29") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "29") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "29") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "29") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "29") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "29") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "29") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "29") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                                          (rule "mul_literals" (formula "29") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "16") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "16") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                          (rule "mul_literals" (formula "16") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "28") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "28") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0"))
                                          (rule "mul_literals" (formula "28") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "28") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                                          (rule "mul_literals" (formula "28") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "17") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "17") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "17") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                                          (rule "mul_literals" (formula "17") (term "1,0,0,0"))
                                          (rule "jdiv_axiom" (formula "40") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "40") (term "0,0,2,1"))
                                          (rule "eqSymm" (formula "40"))
                                          (rule "applyEqRigid" (formula "40") (term "1") (ifseqformula "41"))
                                          (rule "inEqSimp_subsumption6" (formula "40") (term "0,0") (ifseqformula "45"))
                                          (rule "times_zero_1" (formula "40") (term "1,1,0,0,0"))
                                          (rule "greater_literals" (formula "40") (term "0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "40"))
                                          (rule "leq_literals" (formula "40") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "40"))
                                          (rule "polyDiv_pullOut" (formula "40") (term "0") (inst "polyDivCoeff=l_0"))
                                          (rule "equal_literals" (formula "40") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "40"))
                                          (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,0"))
                                          (rule "polySimp_homoEq" (formula "40"))
                                          (rule "polySimp_pullOutFactor0" (formula "40") (term "0,0,0,1,0"))
                                          (rule "add_literals" (formula "40") (term "1,0,0,0,1,0"))
                                          (rule "times_zero_1" (formula "40") (term "0,0,0,1,0"))
                                          (rule "div_literals" (formula "40") (term "0,0,1,0"))
                                          (rule "add_zero_left" (formula "40") (term "0,1,0"))
                                          (rule "polySimp_pullOutFactor1" (formula "40") (term "0"))
                                          (rule "add_literals" (formula "40") (term "1,0"))
                                          (rule "times_zero_1" (formula "40") (term "0"))
                                           (builtin "One Step Simplification" (formula "40"))
                                          (rule "true_left" (formula "40"))
                                          (rule "nnf_notAnd" (formula "11") (term "0,0,1"))
                                          (rule "inEqSimp_notLeq" (formula "11") (term "0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0,1"))
                                          (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0,1"))
                                          (rule "add_literals" (formula "11") (term "0,0,0,0,0,0,1"))
                                          (rule "add_zero_left" (formula "11") (term "0,0,0,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "11") (term "1,0,0,0,1"))
                                          (rule "inEqSimp_notGeq" (formula "11") (term "1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0,1"))
                                          (rule "mul_literals" (formula "11") (term "0,1,1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0,1"))
                                          (rule "nnf_notAnd" (formula "29") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "29"))
                                          (rule "inEqSimp_notGeq" (formula "29") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,1,0,1,0"))
                                          (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,1,0"))
                                          (rule "add_literals" (formula "29") (term "0,0,0,1,0,1,0"))
                                          (rule "add_zero_left" (formula "29") (term "0,0,1,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,1,0"))
                                          (rule "nnf_notAnd" (formula "28") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "28"))
                                          (rule "inEqSimp_notLeq" (formula "28") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,1,0"))
                                          (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,1,0"))
                                          (rule "add_literals" (formula "28") (term "0,0,0,1,0,1,0"))
                                          (rule "add_zero_left" (formula "28") (term "0,0,1,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,1,0"))
                                          (rule "nnf_imp2or" (formula "17") (term "0,1,0"))
                                          (rule "nnf_notAnd" (formula "12") (term "0,0,1,1"))
                                          (rule "inEqSimp_notLeq" (formula "12") (term "0,0,0,1,1"))
                                          (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0,1,1"))
                                          (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0,1,1"))
                                          (rule "add_literals" (formula "12") (term "0,0,0,0,0,0,1,1"))
                                          (rule "add_zero_left" (formula "12") (term "0,0,0,0,0,1,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,0,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,1,1"))
                                          (rule "polySimp_elimOne" (formula "12") (term "1,0,0,0,1,1"))
                                          (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0,1,1"))
                                          (rule "mul_literals" (formula "12") (term "1,0,0,1,0,0,1,1"))
                                          (rule "add_zero_right" (formula "12") (term "0,0,1,0,0,1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,1,1"))
                                          (rule "mul_literals" (formula "12") (term "1,1,0,0,1,1"))
                                          (rule "nnf_notAnd" (formula "12") (term "0,0,0,1"))
                                          (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,0,1"))
                                          (rule "mul_literals" (formula "12") (term "0,1,1,0,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,0,1"))
                                          (rule "inEqSimp_notLeq" (formula "12") (term "0,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0,0,1"))
                                          (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0,0,1"))
                                          (rule "add_literals" (formula "12") (term "0,0,0,0,0,0,0,1"))
                                          (rule "add_zero_left" (formula "12") (term "0,0,0,0,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "12") (term "1,0,0,0,0,1"))
                                          (rule "nnf_imp2or" (formula "29") (term "0,1,1,0"))
                                          (rule "nnf_imp2or" (formula "28") (term "0,1,1,0"))
                                          (rule "nnf_notAnd" (formula "17") (term "0,0,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0,1,0"))
                                          (rule "add_literals" (formula "17") (term "0,0,0,0,0,0,1,0"))
                                          (rule "add_zero_left" (formula "17") (term "0,0,0,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,1,0"))
                                          (rule "nnf_notAnd" (formula "17") (term "0,1,0,1,0"))
                                           (builtin "One Step Simplification" (formula "17"))
                                          (rule "jdiv_axiom" (formula "9") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "0,0,2,1"))
                                          (rule "eqSymm" (formula "9"))
                                          (rule "applyEqRigid" (formula "9") (term "1") (ifseqformula "10"))
                                          (rule "inEqSimp_subsumption6" (formula "9") (term "0,0") (ifseqformula "6"))
                                          (rule "times_zero_1" (formula "9") (term "1,1,0,0,0"))
                                          (rule "greater_literals" (formula "9") (term "0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "9"))
                                          (rule "leq_literals" (formula "9") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "9"))
                                          (rule "polyDiv_pullOut" (formula "9") (term "0") (inst "polyDivCoeff=l_1"))
                                          (rule "equal_literals" (formula "9") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "9"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "9") (term "0,0,0"))
                                          (rule "add_literals" (formula "9") (term "1,0,0,0"))
                                          (rule "times_zero_1" (formula "9") (term "0,0,0"))
                                          (rule "div_literals" (formula "9") (term "0,0"))
                                          (rule "add_zero_left" (formula "9") (term "0"))
                                           (builtin "One Step Simplification" (formula "9"))
                                          (rule "true_left" (formula "9"))
                                          (rule "nnf_notAnd" (formula "29") (term "0,0,1,1,0"))
                                          (rule "nnf_notAnd" (formula "28") (term "0,0,1,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "28") (term "1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "28") (term "0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,1,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "28") (term "0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "28") (term "0,0,0,0,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "28") (term "0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "28") (term "1,0,0,0,1,1,0"))
                                          (rule "nnf_notAnd" (formula "29") (term "0,0,0,1,1,0"))
                                          (rule "nnf_notOr" (formula "29") (term "1,0,0,1,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "29") (term "1,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "29") (term "1,0,0,1,1,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "29") (term "0,0,1,1,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "29") (term "1,1,1,0,0,1,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "29") (term "0,1,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "29") (term "0,1,0,0,0,1,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,1,0,0,1,1,0"))
                                          (rule "add_literals" (formula "29") (term "0,0,0,0,1,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "29") (term "0,0,0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "0,1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "29") (term "1,0,1,0,0,1,1,0"))
                                          (rule "nnf_notAnd" (formula "29") (term "0,0,0,0,1,1,0"))
                                          (rule "nnf_notOr" (formula "29") (term "1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "29") (term "1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "29") (term "1,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "29") (term "1,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "29") (term "0,1,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "29") (term "1,1,1,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "29") (term "0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "29") (term "0,1,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,1,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "29") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "29") (term "0,0,0,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "29") (term "1,0,1,0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "16") (term "0"))
                                          (rule "nnf_notOr" (formula "29") (term "0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "29") (term "0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "29") (term "0,1,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "29") (term "0,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "29") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "29") (term "1,0,0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "29") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "29") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0,0,0,1,1,0"))
                                          (rule "nnf_notOr" (formula "29") (term "1,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "29") (term "0,1,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "29") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "29") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,1,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "29") (term "1,0,1,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "29") (term "1,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,1,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "29") (term "1,1,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "29") (term "1,1,1,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "29") (term "0,1,1,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "29") (term "1,1,1,1,0,0,0,0,1,1,0"))
                                          (rule "methodBodyExpand" (formula "47") (term "1") (newnames "heapBefore_maskNull_0,savedHeapBefore_maskNull"))
                                           (builtin "One Step Simplification" (formula "47"))
                                          (rule "methodBodyExpand" (formula "46") (term "1") (newnames "heapBefore_maskNull_1,savedHeapBefore_maskNull_0"))
                                           (builtin "One Step Simplification" (formula "46"))
                                          (rule "methodBodyExpand" (formula "45") (term "1") (newnames "heapBefore_maskNull_2,savedHeapBefore_maskNull_1"))
                                           (builtin "One Step Simplification" (formula "45"))
                                          (rule "commute_or" (formula "29") (term "0,0"))
                                          (rule "jdiv_axiom" (formula "48") (term "0,1"))
                                          (rule "eqSymm" (formula "1"))
                                          (rule "polyDiv_pullOut" (formula "1") (term "0,2,0") (inst "polyDivCoeff=mul(genHash(maskNull_sk_1, pow(Z(2(#)), i_2_0)),
    Z(neglit(1(#))))"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,2,0"))
                                          (rule "equal_literals" (formula "1") (term "0,0,2,0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,2,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "1") (term "0,0,0,2,0"))
                                          (rule "add_literals" (formula "1") (term "1,0,0,0,2,0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0,0,0,2,0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "2,0"))
                                          (rule "polySimp_addComm0" (formula "1") (term "1,2,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "2,0"))
                                          (rule "polySimp_mulAssoc" (formula "1") (term "0,2,0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "0,0,2,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0,2,0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0,2,0"))
                                          (rule "commute_or" (formula "12") (term "0,0,1"))
                                          (rule "commute_or" (formula "13") (term "0,0,1,1"))
                                          (rule "div_axiom" (formula "20") (term "1") (inst "quotient=quotient_0"))
                                          (rule "qeq_literals" (formula "20") (term "0,1,1"))
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "mul_literals" (formula "20") (term "1,1,1,1"))
                                          (rule "equal_literals" (formula "20") (term "0"))
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "andLeft" (formula "20"))
                                          (rule "andLeft" (formula "20"))
                                          (rule "polySimp_addComm1" (formula "22") (term "1"))
                                          (rule "add_literals" (formula "22") (term "0,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "21"))
                                          (rule "inEqSimp_homoInEq1" (formula "22"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "22") (term "0"))
                                          (rule "applyEqRigid" (formula "18") (term "1,1,0,0") (ifseqformula "20"))
                                          (rule "applyEqRigid" (formula "17") (term "1,1,0") (ifseqformula "20"))
                                          (rule "applyEq" (formula "33") (term "1,1,0,0") (ifseqformula "20"))
                                          (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "20"))
                                          (rule "inEqSimp_homoInEq1" (formula "4"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0"))
                                          (rule "applyEqRigid" (formula "30") (term "0") (ifseqformula "20"))
                                          (rule "inEqSimp_homoInEq1" (formula "30"))
                                          (rule "polySimp_addComm1" (formula "30") (term "0"))
                                          (rule "applyEqRigid" (formula "32") (term "1,1,0,0") (ifseqformula "20"))
                                          (rule "applyEqRigid" (formula "24") (term "1,0") (ifseqformula "20"))
                                          (rule "applyEqRigid" (formula "18") (term "1,0,0,0,1,0") (ifseqformula "20"))
                                          (rule "applyEqRigid" (formula "23") (term "1") (ifseqformula "20"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "22"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1"))
                                          (rule "polySimp_rightDist" (formula "22") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                                          (rule "mul_literals" (formula "22") (term "0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                          (rule "polySimp_rightDist" (formula "4") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                          (rule "mul_literals" (formula "4") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "30"))
                                          (rule "polySimp_mulComm0" (formula "30") (term "1"))
                                          (rule "polySimp_rightDist" (formula "30") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "30") (term "1,1"))
                                          (rule "mul_literals" (formula "30") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "30") (term "1,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "22"))
                                          (rule "mul_literals" (formula "15") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                          (rule "add_literals" (formula "15") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                          (rule "mul_literals" (formula "15") (term "1"))
                                          (rule "elimGcdGeq_antec" (formula "15") (inst "elimGcdRightDiv=Z(4(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "15") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
                                          (rule "polySimp_addLiterals" (formula "15") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "15") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                                          (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "15") (term "0,0"))
                                          (rule "leq_literals" (formula "15") (term "0"))
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "inEqSimp_exactShadow3" (formula "48") (ifseqformula "23"))
                                          (rule "polySimp_rightDist" (formula "48") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "48") (term "1,0,0"))
                                          (rule "mul_literals" (formula "48") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "48") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "48") (term "0,0"))
                                          (rule "add_literals" (formula "48") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "48") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "48"))
                                          (rule "polySimp_mulLiterals" (formula "48") (term "0"))
                                          (rule "elimGcdLeq_antec" (formula "48") (inst "elimGcdRightDiv=quotient_0") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "48") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "48") (term "0,1,0,0,0,0,1,0"))
                                          (rule "neg_literal" (formula "48") (term "0,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "48") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "48"))
                                          (rule "polySimp_pullOutFactor0b" (formula "48") (term "0,0"))
                                          (rule "add_literals" (formula "48") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "48") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "48") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "48") (term "0,0"))
                                          (rule "add_literals" (formula "48") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "48") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "48") (term "0,0"))
                                          (rule "qeq_literals" (formula "48") (term "0"))
                                           (builtin "One Step Simplification" (formula "48"))
                                          (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "23"))
                                          (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                          (rule "mul_literals" (formula "28") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "28") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                          (rule "add_literals" (formula "28") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "28") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                          (rule "polySimp_elimOne" (formula "28") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "32"))
                                          (rule "times_zero_1" (formula "31") (term "0,0"))
                                          (rule "add_zero_left" (formula "31") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "31"))
                                          (rule "mul_literals" (formula "31") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "31") (ifseqformula "15"))
                                          (rule "leq_literals" (formula "31") (term "0"))
                                           (builtin "One Step Simplification" (formula "31"))
                                          (rule "true_left" (formula "31"))
                                          (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "4"))
                                          (rule "times_zero_1" (formula "3") (term "0,0"))
                                          (rule "add_zero_left" (formula "3") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                          (rule "mul_literals" (formula "3") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "16"))
                                          (rule "leq_literals" (formula "3") (term "0"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "23"))
                                          (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
                                          (rule "mul_literals" (formula "9") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "9") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                          (rule "add_literals" (formula "9") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "9") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                          (rule "elimGcdLeq_antec" (formula "9") (inst "elimGcdRightDiv=quotient_0") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                          (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0"))
                                          (rule "neg_literal" (formula "9") (term "0,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "9") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "9"))
                                          (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                                          (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "9") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                                          (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "9") (term "0,0"))
                                          (rule "qeq_literals" (formula "9") (term "0"))
                                           (builtin "One Step Simplification" (formula "9"))
                                          (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "18"))
                                          (rule "polySimp_mulAssoc" (formula "23") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "23") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                          (rule "elimGcdLeq_antec" (formula "23") (inst "elimGcdRightDiv=Z(2(1(9(0(7(8(6(3(5(#))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,0,1,0"))
                                          (rule "neg_literal" (formula "23") (term "0,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "23") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "23"))
                                          (rule "mul_literals" (formula "23") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_addLiterals" (formula "23") (term "0,0,0,0"))
                                          (rule "add_zero_right" (formula "23") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0"))
                                          (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "23") (term "0,0"))
                                          (rule "qeq_literals" (formula "23") (term "0"))
                                           (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "9"))
                                          (rule "mul_literals" (formula "7") (term "0,0"))
                                          (rule "add_zero_left" (formula "7") (term "0"))
                                          (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "17"))
                                          (rule "leq_literals" (formula "7") (term "0"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "true_left" (formula "7"))
                                          (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "30"))
                                          (rule "times_zero_1" (formula "28") (term "0,0"))
                                          (rule "add_zero_left" (formula "28") (term "0"))
                                          (rule "inEqSimp_subsumption6" (formula "28") (ifseqformula "16"))
                                          (rule "mul_literals" (formula "28") (term "1,1,0"))
                                          (rule "greater_literals" (formula "28") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "28"))
                                          (rule "leq_literals" (formula "28") (term "0"))
                                           (builtin "One Step Simplification" (formula "28"))
                                          (rule "true_left" (formula "28"))
                                          (rule "inEqSimp_exactShadow3" (formula "53") (ifseqformula "51"))
                                          (rule "mul_literals" (formula "53") (term "0,0"))
                                          (rule "add_zero_left" (formula "53") (term "0"))
                                          (rule "inEqSimp_subsumption1" (formula "53") (ifseqformula "16"))
                                          (rule "leq_literals" (formula "53") (term "0"))
                                           (builtin "One Step Simplification" (formula "53"))
                                          (rule "true_left" (formula "53"))
                                          (rule "commute_or" (formula "14") (term "0,0,0,1"))
                                          (rule "commute_or" (formula "19") (term "0,0"))
                                          (rule "commute_or_2" (formula "36") (term "0,1,1,0"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "5") (term "1,0") (ifseqformula "39"))
                                          (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "59"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "6") (term "0") (ifseqformula "40"))
                                          (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "6") (term "1,0,1") (ifseqformula "7"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "37") (term "0") (ifseqformula "41"))
                                          (rule "replace_known_left" (formula "37") (term "0") (ifseqformula "38"))
                                           (builtin "One Step Simplification" (formula "37"))
                                          (rule "true_left" (formula "37"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "61") (term "0") (ifseqformula "41"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "62"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "commute_and" (formula "40") (term "1,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "16") (term "0,1"))
                                          (rule "shift_paren_or" (formula "23") (term "0,1,0"))
                                          (rule "cnf_rightDist" (formula "17") (term "0,1,1"))
                                          (rule "returnUnfold" (formula "59") (term "1") (inst "#v0=o_2"))
                                          (rule "variableDeclarationAssign" (formula "59") (term "1"))
                                          (rule "variableDeclaration" (formula "59") (term "1") (newnames "o_2"))
                                          (rule "returnUnfold" (formula "58") (term "1") (inst "#v0=o_2"))
                                          (rule "variableDeclarationAssign" (formula "58") (term "1"))
                                          (rule "variableDeclaration" (formula "58") (term "1") (newnames "o_3"))
                                          (rule "returnUnfold" (formula "57") (term "1") (inst "#v0=o_2"))
                                          (rule "variableDeclarationAssign" (formula "57") (term "1"))
                                          (rule "variableDeclaration" (formula "57") (term "1") (newnames "o_4"))
                                          (rule "commute_and" (formula "40") (term "0,0,0,0,0,1,1,0"))
                                          (rule "div_axiom" (formula "2") (term "1,0") (inst "quotient=quotient_1"))
                                          (rule "qeq_literals" (formula "2") (term "0,1,1"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "mul_literals" (formula "2") (term "1,1,1,1"))
                                          (rule "equal_literals" (formula "2") (term "0"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "polySimp_addComm1" (formula "4") (term "1"))
                                          (rule "add_literals" (formula "4") (term "0,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "4"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0"))
                                          (rule "applyEq" (formula "5") (term "0,1,2,0") (ifseqformula "2"))
                                          (rule "polySimp_addComm0" (formula "5") (term "2,0"))
                                          (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "2"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                          (rule "polySimp_rightDist" (formula "4") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                          (rule "mul_literals" (formula "4") (term "0,1"))
                                          (rule "commute_or_2" (formula "19") (term "0,0,1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "12") (term "0") (ifseqformula "45"))
                                          (rule "replace_known_left" (formula "12") (term "0") (ifseqformula "13"))
                                           (builtin "One Step Simplification" (formula "12"))
                                          (rule "true_left" (formula "12"))
                                          (rule "shift_paren_or" (formula "19") (term "1,0,1"))
                                          (rule "commute_or_2" (formula "26") (term "0,0,1,0"))
                                          (rule "inEqSimp_or_weaken2" (formula "26") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "1,0,1,0,1,0"))
                                          (rule "add_literals" (formula "26") (term "0,1,0,1,0,1,0"))
                                          (rule "add_zero_left" (formula "26") (term "1,0,1,0,1,0"))
                                           (builtin "One Step Simplification" (formula "26"))
                                          (rule "commute_or_2" (formula "20") (term "0,0,1,1"))
                                          (rule "commute_or" (formula "42") (term "0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "20") (term "0,0,1"))
                                          (rule "shift_paren_or" (formula "20") (term "1,0,1,1"))
                                          (rule "commute_or" (formula "19") (term "0,0,0,1"))
                                          (rule "commute_or" (formula "26") (term "0,0,1,0"))
                                          (rule "commute_or_2" (formula "20") (term "0,0,0,1"))
                                          (rule "commute_or" (formula "20") (term "0,0,0,1,1"))
                                          (rule "shift_paren_or" (formula "20") (term "1,0,0,1"))
                                          (rule "commute_or" (formula "20") (term "0,0,0,0,1"))
                                          (rule "remove_parentheses_right" (formula "62") (term "1"))
                                          (rule "remove_parentheses_right" (formula "61") (term "1"))
                                          (rule "remove_parentheses_right" (formula "60") (term "1"))
                                          (rule "cnf_rightDist" (formula "43") (term "0,0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "43") (term "0,0,0,0,0,1,1,0"))
                                          (rule "condition" (formula "62") (term "1"))
                                          (rule "condition" (formula "61") (term "1"))
                                          (rule "condition" (formula "60") (term "1"))
                                          (rule "cnf_rightDist" (formula "43") (term "1,0,0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "43") (term "0,1,0,0,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "43") (term "0,0,0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "43") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "all_pull_out3" (formula "42") (term "1,0"))
                                          (rule "shift_paren_or" (formula "42") (term "0,1,0"))
                                          (rule "shift_paren_or" (formula "42") (term "0,0,1,0"))
                                          (rule "commute_or_2" (formula "42") (term "0,0,0,1,0"))
                                          (rule "all_pull_out3" (formula "26") (term "0"))
                                          (rule "shift_paren_or" (formula "26") (term "0,0"))
                                          (rule "shift_paren_or" (formula "26") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "26") (term "0,0,0,0"))
                                          (rule "commute_or" (formula "26") (term "0,0,0,0,0"))
                                          (rule "shift_paren_and" (formula "43") (term "0,0,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "43") (term "0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "43") (term "0,0,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "43") (term "1,0,0,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "43"))
                                          (rule "cnf_rightDist" (formula "43") (term "0,0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "43") (term "1,0,0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "43") (term "0,1,0,0,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "43") (term "0,1,0,0,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "43"))
                                          (rule "cnf_rightDist" (formula "43") (term "0,0,0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "43") (term "1,0,0,0,0,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "43"))
                                          (rule "all_pull_out3" (formula "42") (term "0"))
                                          (rule "shift_paren_or" (formula "42") (term "0,0"))
                                          (rule "shift_paren_or" (formula "42") (term "0,0,0"))
                                          (rule "shift_paren_or" (formula "42") (term "0,0,0,0"))
                                          (rule "commute_or_2" (formula "42") (term "0,0,0,0,0"))
                                          (rule "commute_or" (formula "42") (term "0,0,0,0,0,0"))
                                          (rule "ifElseUnfold" (formula "62") (term "1") (inst "#boolv=x"))
                                          (rule "variableDeclaration" (formula "62") (term "1") (newnames "x"))
                                          (rule "equality_comparison_simple" (formula "62") (term "1"))
                                           (builtin "One Step Simplification" (formula "62"))
                                          (rule "replace_known_right" (formula "62") (term "0,0,1,0") (ifseqformula "67"))
                                           (builtin "One Step Simplification" (formula "62"))
                                          (rule "ifElseUnfold" (formula "61") (term "1") (inst "#boolv=x"))
                                          (rule "variableDeclaration" (formula "61") (term "1") (newnames "x_4"))
                                          (rule "equality_comparison_simple" (formula "61") (term "1"))
                                           (builtin "One Step Simplification" (formula "61"))
                                          (rule "replace_known_right" (formula "61") (term "0,0,1,0") (ifseqformula "67"))
                                           (builtin "One Step Simplification" (formula "61"))
                                          (rule "ifElseUnfold" (formula "60") (term "1") (inst "#boolv=x"))
                                          (rule "variableDeclaration" (formula "60") (term "1") (newnames "x_5"))
                                          (rule "equality_comparison_simple" (formula "60") (term "1"))
                                           (builtin "One Step Simplification" (formula "60"))
                                          (rule "replace_known_right" (formula "60") (term "0,0,1,0") (ifseqformula "67"))
                                           (builtin "One Step Simplification" (formula "60"))
                                          (rule "cnf_rightDist" (formula "43") (term "0,0,1,0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "43") (term "0,0,0,1,0,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "43") (term "0,0,0,0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "43") (term "1,0,0,0,0,0,0,1,1,0"))
                                          (rule "allLeft" (formula "25") (inst "t=i_1_0"))
                                          (rule "replace_known_left" (formula "25") (term "0,0,0,0") (ifseqformula "42"))
                                           (builtin "One Step Simplification" (formula "25"))
                                          (rule "inEqSimp_contradInEq0" (formula "25") (term "1") (ifseqformula "41"))
                                          (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "25") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "25") (term "0,0,1"))
                                          (rule "polySimp_addComm0" (formula "25") (term "0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                                          (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "25") (term "0,0,1"))
                                          (rule "leq_literals" (formula "25") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "25"))
                                          (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "40"))
                                          (rule "qeq_literals" (formula "25") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "25"))
                                          (rule "shift_paren_or" (formula "44") (term "0,0,0,0,0,0,0,1,1,0"))
                                          (rule "shift_paren_and" (formula "44") (term "0,0,0,1,1,0"))
                                          (rule "shift_paren_and" (formula "44") (term "0,0,0,0,1,1,0"))
                                          (rule "shift_paren_and" (formula "44") (term "0,0,0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "44") (term "0,1,1,0"))
                                          (rule "commute_or" (formula "44") (term "0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "44") (term "0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "44") (term "1,0,0,1,1,0"))
                                          (rule "commute_or" (formula "44") (term "0,1,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "44") (term "0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "44") (term "1,0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "44") (term "0,1,0,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "44") (term "0,0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "44") (term "1,0,0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "44") (term "0,1,0,0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "44") (term "0,0,1,0,0,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "44") (term "0,0,0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "44") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "44") (term "0,1,0,0,0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "44") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "44") (term "0,0,0,0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "44") (term "1,0,0,0,0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "44") (term "0,1,0,0,0,0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "44") (term "0,0,1,0,0,0,0,0,0,1,1,0"))
                                          (rule "ifElseSplit" (formula "63"))
                                          (branch "if x true"
                                              (builtin "One Step Simplification" (formula "64"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                          (branch "if x false"
                                              (builtin "One Step Simplification" (formula "64"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "assignment" (formula "63") (term "1"))
                                              (builtin "One Step Simplification" (formula "63"))
                                             (rule "blockEmpty" (formula "63") (term "1"))
                                             (rule "methodCallReturn" (formula "63") (term "1"))
                                             (rule "assignment" (formula "63") (term "1"))
                                              (builtin "One Step Simplification" (formula "63"))
                                             (rule "methodCallEmpty" (formula "63") (term "1"))
                                             (rule "emptyModality" (formula "63") (term "1"))
                                              (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "68")) (ifInst ""  (formula "49")))
                                             (rule "notRight" (formula "63"))
                                             (rule "eqSymm" (formula "1"))
                                             (rule "applyEq" (formula "11") (term "1,0,1") (ifseqformula "1"))
                                             (rule "replace_known_left" (formula "11") (term "1") (ifseqformula "50"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "true_left" (formula "11"))
                                             (rule "applyEq" (formula "11") (term "1") (ifseqformula "1"))
                                             (rule "ifElseSplit" (formula "62"))
                                             (branch "if x_4 true"
                                                 (builtin "One Step Simplification" (formula "63"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                             (branch "if x_4 false"
                                                 (builtin "One Step Simplification" (formula "63"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "true_left" (formula "1"))
                                                (rule "assignment" (formula "62") (term "1"))
                                                 (builtin "One Step Simplification" (formula "62"))
                                                (rule "blockEmpty" (formula "62") (term "1"))
                                                (rule "methodCallReturn" (formula "62") (term "1"))
                                                (rule "assignment" (formula "62") (term "1"))
                                                 (builtin "One Step Simplification" (formula "62"))
                                                (rule "methodCallEmpty" (formula "62") (term "1"))
                                                (rule "emptyModality" (formula "62") (term "1"))
                                                 (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "67")) (ifInst ""  (formula "49")))
                                                (rule "notRight" (formula "62"))
                                                (rule "eqSymm" (formula "1"))
                                                (rule "applyEq" (formula "7") (term "0,0,1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "7") (term "0,0,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "7") (term "0,1,2,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "63") (term "0,0,0,1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "55"))
                                                (rule "applyEq" (formula "6") (term "0") (ifseqformula "55"))
                                                (rule "applyEq" (formula "5") (term "0") (ifseqformula "55"))
                                                (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "55"))
                                                (rule "applyEq" (formula "63") (term "0,0,1") (ifseqformula "55"))
                                                (rule "applyEq" (formula "7") (term "1,2,0") (ifseqformula "55"))
                                                (rule "applyEq" (formula "7") (term "0,1") (ifseqformula "55"))
                                                (rule "applyEqRigid" (formula "63") (term "0,1") (ifseqformula "56"))
                                                (rule "applyEq" (formula "7") (term "1") (ifseqformula "56"))
                                                (rule "inEqSimp_subsumption6" (formula "7") (term "0,0") (ifseqformula "61"))
                                                (rule "times_zero_1" (formula "7") (term "1,1,0,0,0"))
                                                (rule "greater_literals" (formula "7") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "leq_literals" (formula "7") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "7"))
                                                (rule "eqSymm" (formula "7"))
                                                (rule "applyEqRigid" (formula "20") (term "1,1,1,0,0,0,1") (ifseqformula "7"))
                                                (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "7"))
                                                (rule "applyEqRigid" (formula "5") (term "0,0") (ifseqformula "7"))
                                                (rule "inEqSimp_homoInEq1" (formula "5"))
                                                (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                                (rule "polySimp_pullOutFactor0" (formula "5") (term "0"))
                                                (rule "add_literals" (formula "5") (term "1,0"))
                                                (rule "times_zero_1" (formula "5") (term "0"))
                                                (rule "leq_literals" (formula "5"))
                                                (rule "true_left" (formula "5"))
                                                (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "6"))
                                                (rule "inEqSimp_homoInEq1" (formula "20") (term "0"))
                                                (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                                                (rule "applyEq" (formula "62") (term "0,1") (ifseqformula "6"))
                                                (rule "inEqSimp_commuteLeq" (formula "62") (term "1"))
                                                (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "6"))
                                                (rule "inEqSimp_homoInEq0" (formula "5"))
                                                (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "5") (term "0"))
                                                (rule "add_literals" (formula "5") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "5") (term "1,0"))
                                                (rule "add_zero_right" (formula "5") (term "0"))
                                                (rule "qeq_literals" (formula "5"))
                                                (rule "true_left" (formula "5"))
                                                (rule "applyEqRigid" (formula "54") (term "0,0,0") (ifseqformula "5"))
                                                (rule "applyEqRigid" (formula "18") (term "0,0") (ifseqformula "5"))
                                                (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
                                                (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                                                (rule "applyEqRigid" (formula "58") (term "0,1,1") (ifseqformula "5"))
                                                (rule "applyEqRigid" (formula "57") (term "0") (ifseqformula "5"))
                                                (rule "inEqSimp_commuteLeq" (formula "57"))
                                                (rule "applyEqRigid" (formula "56") (term "0") (ifseqformula "5"))
                                                (rule "applyEq" (formula "59") (term "0") (ifseqformula "5"))
                                                (rule "applyEqRigid" (formula "18") (term "1,1,1,0,1,0,1") (ifseqformula "5"))
                                                (rule "applyEqRigid" (formula "19") (term "1,1,1,0,1,0,0,1") (ifseqformula "5"))
                                                (rule "applyEqRigid" (formula "19") (term "1,1,1,0,0,0,0,1") (ifseqformula "5"))
                                                (rule "applyEq" (formula "53") (term "0,1") (ifseqformula "5"))
                                                (rule "applyEqRigid" (formula "55") (term "0,1") (ifseqformula "5"))
                                                (rule "applyEq" (formula "54") (term "1") (ifseqformula "5"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0"))
                                                (rule "mul_literals" (formula "19") (term "0,1,0"))
                                                (rule "polySimp_elimOne" (formula "19") (term "1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0"))
                                                (rule "mul_literals" (formula "18") (term "0,1,0"))
                                                (rule "polySimp_elimOne" (formula "18") (term "1,1,0"))
                                                (rule "polyDiv_pullOut" (formula "4") (term "0") (inst "polyDivCoeff=quotient_1"))
                                                (rule "equal_literals" (formula "4") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0"))
                                                (rule "polySimp_homoEq" (formula "4"))
                                                (rule "polySimp_pullOutFactor0" (formula "4") (term "0,0,0,1,0"))
                                                (rule "add_literals" (formula "4") (term "1,0,0,0,1,0"))
                                                (rule "times_zero_1" (formula "4") (term "0,0,0,1,0"))
                                                (rule "div_literals" (formula "4") (term "0,0,1,0"))
                                                (rule "add_zero_left" (formula "4") (term "0,1,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                                                (rule "add_literals" (formula "4") (term "1,0"))
                                                (rule "times_zero_1" (formula "4") (term "0"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "true_left" (formula "4"))
                                                (rule "inEqSimp_exactShadow3" (formula "57") (ifseqformula "22"))
                                                (rule "polySimp_rightDist" (formula "57") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "57") (term "1,0,0"))
                                                (rule "mul_literals" (formula "57") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "57") (term "0"))
                                                (rule "add_literals" (formula "57") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "57"))
                                                (rule "polySimp_mulLiterals" (formula "57") (term "0"))
                                                (rule "inEqSimp_subsumption4" (formula "57") (ifseqformula "55"))
                                                (rule "mul_literals" (formula "57") (term "0,1,0"))
                                                (rule "greater_literals" (formula "57") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "57"))
                                                (rule "leq_literals" (formula "57") (term "0"))
                                                 (builtin "One Step Simplification" (formula "57"))
                                                (rule "true_left" (formula "57"))
                                                (rule "inEqSimp_exactShadow3" (formula "57") (ifseqformula "30"))
                                                (rule "polySimp_rightDist" (formula "57") (term "0,0"))
                                                (rule "mul_literals" (formula "57") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "57") (term "1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "57") (term "0"))
                                                (rule "polySimp_addComm1" (formula "57") (term "0,0"))
                                                (rule "add_literals" (formula "57") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "57") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "57"))
                                                (rule "polySimp_mulLiterals" (formula "57") (term "1"))
                                                (rule "inEqSimp_subsumption6" (formula "57") (ifseqformula "56"))
                                                (rule "greater_literals" (formula "57") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "57"))
                                                (rule "polySimp_mulComm0" (formula "57") (term "1,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "57") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "57") (term "1,0,0"))
                                                (rule "polySimp_pullOutFactor0" (formula "57") (term "0,0"))
                                                (rule "add_literals" (formula "57") (term "1,0,0"))
                                                (rule "times_zero_1" (formula "57") (term "0,0"))
                                                (rule "qeq_literals" (formula "57") (term "0"))
                                                 (builtin "One Step Simplification" (formula "57"))
                                                (rule "true_left" (formula "57"))
                                                (rule "inEqSimp_exactShadow3" (formula "56") (ifseqformula "28"))
                                                (rule "polySimp_mulComm0" (formula "56") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "56") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "56"))
                                                (rule "polySimp_mulLiterals" (formula "56") (term "0"))
                                                (rule "polySimp_elimOne" (formula "56") (term "0"))
                                                (rule "inEqSimp_subsumption0" (formula "56") (ifseqformula "55"))
                                                (rule "leq_literals" (formula "56") (term "0"))
                                                 (builtin "One Step Simplification" (formula "56"))
                                                (rule "true_left" (formula "56"))
                                                (rule "commute_or_2" (formula "17") (term "0,0,1"))
                                                (rule "commute_or_2" (formula "17") (term "1,0,1"))
                                                (rule "cnf_rightDist" (formula "42") (term "0,0,0,0,0,0,0,1,1,0"))
                                                (rule "ifElseSplit" (formula "59"))
                                                (branch "if x_5 true"
                                                    (builtin "One Step Simplification" (formula "60"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                                (branch "if x_5 false"
                                                    (builtin "One Step Simplification" (formula "1"))
                                                    (builtin "One Step Simplification" (formula "60"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "assignment" (formula "59") (term "1"))
                                                    (builtin "One Step Simplification" (formula "59"))
                                                   (rule "blockEmpty" (formula "59") (term "1"))
                                                   (rule "methodCallReturn" (formula "59") (term "1"))
                                                   (rule "assignment" (formula "59") (term "1"))
                                                    (builtin "One Step Simplification" (formula "59"))
                                                   (rule "jdiv_axiom" (formula "53") (term "0"))
                                                   (rule "polySimp_mulLiterals" (formula "53") (term "0,0,2,1"))
                                                   (rule "eqSymm" (formula "53"))
                                                   (rule "applyEq" (formula "53") (term "1") (ifseqformula "54"))
                                                   (rule "inEqSimp_subsumption6" (formula "53") (term "0,0") (ifseqformula "59"))
                                                   (rule "greater_literals" (formula "53") (term "0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "times_zero_1" (formula "53") (term "1,0,0,0"))
                                                   (rule "leq_literals" (formula "53") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "polyDiv_pullOut" (formula "53") (term "0") (inst "polyDivCoeff=quotient_1"))
                                                   (rule "equal_literals" (formula "53") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "polySimp_mulLiterals" (formula "53") (term "1,0,0,0"))
                                                   (rule "polySimp_homoEq" (formula "53"))
                                                   (rule "polySimp_pullOutFactor0" (formula "53") (term "0,0,0,1,0"))
                                                   (rule "add_literals" (formula "53") (term "1,0,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "53") (term "0,0,0,1,0"))
                                                   (rule "div_literals" (formula "53") (term "0,0,1,0"))
                                                   (rule "add_zero_left" (formula "53") (term "0,1,0"))
                                                   (rule "polySimp_pullOutFactor1" (formula "53") (term "0"))
                                                   (rule "add_literals" (formula "53") (term "1,0"))
                                                   (rule "times_zero_1" (formula "53") (term "0"))
                                                    (builtin "One Step Simplification" (formula "53"))
                                                   (rule "true_left" (formula "53"))
                                                   (rule "methodCallEmpty" (formula "59") (term "1"))
                                                   (rule "emptyModality" (formula "59") (term "1"))
                                                    (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "64")) (ifInst ""  (formula "47")))
                                                   (rule "notRight" (formula "59"))
                                                   (rule "eqSymm" (formula "1"))
                                                   (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "6") (term "0") (ifseqformula "53"))
                                                   (rule "inEqSimp_homoInEq0" (formula "6"))
                                                   (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                   (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                   (rule "mul_literals" (formula "6") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                   (rule "elimGcdGeq_antec" (formula "6") (inst "elimGcdRightDiv=add(Z(1(#)), quotient_1)") (inst "elimGcdLeftDiv=j_0") (inst "elimGcd=Z(2(#))"))
                                                   (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0"))
                                                   (rule "leq_literals" (formula "6") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                                   (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "6") (term "0,0"))
                                                   (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "6") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "6") (term "0,0,0"))
                                                   (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                                   (rule "add_zero_left" (formula "6") (term "0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "6") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                                   (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "6") (term "0,0"))
                                                   (rule "leq_literals" (formula "6") (term "0"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "8"))
                                                   (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                                   (rule "mul_literals" (formula "6") (term "0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                                   (rule "add_literals" (formula "6") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                   (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                   (rule "mul_literals" (formula "6") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                                   (rule "inEqSimp_subsumption1" (formula "58") (ifseqformula "6"))
                                                   (rule "inEqSimp_homoInEq0" (formula "58") (term "0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "58") (term "0,0"))
                                                   (rule "add_literals" (formula "58") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "58") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "58") (term "0,0"))
                                                   (rule "qeq_literals" (formula "58") (term "0"))
                                                    (builtin "One Step Simplification" (formula "58"))
                                                   (rule "true_left" (formula "58"))
                                                   (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "30"))
                                                   (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                                   (rule "mul_literals" (formula "6") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                   (rule "add_literals" (formula "6") (term "0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                                   (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                   (rule "inEqSimp_subsumption0" (formula "58") (ifseqformula "6"))
                                                   (rule "leq_literals" (formula "58") (term "0"))
                                                    (builtin "One Step Simplification" (formula "58"))
                                                   (rule "true_left" (formula "58"))
                                                   (rule "commute_or_2" (formula "45") (term "1,0,0,0,0,0,0,0,1,1,0"))
                                                   (rule "cut_direct" (formula "60") (term "1"))
                                                   (branch "CUT: l_1 >= quotient_1 TRUE"
                                                       (builtin "One Step Simplification" (formula "61"))
                                                      (rule "inEqSimp_geqRight" (formula "61"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "23") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0"))
                                                      (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "23") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "23") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "true_left" (formula "23"))
                                                      (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "18"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "10"))
                                                      (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "2") (term "0,0"))
                                                      (rule "qeq_literals" (formula "2") (term "0"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "true_left" (formula "2"))
                                                      (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "17"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "2") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                      (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "9"))
                                                      (rule "leq_literals" (formula "2") (term "0"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "true_left" (formula "2"))
                                                      (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "1"))
                                                      (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                                                      (rule "mul_literals" (formula "10") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                      (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "10") (term "1"))
                                                      (rule "mul_literals" (formula "10") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                                                      (rule "replace_known_left" (formula "23") (term "0") (ifseqformula "10"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "10"))
                                                      (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "2") (term "0,0"))
                                                      (rule "qeq_literals" (formula "2") (term "0"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "true_left" (formula "2"))
                                                      (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "1"))
                                                      (rule "times_zero_1" (formula "11") (term "0,0"))
                                                      (rule "add_zero_left" (formula "11") (term "0"))
                                                      (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "17"))
                                                      (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                                                      (rule "mul_literals" (formula "9") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                      (rule "add_literals" (formula "9") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                                                      (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "9") (term "0"))
                                                      (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "18"))
                                                      (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                                                      (rule "mul_literals" (formula "9") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                      (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "9") (term "1"))
                                                      (rule "mul_literals" (formula "9") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                                                      (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "8"))
                                                      (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "9") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
                                                      (rule "add_literals" (formula "9") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0"))
                                                      (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "9") (term "0,0"))
                                                      (rule "qeq_literals" (formula "9") (term "0"))
                                                       (builtin "One Step Simplification" (formula "9"))
                                                      (rule "true_left" (formula "9"))
                                                      (rule "distr_forallAnd" (formula "22"))
                                                      (rule "andLeft" (formula "22"))
                                                      (rule "cnf_rightDist" (formula "47") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                                      (rule "commute_or" (formula "47") (term "0,1,0,0,0,0,0,0,0,1,1,0"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "28") (term "0") (ifseqformula "49"))
                                                      (rule "replace_known_left" (formula "28") (term "0") (ifseqformula "29"))
                                                       (builtin "One Step Simplification" (formula "28"))
                                                      (rule "true_left" (formula "28"))
                                                      (rule "commute_or_2" (formula "47") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                                      (rule "shift_paren_or" (formula "47") (term "0,0,0,0,0,0,0,0,0,1,1,0"))
                                                      (rule "allLeft" (formula "22") (inst "t=quotient_1"))
                                                      (rule "inEqSimp_commuteGeq" (formula "22") (term "1,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "22") (term "1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,1"))
                                                      (rule "add_literals" (formula "22") (term "1,1,0,1"))
                                                      (rule "times_zero_1" (formula "22") (term "1,0,1"))
                                                      (rule "add_zero_right" (formula "22") (term "0,1"))
                                                      (rule "qeq_literals" (formula "22") (term "1"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "inEqSimp_contradInEq1" (formula "22") (term "1") (ifseqformula "9"))
                                                      (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1"))
                                                      (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "22") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "22") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "notLeft" (formula "22"))
                                                      (rule "allLeft" (formula "23") (inst "t=quotient_1"))
                                                      (rule "inEqSimp_commuteGeq" (formula "23") (term "1,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "23") (term "1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,1"))
                                                      (rule "add_literals" (formula "23") (term "1,1,0,1"))
                                                      (rule "times_zero_1" (formula "23") (term "1,0,1"))
                                                      (rule "add_zero_right" (formula "23") (term "0,1"))
                                                      (rule "qeq_literals" (formula "23") (term "1"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "inEqSimp_contradInEq1" (formula "23") (term "1") (ifseqformula "9"))
                                                      (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
                                                      (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "23") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "23") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "notLeft" (formula "23"))
                                                      (rule "commute_or_2" (formula "47") (term "0,1,0,0,0,0,0,0,0,0,1,1,0"))
                                                      (rule "allLeft" (formula "23") (inst "t=j_0"))
                                                      (rule "replace_known_left" (formula "23") (term "0,0,0") (ifseqformula "14"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "inEqSimp_contradInEq1" (formula "23") (term "1") (ifseqformula "10"))
                                                      (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "23") (term "0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "23") (term "0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "23") (term "0,0,0,1"))
                                                      (rule "add_literals" (formula "23") (term "0,0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
                                                      (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "23") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "23") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "inEqSimp_antiSymm" (formula "23") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "24") (term "0") (ifseqformula "23"))
                                                      (rule "inEqSimp_homoInEq1" (formula "24"))
                                                      (rule "polySimp_pullOutFactor1" (formula "24") (term "0"))
                                                      (rule "add_literals" (formula "24") (term "1,0"))
                                                      (rule "times_zero_1" (formula "24") (term "0"))
                                                      (rule "leq_literals" (formula "24"))
                                                      (rule "true_left" (formula "24"))
                                                      (rule "applyEqRigid" (formula "14") (term "0,0,2,0") (ifseqformula "23"))
                                                      (rule "applyEq" (formula "12") (term "0") (ifseqformula "23"))
                                                      (rule "applyEqRigid" (formula "11") (term "0") (ifseqformula "23"))
                                                      (rule "applyEqRigid" (formula "10") (term "0") (ifseqformula "22"))
                                                      (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "21"))
                                                      (rule "inEqSimp_homoInEq0" (formula "1"))
                                                      (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                                      (rule "add_literals" (formula "1") (term "1,0"))
                                                      (rule "times_zero_1" (formula "1") (term "0"))
                                                      (rule "qeq_literals" (formula "1"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "applyEq" (formula "12") (term "0") (ifseqformula "11"))
                                                      (rule "close" (formula "65") (ifseqformula "12"))
                                                   )
                                                   (branch "CUT: l_1 >= quotient_1 FALSE"
                                                       (builtin "One Step Simplification" (formula "61"))
                                                      (rule "false_right" (formula "61"))
                                                      (rule "inEqSimp_geqRight" (formula "60"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                      (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "andLeft" (formula "22"))
                                                      (rule "inEqSimp_contradInEq0" (formula "21") (term "0") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "21") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "21") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "21") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "21") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0"))
                                                      (rule "add_literals" (formula "21") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "21") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "21") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "21") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "true_left" (formula "21"))
                                                      (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "1"))
                                                      (rule "times_zero_1" (formula "15") (term "0,0"))
                                                      (rule "add_zero_left" (formula "15") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                                      (rule "mul_literals" (formula "15") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "61") (ifseqformula "15"))
                                                      (rule "leq_literals" (formula "61") (term "0"))
                                                       (builtin "One Step Simplification" (formula "61"))
                                                      (rule "true_left" (formula "61"))
                                                      (rule "distr_forallAnd" (formula "22"))
                                                      (rule "andLeft" (formula "22"))
                                                      (rule "distr_forallAnd" (formula "24"))
                                                      (rule "andLeft" (formula "24"))
                                                      (rule "cnf_rightDist" (formula "49") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                                      (rule "commute_or" (formula "49") (term "0,1,0,0,0,0,0,0,0,1,1,0"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "30") (term "0") (ifseqformula "51"))
                                                      (rule "replace_known_left" (formula "30") (term "0") (ifseqformula "31"))
                                                       (builtin "One Step Simplification" (formula "30"))
                                                      (rule "true_left" (formula "30"))
                                                      (rule "commute_or_2" (formula "49") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                                      (rule "shift_paren_or" (formula "49") (term "0,0,0,0,0,0,0,0,0,1,1,0"))
                                                      (rule "commute_or_2" (formula "49") (term "0,1,0,0,0,0,0,0,0,0,1,1,0"))
                                                      (rule "allLeft" (formula "22") (inst "t=quotient_1"))
                                                      (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "22") (term "1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,1,0"))
                                                      (rule "add_literals" (formula "22") (term "1,1,0,1,0"))
                                                      (rule "times_zero_1" (formula "22") (term "1,0,1,0"))
                                                      (rule "add_zero_right" (formula "22") (term "0,1,0"))
                                                      (rule "qeq_literals" (formula "22") (term "1,0"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "inEqSimp_contradInEq1" (formula "22") (term "1") (ifseqformula "63"))
                                                      (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,1"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,0,1"))
                                                      (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "22") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "22") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "notLeft" (formula "22"))
                                                      (rule "allLeft" (formula "24") (inst "t=i_1_0"))
                                                      (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "48"))
                                                       (builtin "One Step Simplification" (formula "24"))
                                                      (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "46"))
                                                      (rule "qeq_literals" (formula "24") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "24"))
                                                      (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "47"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "24") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                                      (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "24") (term "0"))
                                                      (rule "inEqSimp_subsumption0" (formula "18") (ifseqformula "24"))
                                                      (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "18") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "18") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0"))
                                                      (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "18") (term "0,0"))
                                                      (rule "qeq_literals" (formula "18") (term "0"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "true_left" (formula "18"))
                                                      (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "23"))
                                                      (rule "times_zero_1" (formula "16") (term "0,0"))
                                                      (rule "add_zero_left" (formula "16") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                                      (rule "mul_literals" (formula "16") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "29"))
                                                      (rule "leq_literals" (formula "16") (term "0"))
                                                       (builtin "One Step Simplification" (formula "16"))
                                                      (rule "true_left" (formula "16"))
                                                      (rule "allLeft" (formula "22") (inst "t=quotient_1"))
                                                      (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "22") (term "1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,1,0"))
                                                      (rule "add_literals" (formula "22") (term "1,1,0,1,0"))
                                                      (rule "times_zero_1" (formula "22") (term "1,0,1,0"))
                                                      (rule "add_zero_right" (formula "22") (term "0,1,0"))
                                                      (rule "qeq_literals" (formula "22") (term "1,0"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "inEqSimp_contradInEq1" (formula "22") (term "1") (ifseqformula "64"))
                                                      (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,1"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,0,1"))
                                                      (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "22") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "22") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "notLeft" (formula "22"))
                                                      (rule "allLeft" (formula "22") (inst "t=j_0"))
                                                      (rule "replace_known_left" (formula "22") (term "0,0,0") (ifseqformula "13"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "9"))
                                                      (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "22") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "22") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0"))
                                                      (rule "add_literals" (formula "22") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "22") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "22") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "22") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "22"))
                                                      (rule "polySimp_mulAssoc" (formula "38") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "38") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "38") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "38"))
                                                      (rule "polySimp_mulLiterals" (formula "38") (term "1"))
                                                      (rule "inEqSimp_contradInEq3" (formula "38") (ifseqformula "11"))
                                                      (rule "greater_literals" (formula "38") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "38"))
                                                      (rule "andLeft" (formula "38"))
                                                      (rule "polySimp_rightDist" (formula "38") (term "0"))
                                                      (rule "mul_literals" (formula "38") (term "0,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "38"))
                                                      (rule "polySimp_mulComm0" (formula "38") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "38") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0"))
                                                      (rule "mul_literals" (formula "38") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "38") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "38") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "38") (term "0"))
                                                      (rule "add_literals" (formula "38") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "38") (term "1,0"))
                                                      (rule "add_zero_right" (formula "38") (term "0"))
                                                      (rule "leq_literals" (formula "38"))
                                                      (rule "closeFalse" (formula "38"))
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                    (branch "CUT: j_0 * 2 > genHash(self.table[j_0 * 2], pow(2, i_2_0)) FALSE"
                                       (rule "instAll" (formula "2") (term "0,0,0") (ifseqformula "26") (userinteraction))
                                       (rule "cut_direct" (formula "2") (term "1,0,1") (userinteraction))
                                       (branch "CUT: j_0 * 2 < genHash(self.table[j_0 * 2], pow(2, i_2_0)) TRUE"
                                          (rule "doubleImpLeft" (formula "3") (userinteraction))
                                          (branch "Case 1"
                                              (builtin "One Step Simplification" (formula "4"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")))
                                             (rule "true_left" (formula "3"))
                                             (rule "andLeft" (formula "2"))
                                             (rule "andLeft" (formula "2"))
                                             (rule "replace_known_left" (formula "41") (term "1") (ifseqformula "2"))
                                              (builtin "One Step Simplification" (formula "41"))
                                             (rule "inEqSimp_gtRight" (formula "42"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "1") (term "0"))
                                             (rule "inEqSimp_ltRight" (formula "42"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "1") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "18"))
                                             (rule "mul_literals" (formula "18") (term "1,0,0"))
                                             (rule "add_literals" (formula "18") (term "0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,1"))
                                             (rule "inEqSimp_gtToGeq" (formula "11") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "9"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "9") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "41"))
                                             (rule "polySimp_mulComm0" (formula "41") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "41") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "12") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "29") (term "0,1,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulAssoc" (formula "29") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "29") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "26"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "26") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0,0,1"))
                                             (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "21"))
                                             (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "21") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "3"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "29") (term "0,1,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,1,0,0,1,1,0"))
                                             (rule "inEqSimp_gtToGeq" (formula "28") (term "1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "28") (term "0,1,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "29") (term "0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_mulAssoc" (formula "29") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "29") (term "0,1,0,0,0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0,1,1"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0,1,1"))
                                             (rule "inEqSimp_ltToLeq" (formula "5"))
                                             (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "5") (term "0"))
                                             (rule "applyEq" (formula "5") (term "0,0,1,0") (ifseqformula "24"))
                                             (rule "applyEq" (formula "2") (term "0,0,1,0") (ifseqformula "6"))
                                             (rule "applyEq" (formula "3") (term "0,0,1,0") (ifseqformula "6"))
                                             (rule "jmod_axiom" (formula "10") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "1,0"))
                                             (rule "jmod_axiom" (formula "40") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "40") (term "1,0"))
                                             (rule "Query_axiom_for_maskNull_java_lang_Object__in_java_util_VerifiedIdentityHashMap" (formula "6") (term "1") (inst "maskNull_sk=maskNull_sk_0") (inst "#p0=o_1") (inst "#res=o"))
                                             (rule "eqSymm" (formula "6") (term "1,0,1"))
                                             (rule "polySimp_sepNegMonomial" (formula "11"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                             (rule "polySimp_sepNegMonomial" (formula "41"))
                                             (rule "polySimp_mulLiterals" (formula "41") (term "0"))
                                             (rule "Query_axiom_for_maskNull_java_lang_Object__in_java_util_VerifiedIdentityHashMap" (formula "2") (term "0,0,1,0") (inst "maskNull_sk=maskNull_sk_1") (inst "#p0=o_1") (inst "#res=o"))
                                             (rule "eqSymm" (formula "2") (term "1,0,1"))
                                             (rule "Query_axiom_for_maskNull_java_lang_Object__in_java_util_VerifiedIdentityHashMap" (formula "4") (term "0,0,1,0") (inst "maskNull_sk=maskNull_sk_2") (inst "#p0=o_1") (inst "#res=o"))
                                             (rule "eqSymm" (formula "4") (term "1,0,1"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "21"))
                                             (rule "mul_literals" (formula "21") (term "1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,1"))
                                             (rule "mul_literals" (formula "14") (term "0,1,0,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0,1"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "14") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "14") (term "0,0"))
                                             (rule "polySimp_elimOne" (formula "14") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                             (rule "polySimp_elimOne" (formula "12") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "31") (term "0,1,0,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "43"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "0"))
                                             (rule "polySimp_elimOne" (formula "43") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "20") (term "0,1,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "15") (term "0,0"))
                                             (rule "polySimp_elimOne" (formula "15") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "31") (term "0,1,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "31") (term "0,1,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "31") (term "0,1,1,0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "30") (term "0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "30") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "28"))
                                             (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                             (rule "polySimp_elimOne" (formula "28") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0,0,1"))
                                             (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "31") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "24"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                             (rule "polySimp_elimOne" (formula "24") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,1,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "31") (term "1,0,1,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "31") (term "1,0,1,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "31") (term "0,1,0,1,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,1,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "31") (term "1,1,0,1,0,0,1,1,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "30") (term "1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "30") (term "0,1,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "31") (term "1,0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "31") (term "1,0,1,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "31") (term "0,1,0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0,1,1"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,1,1"))
                                             (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0,1,1"))
                                             (rule "mul_literals" (formula "15") (term "0,1,0,0,0,1,1"))
                                             (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0,1,1"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                             (rule "polySimp_elimOne" (formula "7") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                             (rule "polySimp_elimOne" (formula "3") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                             (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                             (rule "polySimp_elimOne" (formula "5") (term "0"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "7"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                             (rule "add_literals" (formula "1") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "1") (term "1,0"))
                                             (rule "add_zero_right" (formula "1") (term "0"))
                                             (rule "leq_literals" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                          (branch "Case 2"
                                              (builtin "One Step Simplification" (formula "4"))
                                              (builtin "One Step Simplification" (formula "1"))
                                              (builtin "One Step Simplification" (formula "40"))
                                             (rule "true_left" (formula "3"))
                                             (rule "andLeft" (formula "2"))
                                             (rule "notRight" (formula "40"))
                                             (rule "andLeft" (formula "3"))
                                             (rule "inEqSimp_gtRight" (formula "42"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "1") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "12") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0,1,0"))
                                             (rule "inEqSimp_gtToGeq" (formula "11") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "29") (term "0,1,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_gtToGeq" (formula "28") (term "1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "28") (term "0,1,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "29") (term "0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_mulAssoc" (formula "29") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "29") (term "0,1,0,0,0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "9"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "9") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "3"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "18"))
                                             (rule "mul_literals" (formula "18") (term "1,0,0"))
                                             (rule "add_literals" (formula "18") (term "0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "29") (term "0,1,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,1,0,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0,1,1"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0,1,1"))
                                             (rule "inEqSimp_ltToLeq" (formula "41"))
                                             (rule "polySimp_mulComm0" (formula "41") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "41") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0,0,1"))
                                             (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,1"))
                                             (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulAssoc" (formula "29") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "29") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "21"))
                                             (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "21") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "26"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "26") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "5"))
                                             (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "5") (term "0"))
                                             (rule "applyEq" (formula "3") (term "0,0,1,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "1") (term "0,0,1,0") (ifseqformula "6"))
                                             (rule "applyEq" (formula "2") (term "0") (ifseqformula "6"))
                                             (rule "applyEq" (formula "5") (term "0,0,1,0") (ifseqformula "24"))
                                             (rule "applyEq" (formula "6") (term "1") (ifseqformula "2"))
                                             (rule "applyEq" (formula "1") (term "0,0,1,0") (ifseqformula "2"))
                                             (rule "jmod_axiom" (formula "40") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "40") (term "1,0"))
                                             (rule "jmod_axiom" (formula "10") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "1,0"))
                                             (rule "polySimp_sepNegMonomial" (formula "40"))
                                             (rule "polySimp_mulLiterals" (formula "40") (term "0"))
                                             (rule "polySimp_sepNegMonomial" (formula "10"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                             (rule "Query_axiom_for_maskNull_java_lang_Object__in_java_util_VerifiedIdentityHashMap" (formula "2") (term "0") (inst "maskNull_sk=maskNull_sk_0") (inst "#p0=o_1") (inst "#res=o"))
                                             (rule "eqSymm" (formula "2") (term "1,0,1"))
                                             (rule "applyEqRigid" (formula "2") (term "1,1,0,1") (ifseqformula "3"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "0,0"))
                                             (rule "polySimp_elimOne" (formula "13") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "30") (term "0,1,0,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0,0,0,0,1,1,0"))
                                             (rule "applyEq" (formula "24") (term "0") (ifseqformula "25"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "18") (term "0,1,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0,1,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "12") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "0,0"))
                                             (rule "polySimp_elimOne" (formula "12") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "29") (term "1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "29") (term "0,1,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "28") (term "0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "28") (term "1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "28") (term "0,1,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "28") (term "0,1,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "29") (term "1,0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "29") (term "1,0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,1,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "29") (term "0,1,0,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                             (rule "polySimp_elimOne" (formula "10") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "29") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "19"))
                                             (rule "mul_literals" (formula "19") (term "1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "28") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,1,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "29") (term "1,0,1,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "29") (term "1,0,1,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "29") (term "0,1,0,1,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,1,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "29") (term "1,1,0,1,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,1,1"))
                                             (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,1"))
                                             (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,1,1"))
                                             (rule "mul_literals" (formula "13") (term "0,1,0,0,0,1,1"))
                                             (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,1,1"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "41"))
                                             (rule "polySimp_mulLiterals" (formula "41") (term "0"))
                                             (rule "polySimp_elimOne" (formula "41") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,1"))
                                             (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0,1"))
                                             (rule "mul_literals" (formula "12") (term "0,1,0,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "29") (term "0,1,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "22"))
                                             (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                             (rule "polySimp_elimOne" (formula "22") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "26"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                             (rule "polySimp_elimOne" (formula "26") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                             (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                             (rule "polySimp_elimOne" (formula "4") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                             (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                             (rule "polySimp_elimOne" (formula "6") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "15"))
                                             (rule "leq_literals" (formula "23") (term "0"))
                                              (builtin "One Step Simplification" (formula "23"))
                                             (rule "true_left" (formula "23"))
                                             (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "4"))
                                             (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "1") (term "0,0"))
                                             (rule "qeq_literals" (formula "1") (term "0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "elimGcdLeq" (formula "27") (term "1,0,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                             (rule "sub_literals" (formula "27") (term "0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "27") (term "0,0,0,0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "27") (term "1,1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "27") (term "1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "27") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "27") (term "1,1,0,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "27") (term "1,0,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "27") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "27") (term "0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "27") (term "0,0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "27") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_addComm1" (formula "27") (term "0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "27") (term "0,0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "27") (term "1,1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "27") (term "1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "27") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "qeq_literals" (formula "27") (term "1,0,1,0,0,0,0,0,1,1,0"))
                                              (builtin "One Step Simplification" (formula "27"))
                                             (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "27") (term "0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_addComm1" (formula "27") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "27") (term "0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "add_zero_left" (formula "27") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "27") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "27") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "27") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "leq_literals" (formula "27") (term "0,1,0,0,0,0,0,1,1,0"))
                                              (builtin "One Step Simplification" (formula "27"))
                                             (rule "elimGcdGeq" (formula "12") (term "1,0,0,1,1") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=m") (inst "elimGcd=Z(2(#))"))
                                             (rule "add_zero_right" (formula "12") (term "0,0,0,1,0,1,0,0,1,1"))
                                             (rule "sub_literals" (formula "12") (term "0,0,0,0,0,0,0,1,0,0,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,1,0,0,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,1,0,0,1,1"))
                                             (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0,0,1,0,0,1,1"))
                                             (rule "times_zero_1" (formula "12") (term "0,0,0,1,0,1,0,0,1,1"))
                                             (rule "add_zero_right" (formula "12") (term "0,0,0,0,0,1,0,0,1,1"))
                                             (rule "add_zero_left" (formula "12") (term "0,0,1,0,1,0,0,1,1"))
                                             (rule "add_zero_right" (formula "12") (term "0,0,0,0,0,1,0,0,1,1"))
                                             (rule "polySimp_pullOutFactor0" (formula "12") (term "0,1,0,1,0,0,1,1"))
                                             (rule "add_literals" (formula "12") (term "1,0,1,0,1,0,0,1,1"))
                                             (rule "times_zero_1" (formula "12") (term "0,1,0,1,0,0,1,1"))
                                             (rule "leq_literals" (formula "12") (term "1,0,1,0,0,1,1"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0,1,0,0,1,1"))
                                             (rule "add_literals" (formula "12") (term "1,1,0,0,1,0,0,1,1"))
                                             (rule "times_zero_1" (formula "12") (term "1,0,0,1,0,0,1,1"))
                                             (rule "add_zero_right" (formula "12") (term "0,0,1,0,0,1,1"))
                                             (rule "qeq_literals" (formula "12") (term "0,1,0,0,1,1"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "elimGcdLeq" (formula "27") (term "0,1,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                             (rule "mul_literals" (formula "27") (term "0,0,0,0,0,1,0,0,1,0,0,0,1,1,0"))
                                             (rule "sub_literals" (formula "27") (term "0,0,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0,0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "27") (term "1,1,0,0,0,0,1,0,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,1,0,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "27") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "27") (term "1,1,0,1,0,0,1,0,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "27") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "27") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0,0,1,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0,0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "27") (term "0,0,1,0,0,1,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "27") (term "0,0,0,1,0,0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0,0,1,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "27") (term "0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "27") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_addComm1" (formula "27") (term "0,0,1,0,0,1,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "27") (term "0,0,0,1,0,0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "27") (term "1,1,0,1,0,0,1,0,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "27") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "27") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                             (rule "qeq_literals" (formula "27") (term "1,0,0,1,0,0,0,1,1,0"))
                                              (builtin "One Step Simplification" (formula "27"))
                                             (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_addComm1" (formula "27") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "27") (term "0,0,0,0,0,1,0,0,0,1,1,0"))
                                             (rule "add_zero_left" (formula "27") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "27") (term "0,0,0,1,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "27") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "27") (term "0,0,0,1,0,0,0,1,1,0"))
                                             (rule "leq_literals" (formula "27") (term "0,0,1,0,0,0,1,1,0"))
                                              (builtin "One Step Simplification" (formula "27"))
                                             (rule "elimGcdGeq" (formula "27") (term "1,1,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                             (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,0,1,1,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "27") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0,1,1,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "27") (term "0,0,0,0,0,1,1,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "27") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                                             (rule "sub_literals" (formula "27") (term "0,0,0,0,0,0,1,1,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0,1,1,0,0,1,1,0"))
                                             (rule "add_zero_left" (formula "27") (term "0,0,1,0,1,1,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "27") (term "0,0,0,0,0,1,1,0,0,1,1,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "27") (term "0,1,0,1,1,0,0,1,1,0"))
                                             (rule "add_literals" (formula "27") (term "1,0,1,0,1,1,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "27") (term "0,1,0,1,1,0,0,1,1,0"))
                                             (rule "leq_literals" (formula "27") (term "1,0,1,1,0,0,1,1,0"))
                                              (builtin "One Step Simplification" (formula "27"))
                                             (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,0,1,1,0,0,1,1,0"))
                                             (rule "add_literals" (formula "27") (term "1,1,0,0,1,1,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "27") (term "1,0,0,1,1,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "27") (term "0,0,1,1,0,0,1,1,0"))
                                             (rule "qeq_literals" (formula "27") (term "0,1,1,0,0,1,1,0"))
                                              (builtin "One Step Simplification" (formula "27"))
                                             (rule "elimGcdGeq" (formula "27") (term "0,1,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                             (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "27") (term "0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "27") (term "0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "sub_literals" (formula "27") (term "0,0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "27") (term "0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "27") (term "0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "add_zero_left" (formula "27") (term "0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "27") (term "1,1,0,0,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "27") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "qeq_literals" (formula "27") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                              (builtin "One Step Simplification" (formula "27"))
                                             (rule "polySimp_pullOutFactor0" (formula "27") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "27") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "27") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "leq_literals" (formula "27") (term "0,0,1,0,0,0,0,1,1,0"))
                                              (builtin "One Step Simplification" (formula "27"))
                                             (rule "newSym_eq" (formula "38") (inst "l=l_0") (inst "newSymDef=mul(result_1, Z(0(#)))"))
                                             (rule "times_zero_1" (formula "38") (term "1,1"))
                                             (rule "add_zero_right" (formula "38") (term "1"))
                                             (rule "applyEq" (formula "39") (term "0,0") (ifseqformula "38"))
                                             (rule "eqSymm" (formula "39"))
                                             (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "39"))
                                             (rule "inEqSimp_homoInEq0" (formula "11") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                             (rule "applyEq" (formula "40") (term "1,1") (ifseqformula "39"))
                                             (rule "applyEq" (formula "12") (term "1,1,0,0,0,1") (ifseqformula "39"))
                                             (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "39"))
                                             (rule "inEqSimp_homoInEq1" (formula "12") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                             (rule "applyEq" (formula "41") (term "0") (ifseqformula "39"))
                                             (rule "applyEq" (formula "11") (term "1,1,0,0,1") (ifseqformula "39"))
                                             (rule "applyEq" (formula "38") (term "0,0") (ifseqformula "39"))
                                             (rule "applyEq" (formula "37") (term "1") (ifseqformula "39"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                             (rule "mul_literals" (formula "11") (term "0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0"))
                                             (rule "mul_literals" (formula "12") (term "0,1,0"))
                                             (rule "elimGcdGeq_antec" (formula "41") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                             (rule "leq_literals" (formula "41") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "41"))
                                             (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "41") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_addLiterals" (formula "41") (term "0,0,0,0"))
                                             (rule "add_zero_right" (formula "41") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,0"))
                                             (rule "add_literals" (formula "41") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "41") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "41") (term "0,0"))
                                             (rule "leq_literals" (formula "41") (term "0"))
                                              (builtin "One Step Simplification" (formula "41"))
                                             (rule "elimGcdGeq" (formula "11") (term "1,0,0,1") (inst "elimGcdRightDiv=l_0") (inst "elimGcdLeftDiv=n") (inst "elimGcd=Z(2(#))"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,1,0,0,1"))
                                             (rule "mul_literals" (formula "11") (term "0,0,0,0,0,1,0,1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,1,0,0,1"))
                                             (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0,0,1,0,0,1"))
                                             (rule "sub_literals" (formula "11") (term "0,0,0,0,0,0,0,1,0,0,1"))
                                             (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,1,0,1,0,0,1"))
                                             (rule "add_literals" (formula "11") (term "1,1,0,1,0,1,0,0,1"))
                                             (rule "times_zero_1" (formula "11") (term "1,0,1,0,1,0,0,1"))
                                             (rule "add_zero_right" (formula "11") (term "0,1,0,1,0,0,1"))
                                             (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0,0,1,0,0,1"))
                                             (rule "add_literals" (formula "11") (term "1,1,0,0,0,1,0,0,1"))
                                             (rule "times_zero_1" (formula "11") (term "1,0,0,0,1,0,0,1"))
                                             (rule "add_zero_right" (formula "11") (term "0,0,0,1,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0,1,0,0,1"))
                                             (rule "polySimp_pullOutFactor0" (formula "11") (term "0,1,0,1,0,0,1"))
                                             (rule "add_literals" (formula "11") (term "1,0,1,0,1,0,0,1"))
                                             (rule "times_zero_1" (formula "11") (term "0,1,0,1,0,0,1"))
                                             (rule "leq_literals" (formula "11") (term "1,0,1,0,0,1"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,1,0,0,1"))
                                             (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0,1,0,0,1"))
                                             (rule "add_literals" (formula "11") (term "1,1,0,0,1,0,0,1"))
                                             (rule "times_zero_1" (formula "11") (term "1,0,0,1,0,0,1"))
                                             (rule "add_zero_right" (formula "11") (term "0,0,1,0,0,1"))
                                             (rule "qeq_literals" (formula "11") (term "0,1,0,0,1"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "elimGcdGeq" (formula "12") (term "1,0,0,0,1") (inst "elimGcdRightDiv=l_0") (inst "elimGcdLeftDiv=n") (inst "elimGcd=Z(2(#))"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,1,0,0,0,1"))
                                             (rule "mul_literals" (formula "12") (term "0,0,0,0,0,1,0,1,0,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,1,0,0,0,1"))
                                             (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0,0,1,0,0,0,1"))
                                             (rule "sub_literals" (formula "12") (term "0,0,0,0,0,0,0,1,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,1,0,1,0,0,0,1"))
                                             (rule "add_literals" (formula "12") (term "1,1,0,1,0,1,0,0,0,1"))
                                             (rule "times_zero_1" (formula "12") (term "1,0,1,0,1,0,0,0,1"))
                                             (rule "add_zero_right" (formula "12") (term "0,1,0,1,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0,0,1,0,0,0,1"))
                                             (rule "add_literals" (formula "12") (term "1,1,0,0,0,1,0,0,0,1"))
                                             (rule "times_zero_1" (formula "12") (term "1,0,0,0,1,0,0,0,1"))
                                             (rule "add_zero_right" (formula "12") (term "0,0,0,1,0,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "0,0,1,0,1,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor0" (formula "12") (term "0,1,0,1,0,0,0,1"))
                                             (rule "add_literals" (formula "12") (term "1,0,1,0,1,0,0,0,1"))
                                             (rule "times_zero_1" (formula "12") (term "0,1,0,1,0,0,0,1"))
                                             (rule "leq_literals" (formula "12") (term "1,0,1,0,0,0,1"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,1,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0,1,0,0,0,1"))
                                             (rule "add_literals" (formula "12") (term "1,1,0,0,1,0,0,0,1"))
                                             (rule "times_zero_1" (formula "12") (term "1,0,0,1,0,0,0,1"))
                                             (rule "add_zero_right" (formula "12") (term "0,0,1,0,0,0,1"))
                                             (rule "qeq_literals" (formula "12") (term "0,1,0,0,0,1"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "newSym_eq" (formula "10") (inst "l=l_1") (inst "newSymDef=mul(i_0, Z(0(#)))"))
                                             (rule "times_zero_1" (formula "10") (term "1,1"))
                                             (rule "add_zero_right" (formula "10") (term "1"))
                                             (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "10"))
                                             (rule "eqSymm" (formula "11"))
                                             (rule "applyEqRigid" (formula "10") (term "0,0") (ifseqformula "11"))
                                             (rule "applyEqRigid" (formula "13") (term "1,1,0,0,0,1,1") (ifseqformula "11"))
                                             (rule "applyEqRigid" (formula "12") (term "1,1,0,0,0,1") (ifseqformula "11"))
                                             (rule "applyEq" (formula "7") (term "0,2,0") (ifseqformula "11"))
                                             (rule "applyEq" (formula "8") (term "0") (ifseqformula "11"))
                                             (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "11"))
                                             (rule "inEqSimp_homoInEq1" (formula "12") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                             (rule "applyEqRigid" (formula "9") (term "1,1") (ifseqformula "11"))
                                             (rule "applyEqRigid" (formula "13") (term "0,0") (ifseqformula "11"))
                                             (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0"))
                                             (rule "mul_literals" (formula "12") (term "0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0"))
                                             (rule "mul_literals" (formula "13") (term "0,1,0"))
                                             (rule "elimGcdGeq_antec" (formula "8") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                             (rule "leq_literals" (formula "8") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "8"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_addLiterals" (formula "8") (term "0,0,0,0"))
                                             (rule "add_zero_right" (formula "8") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                             (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "8") (term "0,0"))
                                             (rule "leq_literals" (formula "8") (term "0"))
                                              (builtin "One Step Simplification" (formula "8"))
                                             (rule "elimGcdLeq" (formula "12") (term "0,0,0,1") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_1)") (inst "elimGcdLeftDiv=n") (inst "elimGcd=Z(2(#))"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,0,0,0,1"))
                                             (rule "mul_literals" (formula "12") (term "0,0,0,0,0,1,0,0,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,0,0,0,1"))
                                             (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0,0,0,0,0,1"))
                                             (rule "sub_literals" (formula "12") (term "0,0,0,0,0,0,0,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,1,0,0,0,0,1"))
                                             (rule "add_literals" (formula "12") (term "1,1,0,1,0,0,0,0,1"))
                                             (rule "times_zero_1" (formula "12") (term "1,0,1,0,0,0,0,1"))
                                             (rule "add_zero_right" (formula "12") (term "0,1,0,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0,0,0,0,0,1"))
                                             (rule "add_literals" (formula "12") (term "1,1,0,0,0,0,0,0,1"))
                                             (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0,0,1"))
                                             (rule "add_zero_right" (formula "12") (term "0,0,0,0,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "12") (term "0,0,1,0,0,0,0,1"))
                                             (rule "mul_literals" (formula "12") (term "0,0,0,1,0,0,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0,0,0,1"))
                                             (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "12") (term "0,1,0,0,0,0,1"))
                                             (rule "polySimp_addComm1" (formula "12") (term "0,0,1,0,0,0,0,1"))
                                             (rule "add_literals" (formula "12") (term "0,0,0,1,0,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,1,0,0,0,0,1"))
                                             (rule "add_literals" (formula "12") (term "1,1,0,1,0,0,0,0,1"))
                                             (rule "times_zero_1" (formula "12") (term "1,0,1,0,0,0,0,1"))
                                             (rule "add_zero_right" (formula "12") (term "0,1,0,0,0,0,1"))
                                             (rule "qeq_literals" (formula "12") (term "1,0,0,0,0,1"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0,0,1"))
                                             (rule "add_literals" (formula "12") (term "0,0,0,0,0,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0,1"))
                                             (rule "polySimp_addComm1" (formula "12") (term "0,0,0,0,0,0,1"))
                                             (rule "add_literals" (formula "12") (term "0,0,0,0,0,0,0,1"))
                                             (rule "add_zero_left" (formula "12") (term "0,0,0,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor0" (formula "12") (term "0,0,0,0,0,1"))
                                             (rule "add_literals" (formula "12") (term "1,0,0,0,0,0,1"))
                                             (rule "times_zero_1" (formula "12") (term "0,0,0,0,0,1"))
                                             (rule "leq_literals" (formula "12") (term "0,0,0,0,1"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "elimGcdLeq" (formula "13") (term "0,0,0,1,1") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_1)") (inst "elimGcdLeftDiv=m") (inst "elimGcd=Z(2(#))"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0,0,0,0,1,1"))
                                             (rule "mul_literals" (formula "13") (term "0,0,0,0,0,1,0,0,0,0,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0,0,0,1,1"))
                                             (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0,0,0,0,0,1,1"))
                                             (rule "sub_literals" (formula "13") (term "0,0,0,0,0,0,0,0,0,0,1,1"))
                                             (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,1,0,0,0,0,1,1"))
                                             (rule "add_literals" (formula "13") (term "1,1,0,1,0,0,0,0,1,1"))
                                             (rule "times_zero_1" (formula "13") (term "1,0,1,0,0,0,0,1,1"))
                                             (rule "add_zero_right" (formula "13") (term "0,1,0,0,0,0,1,1"))
                                             (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0,0,0,0,0,1,1"))
                                             (rule "add_literals" (formula "13") (term "1,1,0,0,0,0,0,0,1,1"))
                                             (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0,0,1,1"))
                                             (rule "add_zero_right" (formula "13") (term "0,0,0,0,0,0,1,1"))
                                             (rule "polySimp_rightDist" (formula "13") (term "0,0,1,0,0,0,0,1,1"))
                                             (rule "mul_literals" (formula "13") (term "0,0,0,1,0,0,0,0,1,1"))
                                             (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0,0,0,1,1"))
                                             (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0,0,0,1,1"))
                                             (rule "polySimp_addAssoc" (formula "13") (term "0,1,0,0,0,0,1,1"))
                                             (rule "polySimp_addComm1" (formula "13") (term "0,0,1,0,0,0,0,1,1"))
                                             (rule "add_literals" (formula "13") (term "0,0,0,1,0,0,0,0,1,1"))
                                             (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,1,0,0,0,0,1,1"))
                                             (rule "add_literals" (formula "13") (term "1,1,0,1,0,0,0,0,1,1"))
                                             (rule "times_zero_1" (formula "13") (term "1,0,1,0,0,0,0,1,1"))
                                             (rule "add_zero_right" (formula "13") (term "0,1,0,0,0,0,1,1"))
                                             (rule "qeq_literals" (formula "13") (term "1,0,0,0,0,1,1"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0,0,1,1"))
                                             (rule "add_literals" (formula "13") (term "0,0,0,0,0,0,0,1,1"))
                                             (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0,1,1"))
                                             (rule "polySimp_addComm1" (formula "13") (term "0,0,0,0,0,0,1,1"))
                                             (rule "add_literals" (formula "13") (term "0,0,0,0,0,0,0,1,1"))
                                             (rule "add_zero_left" (formula "13") (term "0,0,0,0,0,0,1,1"))
                                             (rule "polySimp_pullOutFactor0" (formula "13") (term "0,0,0,0,0,1,1"))
                                             (rule "add_literals" (formula "13") (term "1,0,0,0,0,0,1,1"))
                                             (rule "times_zero_1" (formula "13") (term "0,0,0,0,0,1,1"))
                                             (rule "leq_literals" (formula "13") (term "0,0,0,0,1,1"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "elimGcdGeq" (formula "13") (term "0") (inst "elimGcdRightDiv=add(Z(1(#)), l_1)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0,0"))
                                             (rule "mul_literals" (formula "13") (term "0,0,0,0,0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0"))
                                             (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0,0,0"))
                                             (rule "sub_literals" (formula "13") (term "0,0,0,0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,1,0,0"))
                                             (rule "add_literals" (formula "13") (term "1,1,0,1,0,0"))
                                             (rule "times_zero_1" (formula "13") (term "1,0,1,0,0"))
                                             (rule "add_zero_right" (formula "13") (term "0,1,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "13") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "13") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "13") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "13") (term "0,0,1,0,0"))
                                             (rule "mul_literals" (formula "13") (term "0,0,0,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "13") (term "0,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "13") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,1,0,0"))
                                             (rule "add_literals" (formula "13") (term "1,1,0,1,0,0"))
                                             (rule "times_zero_1" (formula "13") (term "1,0,1,0,0"))
                                             (rule "add_zero_right" (formula "13") (term "0,1,0,0"))
                                             (rule "leq_literals" (formula "13") (term "1,0,0"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "13") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "13") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "13") (term "0,0,0"))
                                             (rule "add_literals" (formula "13") (term "1,0,0,0"))
                                             (rule "times_zero_1" (formula "13") (term "0,0,0"))
                                             (rule "qeq_literals" (formula "13") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "elimGcdLeq" (formula "12") (term "0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_1)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,0"))
                                             (rule "mul_literals" (formula "12") (term "0,0,0,0,0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,0"))
                                             (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0,0,0"))
                                             (rule "sub_literals" (formula "12") (term "0,0,0,0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,1,0,0"))
                                             (rule "add_literals" (formula "12") (term "1,1,0,1,0,0"))
                                             (rule "times_zero_1" (formula "12") (term "1,0,1,0,0"))
                                             (rule "add_zero_right" (formula "12") (term "0,1,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "12") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "12") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "12") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "12") (term "0,0,1,0,0"))
                                             (rule "mul_literals" (formula "12") (term "0,0,0,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "12") (term "0,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "12") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,1,0,0"))
                                             (rule "add_literals" (formula "12") (term "1,1,0,1,0,0"))
                                             (rule "times_zero_1" (formula "12") (term "1,0,1,0,0"))
                                             (rule "add_zero_right" (formula "12") (term "0,1,0,0"))
                                             (rule "qeq_literals" (formula "12") (term "1,0,0"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "12") (term "0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "12") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "12") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "12") (term "0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "12") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "12") (term "0,0,0"))
                                             (rule "add_literals" (formula "12") (term "1,0,0,0"))
                                             (rule "times_zero_1" (formula "12") (term "0,0,0"))
                                             (rule "leq_literals" (formula "12") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "16"))
                                             (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                                             (rule "mul_literals" (formula "22") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "22") (term "0"))
                                             (rule "add_literals" (formula "22") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                             (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                             (rule "polySimp_elimOne" (formula "22") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "42") (ifseqformula "16"))
                                             (rule "polySimp_rightDist" (formula "42") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0"))
                                             (rule "mul_literals" (formula "42") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "42") (term "0"))
                                             (rule "add_literals" (formula "42") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "42"))
                                             (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                             (rule "elimGcdLeq_antec" (formula "42") (inst "elimGcdRightDiv=Z(1(1(9(0(7(8(6(3(5(#))))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                             (rule "leq_literals" (formula "42") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "42"))
                                             (rule "neg_literal" (formula "42") (term "0,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0"))
                                             (rule "mul_literals" (formula "42") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_addLiterals" (formula "42") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "42") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "42") (term "0,0"))
                                             (rule "add_literals" (formula "42") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "42") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "42") (term "0,0"))
                                             (rule "qeq_literals" (formula "42") (term "0"))
                                              (builtin "One Step Simplification" (formula "42"))
                                             (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "16"))
                                             (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                                             (rule "mul_literals" (formula "9") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "9") (term "0"))
                                             (rule "add_literals" (formula "9") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                                             (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                             (rule "elimGcdLeq_antec" (formula "9") (inst "elimGcdRightDiv=Z(1(1(9(0(7(8(6(3(5(#))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                             (rule "leq_literals" (formula "9") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "9"))
                                             (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,0,0"))
                                             (rule "neg_literal" (formula "9") (term "0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_addLiterals" (formula "9") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "9") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                                             (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "9") (term "0,0"))
                                             (rule "qeq_literals" (formula "9") (term "0"))
                                              (builtin "One Step Simplification" (formula "9"))
                                             (rule "boxToDiamond" (formula "1") (term "1"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "nnf_imp2or" (formula "17") (term "1,0"))
                                             (rule "nnf_imp2or" (formula "18") (term "1,0,1,0"))
                                             (rule "nnf_imp2or" (formula "28") (term "1,0"))
                                             (rule "nnf_imp2or" (formula "29") (term "0"))
                                             (rule "commute_and" (formula "18") (term "0,0"))
                                             (rule "commute_and" (formula "28") (term "0,0"))
                                             (rule "jdiv_axiom" (formula "20") (term "1,0"))
                                             (rule "eqSymm" (formula "20"))
                                             (rule "inEqSimp_subsumption1" (formula "20") (term "0,0") (ifseqformula "15"))
                                             (rule "leq_literals" (formula "20") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "eqSymm" (formula "20"))
                                             (rule "applyEqRigid" (formula "30") (term "1,1,0,0,0,0") (ifseqformula "20"))
                                             (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "20"))
                                             (rule "applyEqRigid" (formula "29") (term "1,1,1,0,0") (ifseqformula "20"))
                                             (rule "applyEq" (formula "27") (term "0") (ifseqformula "20"))
                                             (rule "applyEqRigid" (formula "18") (term "1,1,1,0,0") (ifseqformula "20"))
                                             (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "20"))
                                             (rule "applyEq" (formula "17") (term "1,1,0,0,0") (ifseqformula "20"))
                                             (rule "applyEq" (formula "18") (term "1,1,0,0,0,1,0") (ifseqformula "20"))
                                             (rule "nnf_imp2or" (formula "13") (term "0,1,1"))
                                             (rule "nnf_imp2or" (formula "13") (term "0,0,1"))
                                             (rule "nnf_imp2or" (formula "12") (term "0,1"))
                                             (rule "nnf_imp2or" (formula "30") (term "1,0"))
                                             (rule "nnf_imp2or" (formula "29") (term "0"))
                                             (rule "nnf_imp2or" (formula "17") (term "0"))
                                             (rule "nnf_imp2or" (formula "18") (term "0"))
                                             (rule "nnf_notAnd" (formula "30") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "30") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "30") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "30") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
                                             (rule "mul_literals" (formula "30") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "30") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "30") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "30") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "30") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "30") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "29") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "29") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "29") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "29") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0"))
                                             (rule "mul_literals" (formula "29") (term "1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "29") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "29") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "17") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "17") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "17") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "17") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "17") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                             (rule "mul_literals" (formula "17") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "18") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "18") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                             (rule "mul_literals" (formula "18") (term "1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "12") (term "0,0,1"))
                                             (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,1"))
                                             (rule "mul_literals" (formula "12") (term "0,1,1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,1"))
                                             (rule "inEqSimp_notLeq" (formula "12") (term "0,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0,1"))
                                             (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0,1"))
                                             (rule "add_literals" (formula "12") (term "0,0,0,0,0,0,1"))
                                             (rule "add_zero_left" (formula "12") (term "0,0,0,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "12") (term "1,0,0,0,1"))
                                             (rule "nnf_notAnd" (formula "30") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "30"))
                                             (rule "inEqSimp_notGeq" (formula "30") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,1,0,1,0"))
                                             (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,1,0"))
                                             (rule "add_literals" (formula "30") (term "0,0,0,1,0,1,0"))
                                             (rule "add_zero_left" (formula "30") (term "0,0,1,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,1,0"))
                                             (rule "nnf_notAnd" (formula "29") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "29"))
                                             (rule "inEqSimp_notLeq" (formula "29") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,1,0,1,0"))
                                             (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,1,0"))
                                             (rule "add_literals" (formula "29") (term "0,0,0,1,0,1,0"))
                                             (rule "add_zero_left" (formula "29") (term "0,0,1,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,1,0"))
                                             (rule "nnf_imp2or" (formula "18") (term "0,1,0"))
                                             (rule "nnf_notAnd" (formula "13") (term "0,0,1,1"))
                                             (rule "inEqSimp_notLeq" (formula "13") (term "0,0,0,1,1"))
                                             (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0,1,1"))
                                             (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0,1,1"))
                                             (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0,1,1"))
                                             (rule "add_literals" (formula "13") (term "0,0,0,0,0,0,1,1"))
                                             (rule "add_zero_left" (formula "13") (term "0,0,0,0,0,1,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,1,1"))
                                             (rule "polySimp_elimOne" (formula "13") (term "1,0,0,0,1,1"))
                                             (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0,1,1"))
                                             (rule "times_zero_1" (formula "13") (term "1,0,0,1,0,0,1,1"))
                                             (rule "add_zero_right" (formula "13") (term "0,0,1,0,0,1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,1,1"))
                                             (rule "mul_literals" (formula "13") (term "1,1,0,0,1,1"))
                                             (rule "nnf_notAnd" (formula "13") (term "0,0,0,1"))
                                             (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,0,1"))
                                             (rule "mul_literals" (formula "13") (term "0,1,1,0,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,0,1"))
                                             (rule "inEqSimp_notLeq" (formula "13") (term "0,0,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0,0,1"))
                                             (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0,0,1"))
                                             (rule "add_literals" (formula "13") (term "0,0,0,0,0,0,0,1"))
                                             (rule "add_zero_left" (formula "13") (term "0,0,0,0,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "13") (term "1,0,0,0,0,1"))
                                             (rule "nnf_imp2or" (formula "30") (term "0,1,1,0"))
                                             (rule "nnf_imp2or" (formula "29") (term "0,1,1,0"))
                                             (rule "nnf_notAnd" (formula "18") (term "0,0,1,0"))
                                             (rule "inEqSimp_notGeq" (formula "18") (term "1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0,1,0"))
                                             (rule "mul_literals" (formula "18") (term "0,1,1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0,1,0"))
                                             (rule "inEqSimp_notLeq" (formula "18") (term "0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "18") (term "0,0,0,0,0,0,1,0"))
                                             (rule "add_zero_left" (formula "18") (term "0,0,0,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "18") (term "1,0,0,0,1,0"))
                                             (rule "jdiv_axiom" (formula "41") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "41") (term "0,0,2,1"))
                                             (rule "eqSymm" (formula "41"))
                                             (rule "applyEq" (formula "41") (term "1") (ifseqformula "42"))
                                             (rule "inEqSimp_subsumption6" (formula "41") (term "0,0") (ifseqformula "46"))
                                             (rule "times_zero_1" (formula "41") (term "1,1,0,0,0"))
                                             (rule "greater_literals" (formula "41") (term "0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "41"))
                                             (rule "leq_literals" (formula "41") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "41"))
                                             (rule "polyDiv_pullOut" (formula "41") (term "0") (inst "polyDivCoeff=l_0"))
                                             (rule "equal_literals" (formula "41") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "41"))
                                             (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,0"))
                                             (rule "polySimp_homoEq" (formula "41"))
                                             (rule "polySimp_pullOutFactor0" (formula "41") (term "0,0,0,1,0"))
                                             (rule "add_literals" (formula "41") (term "1,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "41") (term "0,0,0,1,0"))
                                             (rule "div_literals" (formula "41") (term "0,0,1,0"))
                                             (rule "add_zero_left" (formula "41") (term "0,1,0"))
                                             (rule "polySimp_pullOutFactor1" (formula "41") (term "0"))
                                             (rule "add_literals" (formula "41") (term "1,0"))
                                             (rule "times_zero_1" (formula "41") (term "0"))
                                              (builtin "One Step Simplification" (formula "41"))
                                             (rule "true_left" (formula "41"))
                                             (rule "nnf_notAnd" (formula "18") (term "0,1,0,1,0"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "nnf_notAnd" (formula "30") (term "0,0,1,1,0"))
                                             (rule "nnf_notAnd" (formula "29") (term "0,0,1,1,0"))
                                             (rule "inEqSimp_notGeq" (formula "29") (term "1,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "29") (term "0,1,1,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0,1,1,0"))
                                             (rule "inEqSimp_notLeq" (formula "29") (term "0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "29") (term "0,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "29") (term "0,0,0,0,0,0,1,1,0"))
                                             (rule "add_zero_left" (formula "29") (term "0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "29") (term "1,0,0,0,1,1,0"))
                                             (rule "jdiv_axiom" (formula "10") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "0,0,2,1"))
                                             (rule "eqSymm" (formula "10"))
                                             (rule "applyEq" (formula "10") (term "1") (ifseqformula "11"))
                                             (rule "inEqSimp_subsumption6" (formula "10") (term "0,0") (ifseqformula "7"))
                                             (rule "greater_literals" (formula "10") (term "0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "10"))
                                             (rule "times_zero_1" (formula "10") (term "1,0,0,0"))
                                             (rule "leq_literals" (formula "10") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "10"))
                                             (rule "polyDiv_pullOut" (formula "10") (term "0") (inst "polyDivCoeff=l_1"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,2,0"))
                                             (rule "equal_literals" (formula "10") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "10"))
                                             (rule "polySimp_homoEq" (formula "10"))
                                             (rule "polySimp_pullOutFactor0" (formula "10") (term "0,0,0,1,0"))
                                             (rule "add_literals" (formula "10") (term "1,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "10") (term "0,0,0,1,0"))
                                             (rule "div_literals" (formula "10") (term "0,0,1,0"))
                                             (rule "add_zero_left" (formula "10") (term "0,1,0"))
                                             (rule "polySimp_pullOutFactor1" (formula "10") (term "0"))
                                             (rule "add_literals" (formula "10") (term "1,0"))
                                             (rule "times_zero_1" (formula "10") (term "0"))
                                              (builtin "One Step Simplification" (formula "10"))
                                             (rule "true_left" (formula "10"))
                                             (rule "nnf_notOr" (formula "30") (term "1,0,0,1,1,0"))
                                             (rule "inEqSimp_notGeq" (formula "30") (term "1,1,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "30") (term "1,0,0,1,1,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "30") (term "0,0,1,1,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,1,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "30") (term "1,1,1,0,0,1,1,0"))
                                             (rule "inEqSimp_notLeq" (formula "30") (term "0,1,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,1,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "30") (term "0,1,0,0,0,1,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,1,0,0,1,1,0"))
                                             (rule "add_literals" (formula "30") (term "0,0,0,0,1,0,0,1,1,0"))
                                             (rule "add_zero_left" (formula "30") (term "0,0,0,1,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "0,1,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "30") (term "1,0,1,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "30") (term "1,0,1,0,0,1,1,0"))
                                             (rule "nnf_notAnd" (formula "30") (term "0,0,0,1,1,0"))
                                             (rule "nnf_notOr" (formula "30") (term "1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_notGeq" (formula "30") (term "1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "1,1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "30") (term "1,1,1,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "30") (term "0,1,1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "30") (term "1,1,1,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_notLeq" (formula "30") (term "0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "30") (term "0,1,0,0,0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,1,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "30") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                             (rule "add_zero_left" (formula "30") (term "0,0,0,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "30") (term "1,0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "30") (term "1,0,1,0,0,0,1,1,0"))
                                             (rule "nnf_notAnd" (formula "30") (term "0,0,0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "17") (term "0"))
                                             (rule "nnf_notOr" (formula "30") (term "1,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_notGeq" (formula "30") (term "0,1,0,0,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "30") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "30") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,1,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "30") (term "1,0,1,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_notGeq" (formula "30") (term "1,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,1,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "1,1,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "30") (term "1,1,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,1,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "30") (term "0,1,1,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "30") (term "1,1,1,1,0,0,0,0,1,1,0"))
                                             (rule "nnf_notOr" (formula "30") (term "0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_notLeq" (formula "30") (term "0,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "30") (term "0,1,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "30") (term "0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "add_zero_left" (formula "30") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "0,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "30") (term "1,0,0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "30") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "add_zero_left" (formula "30") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0,0,0,1,1,0"))
                                             (rule "commute_or" (formula "30") (term "0,0"))
                                             (rule "methodBodyExpand" (formula "46") (term "1") (newnames "heapBefore_maskNull_0,savedHeapBefore_maskNull"))
                                              (builtin "One Step Simplification" (formula "46"))
                                             (rule "commute_or" (formula "12") (term "0,0,1"))
                                             (rule "commute_or" (formula "13") (term "0,0,1,1"))
                                             (rule "commute_or" (formula "13") (term "0,0,0,1"))
                                             (rule "div_axiom" (formula "20") (term "1") (inst "quotient=quotient_0"))
                                             (rule "mul_literals" (formula "20") (term "1,1,1,1,1"))
                                             (rule "qeq_literals" (formula "20") (term "0,1,1"))
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "equal_literals" (formula "20") (term "0"))
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "andLeft" (formula "20"))
                                             (rule "andLeft" (formula "20"))
                                             (rule "polySimp_addComm1" (formula "22") (term "1"))
                                             (rule "add_literals" (formula "22") (term "0,1"))
                                             (rule "inEqSimp_commuteLeq" (formula "21"))
                                             (rule "inEqSimp_homoInEq1" (formula "22"))
                                             (rule "polySimp_mulLiterals" (formula "22") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "22") (term "0"))
                                             (rule "applyEqRigid" (formula "32") (term "1,1,0,0") (ifseqformula "20"))
                                             (rule "applyEq" (formula "18") (term "1,1,0,0") (ifseqformula "20"))
                                             (rule "applyEqRigid" (formula "17") (term "1,0,0,0") (ifseqformula "20"))
                                             (rule "applyEqRigid" (formula "30") (term "0") (ifseqformula "20"))
                                             (rule "inEqSimp_homoInEq1" (formula "30"))
                                             (rule "polySimp_addComm1" (formula "30") (term "0"))
                                             (rule "applyEqRigid" (formula "24") (term "1,0") (ifseqformula "20"))
                                             (rule "applyEq" (formula "33") (term "1,1,0,0") (ifseqformula "20"))
                                             (rule "applyEqRigid" (formula "18") (term "1,0,0,0,1,0") (ifseqformula "20"))
                                             (rule "applyEq" (formula "4") (term "0") (ifseqformula "20"))
                                             (rule "inEqSimp_homoInEq1" (formula "4"))
                                             (rule "polySimp_addComm1" (formula "4") (term "0"))
                                             (rule "applyEqRigid" (formula "23") (term "1") (ifseqformula "20"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "22"))
                                             (rule "polySimp_mulComm0" (formula "22") (term "1"))
                                             (rule "polySimp_rightDist" (formula "22") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                                             (rule "mul_literals" (formula "22") (term "0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "30"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "1"))
                                             (rule "polySimp_rightDist" (formula "30") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "30") (term "1,1"))
                                             (rule "mul_literals" (formula "30") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "30") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                             (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                             (rule "polySimp_rightDist" (formula "4") (term "1"))
                                             (rule "mul_literals" (formula "4") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "47") (ifseqformula "22"))
                                             (rule "polySimp_rightDist" (formula "47") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0"))
                                             (rule "mul_literals" (formula "47") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "47") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "47") (term "0,0"))
                                             (rule "add_literals" (formula "47") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "47") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "47"))
                                             (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                             (rule "elimGcdLeq_antec" (formula "47") (inst "elimGcdRightDiv=quotient_0") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                             (rule "leq_literals" (formula "47") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "47"))
                                             (rule "mul_literals" (formula "47") (term "0,1,0,0,0,0,0"))
                                             (rule "neg_literal" (formula "47") (term "0,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "47") (term "0,0"))
                                             (rule "add_literals" (formula "47") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "47") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "47") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "47") (term "0,0"))
                                             (rule "add_literals" (formula "47") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "47") (term "1,0,0"))
                                             (rule "add_literals" (formula "47") (term "0,0"))
                                             (rule "qeq_literals" (formula "47") (term "0"))
                                              (builtin "One Step Simplification" (formula "47"))
                                             (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "4"))
                                             (rule "times_zero_1" (formula "3") (term "0,0"))
                                             (rule "add_zero_left" (formula "3") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                             (rule "mul_literals" (formula "3") (term "1"))
                                             (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "23"))
                                             (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0"))
                                             (rule "mul_literals" (formula "10") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "10") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                             (rule "add_literals" (formula "10") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "10") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                             (rule "elimGcdLeq_antec" (formula "10") (inst "elimGcdRightDiv=quotient_0") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                             (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "10") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "10"))
                                             (rule "neg_literal" (formula "10") (term "0,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                                             (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "10") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                                             (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                             (rule "add_literals" (formula "10") (term "0,0"))
                                             (rule "qeq_literals" (formula "10") (term "0"))
                                              (builtin "One Step Simplification" (formula "10"))
                                             (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "32"))
                                             (rule "times_zero_1" (formula "31") (term "0,0"))
                                             (rule "add_zero_left" (formula "31") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "31"))
                                             (rule "mul_literals" (formula "31") (term "1"))
                                             (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "18"))
                                             (rule "polySimp_mulAssoc" (formula "23") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "23") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "23") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "23") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                             (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                             (rule "elimGcdLeq_antec" (formula "23") (inst "elimGcdRightDiv=Z(2(1(9(0(7(8(6(3(5(#))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
                                             (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,0,1,0"))
                                             (rule "neg_literal" (formula "23") (term "0,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "23") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "23"))
                                             (rule "mul_literals" (formula "23") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_addLiterals" (formula "23") (term "0,0,0,0"))
                                             (rule "add_zero_right" (formula "23") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0"))
                                             (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                             (rule "add_literals" (formula "23") (term "0,0"))
                                             (rule "qeq_literals" (formula "23") (term "0"))
                                              (builtin "One Step Simplification" (formula "23"))
                                             (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "25"))
                                             (rule "polySimp_rightDist" (formula "30") (term "0,0"))
                                             (rule "mul_literals" (formula "30") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "30") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                                             (rule "add_literals" (formula "30") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "30") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "30"))
                                             (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                             (rule "polySimp_elimOne" (formula "30") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "25"))
                                             (rule "mul_literals" (formula "17") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                             (rule "add_literals" (formula "17") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                             (rule "mul_literals" (formula "17") (term "1"))
                                             (rule "elimGcdGeq_antec" (formula "17") (inst "elimGcdRightDiv=Z(4(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
                                             (rule "leq_literals" (formula "17") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0"))
                                             (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "17") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "17") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0"))
                                             (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                             (rule "add_literals" (formula "17") (term "0,0"))
                                             (rule "leq_literals" (formula "17") (term "0"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "17"))
                                             (rule "leq_literals" (formula "3") (term "0"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "true_left" (formula "3"))
                                             (rule "inEqSimp_exactShadow3" (formula "53") (ifseqformula "51"))
                                             (rule "times_zero_1" (formula "53") (term "0,0"))
                                             (rule "add_zero_left" (formula "53") (term "0"))
                                             (rule "inEqSimp_subsumption1" (formula "53") (ifseqformula "16"))
                                             (rule "leq_literals" (formula "53") (term "0"))
                                              (builtin "One Step Simplification" (formula "53"))
                                             (rule "true_left" (formula "53"))
                                             (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "9"))
                                             (rule "times_zero_1" (formula "7") (term "0,0"))
                                             (rule "add_zero_left" (formula "7") (term "0"))
                                             (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "17"))
                                             (rule "leq_literals" (formula "7") (term "0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "true_left" (formula "7"))
                                             (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "30"))
                                             (rule "times_zero_1" (formula "28") (term "0,0"))
                                             (rule "add_zero_left" (formula "28") (term "0"))
                                             (rule "inEqSimp_subsumption6" (formula "28") (ifseqformula "16"))
                                             (rule "mul_literals" (formula "28") (term "1,1,0"))
                                             (rule "greater_literals" (formula "28") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "28"))
                                             (rule "leq_literals" (formula "28") (term "0"))
                                              (builtin "One Step Simplification" (formula "28"))
                                             (rule "true_left" (formula "28"))
                                             (rule "commute_or_2" (formula "36") (term "0,1,1,0"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "5") (term "1,0") (ifseqformula "39"))
                                             (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "56"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "6") (term "0") (ifseqformula "40"))
                                             (rule "replace_known_left" (formula "6") (term "0") (ifseqformula "7"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "true_left" (formula "6"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "40"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "37") (term "0") (ifseqformula "41"))
                                             (rule "replace_known_left" (formula "37") (term "0") (ifseqformula "38"))
                                              (builtin "One Step Simplification" (formula "37"))
                                             (rule "true_left" (formula "37"))
                                             (rule "commute_or" (formula "21") (term "0,0"))
                                             (rule "cnf_rightDist" (formula "15") (term "0,1"))
                                             (rule "commute_and" (formula "39") (term "1,0,0,1,1,0"))
                                             (rule "shift_paren_or" (formula "22") (term "0,1,0"))
                                             (rule "cnf_rightDist" (formula "16") (term "0,1,1"))
                                             (rule "cnf_rightDist" (formula "16") (term "0,0,1"))
                                             (rule "returnUnfold" (formula "56") (term "1") (inst "#v0=o_2"))
                                             (rule "variableDeclarationAssign" (formula "56") (term "1"))
                                             (rule "variableDeclaration" (formula "56") (term "1") (newnames "o_2"))
                                             (rule "commute_and" (formula "39") (term "0,0,0,0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "21") (term "0"))
                                             (rule "commute_or_2" (formula "15") (term "0,0,1"))
                                             (rule "shift_paren_or" (formula "15") (term "1,0,1"))
                                             (rule "commute_or_2" (formula "22") (term "0,0,1,0"))
                                             (rule "inEqSimp_or_weaken2" (formula "22") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "22") (term "1,0,1,0,1,0"))
                                             (rule "add_literals" (formula "22") (term "0,1,0,1,0,1,0"))
                                             (rule "add_zero_left" (formula "22") (term "1,0,1,0,1,0"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "commute_or_2" (formula "16") (term "0,0,1,1"))
                                             (rule "commute_or_2" (formula "16") (term "0,0,0,1"))
                                             (rule "commute_or" (formula "38") (term "0,0,1,1,0"))
                                             (rule "commute_or" (formula "15") (term "0,0,0,1"))
                                             (rule "commute_or" (formula "22") (term "0,0,1,0"))
                                             (rule "shift_paren_or" (formula "16") (term "1,0,1,1"))
                                             (rule "shift_paren_or" (formula "16") (term "1,0,0,1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "8") (term "0") (ifseqformula "41"))
                                             (rule "replace_known_left" (formula "8") (term "0") (ifseqformula "9"))
                                              (builtin "One Step Simplification" (formula "8"))
                                             (rule "true_left" (formula "8"))
                                             (rule "commute_or" (formula "16") (term "0,0,0,1,1"))
                                             (rule "commute_or" (formula "16") (term "0,0,0,0,1"))
                                             (rule "remove_parentheses_right" (formula "56") (term "1"))
                                             (rule "cnf_rightDist" (formula "39") (term "0,0,0,0,1,1,0"))
                                             (rule "commute_or" (formula "39") (term "0,0,0,0,0,1,1,0"))
                                             (rule "condition" (formula "56") (term "1"))
                                             (rule "cnf_rightDist" (formula "39") (term "1,0,0,0,0,1,1,0"))
                                             (rule "commute_or" (formula "39") (term "0,1,0,0,0,0,1,1,0"))
                                             (rule "cnf_rightDist" (formula "39") (term "0,0,0,0,0,1,1,0"))
                                             (rule "commute_or" (formula "39") (term "1,0,0,0,0,0,1,1,0"))
                                             (rule "all_pull_out3" (formula "38") (term "1,0"))
                                             (rule "shift_paren_or" (formula "38") (term "0,1,0"))
                                             (rule "shift_paren_or" (formula "38") (term "0,0,1,0"))
                                             (rule "commute_or_2" (formula "38") (term "0,0,0,1,0"))
                                             (rule "all_pull_out3" (formula "22") (term "0"))
                                             (rule "shift_paren_or" (formula "22") (term "0,0"))
                                             (rule "shift_paren_or" (formula "22") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "22") (term "0,0,0,0"))
                                             (rule "commute_or" (formula "22") (term "0,0,0,0,0"))
                                             (rule "shift_paren_and" (formula "39") (term "0,0,0,0,1,1,0"))
                                             (rule "cnf_rightDist" (formula "39") (term "0,0,0,1,1,0"))
                                             (rule "commute_or" (formula "39") (term "0,0,0,0,1,1,0"))
                                             (rule "cnf_rightDist" (formula "39") (term "1,0,0,0,1,1,0"))
                                              (builtin "One Step Simplification" (formula "39"))
                                             (rule "cnf_rightDist" (formula "39") (term "0,0,0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "39") (term "1,0,0,0,0,1,1,0"))
                                             (rule "commute_or" (formula "39") (term "0,1,0,0,0,0,1,1,0"))
                                             (rule "cnf_rightDist" (formula "39") (term "0,1,0,0,0,1,1,0"))
                                              (builtin "One Step Simplification" (formula "39"))
                                             (rule "cnf_rightDist" (formula "39") (term "0,0,0,0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "39") (term "1,0,0,0,0,0,1,1,0"))
                                              (builtin "One Step Simplification" (formula "39"))
                                             (rule "all_pull_out3" (formula "38") (term "0"))
                                             (rule "shift_paren_or" (formula "38") (term "0,0"))
                                             (rule "shift_paren_or" (formula "38") (term "0,0,0"))
                                             (rule "shift_paren_or" (formula "38") (term "0,0,0,0"))
                                             (rule "commute_or_2" (formula "38") (term "0,0,0,0,0"))
                                             (rule "commute_or" (formula "38") (term "0,0,0,0,0,0"))
                                             (rule "ifElseUnfold" (formula "56") (term "1") (inst "#boolv=x"))
                                             (rule "variableDeclaration" (formula "56") (term "1") (newnames "x"))
                                             (rule "equality_comparison_simple" (formula "56") (term "1"))
                                              (builtin "One Step Simplification" (formula "56"))
                                             (rule "replace_known_right" (formula "56") (term "0,0,1,0") (ifseqformula "60"))
                                              (builtin "One Step Simplification" (formula "56"))
                                             (rule "cnf_rightDist" (formula "39") (term "0,0,0,0,0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "39") (term "1,0,0,0,0,0,0,1,1,0"))
                                             (rule "cnf_rightDist" (formula "39") (term "0,0,1,0,0,0,1,1,0"))
                                             (rule "commute_or" (formula "39") (term "0,0,0,1,0,0,0,1,1,0"))
                                             (rule "shift_paren_or" (formula "39") (term "0,0,0,0,0,0,0,1,1,0"))
                                             (rule "shift_paren_and" (formula "39") (term "0,0,0,1,1,0"))
                                             (rule "shift_paren_and" (formula "39") (term "0,0,0,0,1,1,0"))
                                             (rule "shift_paren_and" (formula "39") (term "0,0,0,0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "39") (term "0,1,1,0"))
                                             (rule "commute_or" (formula "39") (term "0,0,1,1,0"))
                                             (rule "cnf_rightDist" (formula "39") (term "0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "39") (term "1,0,0,1,1,0"))
                                             (rule "commute_or" (formula "39") (term "0,1,0,0,1,1,0"))
                                             (rule "cnf_rightDist" (formula "39") (term "0,0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "39") (term "1,0,0,0,1,1,0"))
                                             (rule "commute_or" (formula "39") (term "0,1,0,0,0,1,1,0"))
                                             (rule "cnf_rightDist" (formula "39") (term "0,0,0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "39") (term "1,0,0,0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "39") (term "0,1,0,0,0,0,1,1,0"))
                                             (rule "commute_or" (formula "39") (term "0,0,1,0,0,0,0,1,1,0"))
                                             (rule "cnf_rightDist" (formula "39") (term "0,0,0,0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "39") (term "1,0,0,0,0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "39") (term "0,1,0,0,0,0,0,1,1,0"))
                                             (rule "commute_or" (formula "39") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "cnf_rightDist" (formula "39") (term "0,0,0,0,0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "39") (term "1,0,0,0,0,0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "39") (term "0,1,0,0,0,0,0,0,1,1,0"))
                                             (rule "commute_or" (formula "39") (term "0,0,1,0,0,0,0,0,0,1,1,0"))
                                             (rule "allLeft" (formula "21") (inst "t=i_1_0"))
                                             (rule "replace_known_left" (formula "21") (term "0,0,0,0") (ifseqformula "38"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "inEqSimp_contradInEq0" (formula "21") (term "1") (ifseqformula "37"))
                                             (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "21") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "21") (term "0,0,1"))
                                             (rule "polySimp_addComm0" (formula "21") (term "0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1"))
                                             (rule "add_literals" (formula "21") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "21") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "21") (term "0,0,1"))
                                             (rule "leq_literals" (formula "21") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "inEqSimp_contradInEq1" (formula "21") (term "1") (ifseqformula "36"))
                                             (rule "qeq_literals" (formula "21") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "allLeft" (formula "22") (inst "t=j_0"))
                                             (rule "replace_known_left" (formula "22") (term "0,0,0,0") (ifseqformula "7"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "inEqSimp_contradInEq1" (formula "22") (term "1,0") (ifseqformula "4"))
                                             (rule "qeq_literals" (formula "22") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "inEqSimp_contradInEq0" (formula "22") (term "1") (ifseqformula "5"))
                                             (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "22") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "22") (term "0,0,1"))
                                             (rule "polySimp_addComm0" (formula "22") (term "0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1"))
                                             (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "22") (term "0,0,1"))
                                             (rule "leq_literals" (formula "22") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "cnf_rightDist" (formula "41") (term "0,0,0,0,0,0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "41") (term "1,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "ifElseSplit" (formula "58"))
                                             (branch "if x true"
                                                 (builtin "One Step Simplification" (formula "59"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                             (branch "if x false"
                                                 (builtin "One Step Simplification" (formula "59"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "true_left" (formula "1"))
                                                (rule "assignment" (formula "58") (term "1"))
                                                 (builtin "One Step Simplification" (formula "58"))
                                                (rule "blockEmpty" (formula "58") (term "1"))
                                                (rule "methodCallReturn" (formula "58") (term "1"))
                                                (rule "assignment" (formula "58") (term "1"))
                                                 (builtin "One Step Simplification" (formula "58"))
                                                (rule "methodCallEmpty" (formula "58") (term "1"))
                                                (rule "emptyModality" (formula "58") (term "1"))
                                                 (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "62")) (ifInst ""  (formula "46")) (ifInst ""  (formula "62")))
                                                (rule "closeTrue" (formula "58"))
                                             )
                                          )
                                          (branch "Case 3"
                                             (rule "allLeftHide" (formula "3") (inst "t=div(i_0, Z(2(#)))") (userinteraction))
                                              (builtin "One Step Simplification" (formula "5"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "true_left" (formula "4"))
                                             (rule "andLeft" (formula "3"))
                                             (rule "andLeft" (formula "3"))
                                             (rule "inEqSimp_gtRight" (formula "42"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "1") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulAssoc" (formula "29") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "29") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0,1,1"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0,1,1"))
                                             (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,1"))
                                             (rule "inEqSimp_ltToLeq" (formula "3") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "3") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulAssoc" (formula "3") (term "1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0,0,1"))
                                             (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "18"))
                                             (rule "mul_literals" (formula "18") (term "1,0,0"))
                                             (rule "add_literals" (formula "18") (term "0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "29") (term "0,1,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,1,0,0,1,1,0"))
                                             (rule "inEqSimp_gtToGeq" (formula "11") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "26"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "26") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "9"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "9") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "29") (term "0,1,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "21"))
                                             (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "21") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "3") (term "0,1,0,0"))
                                             (rule "polySimp_mulAssoc" (formula "3") (term "1,0,0,0,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,0,0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "29") (term "0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_mulAssoc" (formula "29") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "29") (term "0,1,0,0,0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "12") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                             (rule "inEqSimp_gtToGeq" (formula "28") (term "1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "28") (term "0,1,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "41"))
                                             (rule "polySimp_mulComm0" (formula "41") (term "1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "3") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "41") (term "0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "5"))
                                             (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "5") (term "0"))
                                             (rule "inEqSimp_commuteGeq" (formula "3") (term "1,1,0,0"))
                                             (rule "inEqSimp_commuteGeq" (formula "3") (term "1,1,0,0,0"))
                                             (rule "applyEq" (formula "5") (term "0,0,1,0") (ifseqformula "24"))
                                             (rule "applyEq" (formula "3") (term "0,0,1,1,0,0") (ifseqformula "6"))
                                             (rule "applyEq" (formula "3") (term "0,0,1,1,0,0,0") (ifseqformula "6"))
                                             (rule "applyEq" (formula "2") (term "0,0,1,0") (ifseqformula "6"))
                                             (rule "applyEq" (formula "1") (term "0,0,1,0") (ifseqformula "6"))
                                             (rule "jmod_axiom" (formula "10") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "1,0"))
                                             (rule "applyEq" (formula "23") (term "0") (ifseqformula "24"))
                                             (rule "jmod_axiom" (formula "39") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "39") (term "1,0"))
                                             (rule "Query_axiom_for_maskNull_java_lang_Object__in_java_util_VerifiedIdentityHashMap" (formula "6") (term "1") (inst "maskNull_sk=maskNull_sk_0") (inst "#p0=o_1") (inst "#res=o"))
                                             (rule "eqSymm" (formula "6") (term "1,0,1"))
                                             (rule "polySimp_sepNegMonomial" (formula "11"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                             (rule "polySimp_sepNegMonomial" (formula "40"))
                                             (rule "polySimp_mulLiterals" (formula "40") (term "0"))
                                             (rule "Query_axiom_for_maskNull_java_lang_Object__in_java_util_VerifiedIdentityHashMap" (formula "3") (term "0,0,1,1,0,0") (inst "maskNull_sk=maskNull_sk_1") (inst "#p0=o_1") (inst "#res=o"))
                                             (rule "eqSymm" (formula "3") (term "1,0,1"))
                                             (rule "Query_axiom_for_maskNull_java_lang_Object__in_java_util_VerifiedIdentityHashMap" (formula "4") (term "0,0,1,1,0,0,0") (inst "maskNull_sk=maskNull_sk_2") (inst "#p0=o_1") (inst "#res=o"))
                                             (rule "eqSymm" (formula "4") (term "1,0,1"))
                                             (rule "Query_axiom_for_maskNull_java_lang_Object__in_java_util_VerifiedIdentityHashMap" (formula "2") (term "0,0,1,0") (inst "maskNull_sk=maskNull_sk_3") (inst "#p0=o_1") (inst "#res=o"))
                                             (rule "eqSymm" (formula "2") (term "1,0,1"))
                                             (rule "Query_axiom_for_maskNull_java_lang_Object__in_java_util_VerifiedIdentityHashMap" (formula "1") (term "0,0,1,0") (inst "maskNull_sk=maskNull_sk_4") (inst "#p0=o_1") (inst "#res=o"))
                                             (rule "eqSymm" (formula "1") (term "1,0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "33") (term "0,1,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0,1,1"))
                                             (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,1,1"))
                                             (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,1,1"))
                                             (rule "mul_literals" (formula "17") (term "0,1,0,0,0,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0,1,1"))
                                             (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0,1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "33") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,1"))
                                             (rule "mul_literals" (formula "16") (term "0,1,0,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0,1"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "7") (term "0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "7") (term "0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "32") (term "0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "7") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,1"))
                                             (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "32") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "23"))
                                             (rule "mul_literals" (formula "23") (term "1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,1,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "33") (term "1,0,1,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "33") (term "1,0,1,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,1,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "33") (term "0,1,0,1,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "33") (term "1,1,0,1,0,0,1,1,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "16") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "0,0"))
                                             (rule "polySimp_elimOne" (formula "16") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "30"))
                                             (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                             (rule "polySimp_elimOne" (formula "30") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "14"))
                                             (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                             (rule "polySimp_elimOne" (formula "14") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "22") (term "0,1,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0,1,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "33") (term "1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "33") (term "0,1,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "33") (term "0,1,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "33") (term "0,1,0,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "26"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                             (rule "polySimp_elimOne" (formula "26") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "7") (term "0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "33") (term "1,0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "33") (term "1,0,1,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "33") (term "0,1,0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "17") (term "0,0"))
                                             (rule "polySimp_elimOne" (formula "17") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "32") (term "1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "32") (term "0,1,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "32") (term "0,1,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
                                             (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "45"))
                                             (rule "polySimp_mulLiterals" (formula "45") (term "0"))
                                             (rule "polySimp_elimOne" (formula "45") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "7") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "0,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "7") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                                             (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                             (rule "polySimp_elimOne" (formula "9") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                             (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                             (rule "polySimp_elimOne" (formula "4") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "19"))
                                             (rule "leq_literals" (formula "27") (term "0"))
                                              (builtin "One Step Simplification" (formula "27"))
                                             (rule "true_left" (formula "27"))
                                             (rule "polyDiv_pullOut" (formula "7") (term "0,1,1,0,0,0,0,0") (inst "polyDivCoeff=jdiv(i_0, Z(2(#)))"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,2,0,1,1,0,0,0,0,0"))
                                             (rule "equal_literals" (formula "7") (term "0,0,1,1,0,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0,0,0,0"))
                                             (rule "polySimp_addComm0" (formula "7") (term "1,1,1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "7") (term "0,1,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "7") (term "1,0,0,0,0,0"))
                                             (rule "applyEqRigid" (formula "7") (term "1,0,1,0,0,0,0,0") (ifseqformula "15"))
                                             (rule "elimGcdLeq" (formula "32") (term "0,1,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                             (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "32") (term "0,0,0,0,0,1,0,0,1,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "32") (term "0,1,0,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                             (rule "sub_literals" (formula "32") (term "0,0,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0,0,0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "32") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "32") (term "1,1,0,1,0,0,1,0,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "32") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "32") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "32") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "32") (term "1,1,0,0,0,0,1,0,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "32") (term "1,0,0,0,0,1,0,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "32") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "32") (term "0,0,1,0,0,1,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "32") (term "0,0,0,1,0,0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,0,0,1,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "32") (term "0,1,0,0,0,0,0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "32") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_addComm1" (formula "32") (term "0,0,1,0,0,1,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "32") (term "0,0,0,1,0,0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "32") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "32") (term "1,1,0,1,0,0,1,0,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "32") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "32") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                             (rule "qeq_literals" (formula "32") (term "1,0,0,1,0,0,0,1,1,0"))
                                              (builtin "One Step Simplification" (formula "32"))
                                             (rule "polySimp_addAssoc" (formula "32") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "32") (term "0,0,0,0,0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "32") (term "0,0,0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "32") (term "0,0,0,0,0,1,0,0,0,1,1,0"))
                                             (rule "add_zero_left" (formula "32") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "32") (term "0,0,0,1,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "32") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "32") (term "0,0,0,1,0,0,0,1,1,0"))
                                             (rule "leq_literals" (formula "32") (term "0,0,1,0,0,0,1,1,0"))
                                              (builtin "One Step Simplification" (formula "32"))
                                             (rule "elimGcdGeq" (formula "17") (term "1,0,0,1,1") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=m") (inst "elimGcd=Z(2(#))"))
                                             (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0,1,0,0,1,1"))
                                             (rule "add_zero_right" (formula "17") (term "0,0,0,1,0,1,0,0,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,1,0,0,1,1"))
                                             (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0,0,1,0,0,1,1"))
                                             (rule "sub_literals" (formula "17") (term "0,0,0,0,0,0,0,1,0,0,1,1"))
                                             (rule "times_zero_1" (formula "17") (term "0,0,0,1,0,1,0,0,1,1"))
                                             (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0,0,1,0,0,1,1"))
                                             (rule "add_zero_left" (formula "17") (term "0,0,1,0,1,0,0,1,1"))
                                             (rule "polySimp_addLiterals" (formula "17") (term "0,0,0,0,0,1,0,0,1,1"))
                                             (rule "add_zero_right" (formula "17") (term "0,0,0,0,0,1,0,0,1,1"))
                                             (rule "polySimp_pullOutFactor0" (formula "17") (term "0,1,0,1,0,0,1,1"))
                                             (rule "add_literals" (formula "17") (term "1,0,1,0,1,0,0,1,1"))
                                             (rule "times_zero_1" (formula "17") (term "0,1,0,1,0,0,1,1"))
                                             (rule "leq_literals" (formula "17") (term "1,0,1,0,0,1,1"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0,1,0,0,1,1"))
                                             (rule "add_literals" (formula "17") (term "1,1,0,0,1,0,0,1,1"))
                                             (rule "times_zero_1" (formula "17") (term "1,0,0,1,0,0,1,1"))
                                             (rule "add_zero_right" (formula "17") (term "0,0,1,0,0,1,1"))
                                             (rule "qeq_literals" (formula "17") (term "0,1,0,0,1,1"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "elimGcdLeq" (formula "32") (term "1,0,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                             (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "sub_literals" (formula "32") (term "0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "32") (term "0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "32") (term "0,0,0,0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "32") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "32") (term "1,1,0,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "32") (term "1,0,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "32") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "32") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "32") (term "1,1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "32") (term "1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "32") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "32") (term "0,1,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "32") (term "0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "32") (term "0,0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "32") (term "0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "32") (term "0,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "32") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_addComm1" (formula "32") (term "0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "32") (term "0,0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "32") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "32") (term "1,1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "32") (term "1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "32") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "qeq_literals" (formula "32") (term "1,0,1,0,0,0,0,0,1,1,0"))
                                              (builtin "One Step Simplification" (formula "32"))
                                             (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_addComm1" (formula "32") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "32") (term "0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "add_zero_left" (formula "32") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "32") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "32") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "32") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "leq_literals" (formula "32") (term "0,1,0,0,0,0,0,1,1,0"))
                                              (builtin "One Step Simplification" (formula "32"))
                                             (rule "polyDiv_pullOut" (formula "7") (term "0,1,1,0,0,0,0,0") (inst "polyDivCoeff=mul(jdiv(i_0, Z(2(#))), Z(neglit(1(#))))"))
                                             (rule "equal_literals" (formula "7") (term "0,0,1,1,0,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,1,1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,1,1,0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0,0,1,1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "7") (term "1,1,0,0,0,1,1,0,0,0,0,0"))
                                             (rule "times_zero_1" (formula "7") (term "1,0,0,0,1,1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "7") (term "0,0,0,1,1,0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "7") (term "0,1,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "7") (term "1,0,0,0,0,0"))
                                             (rule "polyDiv_pullOut" (formula "7") (term "0,1,0,1,0,0,0,0,0") (inst "polyDivCoeff=jdiv(i_0, Z(2(#)))"))
                                             (rule "equal_literals" (formula "7") (term "0,0,1,0,1,0,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,1,0,1,0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "7") (term "1,0,1,0,0,0,0,0"))
                                             (rule "polySimp_addComm0" (formula "7") (term "1,1,0,1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "7") (term "1,0,1,0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "7") (term "0,1,0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "7") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "7") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "7") (term "1,1,0,1,0,0,0,0,0"))
                                             (rule "times_zero_1" (formula "7") (term "1,0,1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "7") (term "0,1,0,0,0,0,0"))
                                             (rule "elimGcdGeq" (formula "32") (term "1,1,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                             (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,0,1,1,0,0,1,1,0"))
                                             (rule "sub_literals" (formula "32") (term "0,0,0,0,0,0,0,1,1,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "32") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0,0,1,1,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "32") (term "1,0,0,0,0,0,0,1,1,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "32") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                                             (rule "polySimp_addLiterals" (formula "32") (term "0,0,0,0,0,1,1,0,0,1,1,0"))
                                             (rule "add_zero_left" (formula "32") (term "0,0,1,0,1,1,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "32") (term "0,0,0,0,0,1,1,0,0,1,1,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "32") (term "0,1,0,1,1,0,0,1,1,0"))
                                             (rule "add_literals" (formula "32") (term "1,0,1,0,1,1,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "32") (term "0,1,0,1,1,0,0,1,1,0"))
                                             (rule "leq_literals" (formula "32") (term "1,0,1,1,0,0,1,1,0"))
                                              (builtin "One Step Simplification" (formula "32"))
                                             (rule "polySimp_pullOutFactor0b" (formula "32") (term "0,0,1,1,0,0,1,1,0"))
                                             (rule "add_literals" (formula "32") (term "1,1,0,0,1,1,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "32") (term "1,0,0,1,1,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "32") (term "0,0,1,1,0,0,1,1,0"))
                                             (rule "qeq_literals" (formula "32") (term "0,1,1,0,0,1,1,0"))
                                              (builtin "One Step Simplification" (formula "32"))
                                             (rule "elimGcdGeq" (formula "32") (term "0,1,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                             (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "32") (term "0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "32") (term "0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "32") (term "0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "sub_literals" (formula "32") (term "0,0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "32") (term "1,0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "add_zero_left" (formula "32") (term "0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "32") (term "0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "32") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "32") (term "1,0,1,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "32") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "leq_literals" (formula "32") (term "1,0,0,1,0,0,0,0,1,1,0"))
                                              (builtin "One Step Simplification" (formula "32"))
                                             (rule "polySimp_pullOutFactor0b" (formula "32") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "32") (term "1,1,0,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "32") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "32") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "qeq_literals" (formula "32") (term "0,0,1,0,0,0,0,1,1,0"))
                                              (builtin "One Step Simplification" (formula "32"))
                                             (rule "polyDiv_pullOut" (formula "7") (term "0,1,1,0,0,0,0,0") (inst "polyDivCoeff=mul(jdiv(i_0, Z(2(#))), Z(neglit(1(#))))"))
                                             (rule "equal_literals" (formula "7") (term "0,0,1,1,0,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,1,1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,1,1,0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0,0,1,1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "7") (term "1,1,0,0,0,1,1,0,0,0,0,0"))
                                             (rule "times_zero_1" (formula "7") (term "1,0,0,0,1,1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "7") (term "0,0,0,1,1,0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "7") (term "0,1,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "7") (term "1,0,0,0,0,0"))
                                             (rule "polyDiv_pullOut" (formula "7") (term "0,1,0,1,0,0,0,0,0") (inst "polyDivCoeff=jdiv(i_0, Z(2(#)))"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,2,0,1,0,1,0,0,0,0,0"))
                                             (rule "equal_literals" (formula "7") (term "0,0,1,0,1,0,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "polySimp_mulComm0" (formula "7") (term "1,0,1,0,0,0,0,0"))
                                             (rule "polySimp_addComm0" (formula "7") (term "1,1,0,1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "7") (term "1,0,1,0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "7") (term "0,1,0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "7") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "7") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "7") (term "1,1,0,1,0,0,0,0,0"))
                                             (rule "times_zero_1" (formula "7") (term "1,0,1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "7") (term "0,1,0,0,0,0,0"))
                                             (rule "polyDiv_pullOut" (formula "7") (term "0,1,1,0,0,0,0,0") (inst "polyDivCoeff=mul(jdiv(i_0, Z(2(#))), Z(neglit(1(#))))"))
                                             (rule "equal_literals" (formula "7") (term "0,0,1,1,0,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,1,1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,1,1,0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0,0,1,1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "7") (term "1,1,0,0,0,1,1,0,0,0,0,0"))
                                             (rule "times_zero_1" (formula "7") (term "1,0,0,0,1,1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "7") (term "0,0,0,1,1,0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "7") (term "0,1,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "7") (term "1,0,0,0,0,0"))
                                             (rule "newSym_eq" (formula "43") (inst "l=l_0") (inst "newSymDef=mul(result_1, Z(0(#)))"))
                                             (rule "times_zero_1" (formula "43") (term "1,1"))
                                             (rule "add_zero_right" (formula "43") (term "1"))
                                             (rule "applyEq" (formula "44") (term "0,0") (ifseqformula "43"))
                                             (rule "eqSymm" (formula "44"))
                                             (rule "applyEq" (formula "16") (term "1,1,0,0,1") (ifseqformula "44"))
                                             (rule "applyEq" (formula "46") (term "0") (ifseqformula "44"))
                                             (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "44"))
                                             (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "44"))
                                             (rule "inEqSimp_homoInEq1" (formula "17") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                                             (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "44"))
                                             (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "16") (term "0,0"))
                                             (rule "applyEq" (formula "45") (term "1,1") (ifseqformula "44"))
                                             (rule "applyEq" (formula "17") (term "1,1,0,0,0,1") (ifseqformula "44"))
                                             (rule "applyEq" (formula "42") (term "1") (ifseqformula "44"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0"))
                                             (rule "mul_literals" (formula "17") (term "0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0"))
                                             (rule "mul_literals" (formula "16") (term "0,1,0"))
                                             (rule "newSym_eq" (formula "15") (inst "l=l_1") (inst "newSymDef=mul(i_0, Z(0(#)))"))
                                             (rule "times_zero_1" (formula "15") (term "1,1"))
                                             (rule "add_zero_right" (formula "15") (term "1"))
                                             (rule "applyEqRigid" (formula "16") (term "0,0") (ifseqformula "15"))
                                             (rule "eqSymm" (formula "16"))
                                             (rule "applyEq" (formula "7") (term "0,1,1,0,0,0,0,0") (ifseqformula "15"))
                                             (rule "polySimp_addComm1" (formula "7") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "7") (term "0,1,0,0,0,0,0"))
                                             (rule "applyEq" (formula "13") (term "0") (ifseqformula "16"))
                                             (rule "applyEqRigid" (formula "7") (term "0,0,0,1,1,0") (ifseqformula "16"))
                                             (rule "applyEq" (formula "7") (term "0,0,1,1,1,0,0,0,0") (ifseqformula "16"))
                                             (rule "inEqSimp_homoInEq1" (formula "7") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "7") (term "0,1,0,0,0,0"))
                                             (rule "applyEq" (formula "7") (term "0,0,0,0,1,0,0,0") (ifseqformula "16"))
                                             (rule "applyEq" (formula "7") (term "0,0,0,2,0,0,1") (ifseqformula "16"))
                                             (rule "applyEqRigid" (formula "18") (term "0,0") (ifseqformula "16"))
                                             (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                                             (rule "applyEq" (formula "18") (term "1,1,0,0,0,1,1") (ifseqformula "16"))
                                             (rule "applyEq" (formula "7") (term "0,0,1,1,1,0,0") (ifseqformula "16"))
                                             (rule "applyEqRigid" (formula "14") (term "1,1") (ifseqformula "16"))
                                             (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "16"))
                                             (rule "applyEq" (formula "7") (term "0,0,1,1,1,0,0,0") (ifseqformula "16"))
                                             (rule "applyEqRigid" (formula "7") (term "0,0,1,1,0,1,0") (ifseqformula "16"))
                                             (rule "applyEqRigid" (formula "17") (term "0,0") (ifseqformula "16"))
                                             (rule "inEqSimp_homoInEq1" (formula "17") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                                             (rule "applyEqRigid" (formula "17") (term "1,1,0,0,0,1") (ifseqformula "16"))
                                             (rule "applyEqRigid" (formula "7") (term "0,0,1,1,0,1,0,0") (ifseqformula "16"))
                                             (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "7") (term "0,0,1,0,0"))
                                             (rule "applyEq" (formula "12") (term "0,2,0") (ifseqformula "16"))
                                             (rule "applyEqRigid" (formula "7") (term "0,0,1,1,0,0,0,0,0") (ifseqformula "16"))
                                             (rule "applyEq" (formula "7") (term "1,0,1,0,0,0,0,0") (ifseqformula "16"))
                                             (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "7") (term "1,1,0,1,0,0,0,0,0"))
                                             (rule "times_zero_1" (formula "7") (term "1,0,1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "7") (term "0,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0,0,0"))
                                             (rule "mul_literals" (formula "7") (term "0,1,1,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0"))
                                             (rule "mul_literals" (formula "18") (term "0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                                             (rule "mul_literals" (formula "17") (term "0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "7") (term "1,0,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "7") (term "1,0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,1,0,0"))
                                             (rule "mul_literals" (formula "7") (term "0,1,0,1,0,0"))
                                             (rule "elimGcdGeq_antec" (formula "47") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                             (rule "add_zero_right" (formula "47") (term "0,0,0,1,0"))
                                             (rule "leq_literals" (formula "47") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "47"))
                                             (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "47") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "47") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "47") (term "0,0"))
                                             (rule "add_literals" (formula "47") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "47") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "47") (term "0,0"))
                                             (rule "leq_literals" (formula "47") (term "0"))
                                              (builtin "One Step Simplification" (formula "47"))
                                             (rule "elimGcdGeq" (formula "18") (term "1,0,0,0,1") (inst "elimGcdRightDiv=l_0") (inst "elimGcdLeftDiv=n") (inst "elimGcd=Z(2(#))"))
                                             (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,0,1,0,0,0,1"))
                                             (rule "mul_literals" (formula "18") (term "0,0,0,0,0,1,0,1,0,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0,1,0,0,0,1"))
                                             (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0,0,1,0,0,0,1"))
                                             (rule "sub_literals" (formula "18") (term "0,0,0,0,0,0,0,1,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,1,0,1,0,0,0,1"))
                                             (rule "add_literals" (formula "18") (term "1,1,0,1,0,1,0,0,0,1"))
                                             (rule "times_zero_1" (formula "18") (term "1,0,1,0,1,0,0,0,1"))
                                             (rule "add_zero_right" (formula "18") (term "0,1,0,1,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0,0,1,0,0,0,1"))
                                             (rule "add_literals" (formula "18") (term "1,1,0,0,0,1,0,0,0,1"))
                                             (rule "times_zero_1" (formula "18") (term "1,0,0,0,1,0,0,0,1"))
                                             (rule "add_zero_right" (formula "18") (term "0,0,0,1,0,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "18") (term "0,0,1,0,1,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor0" (formula "18") (term "0,1,0,1,0,0,0,1"))
                                             (rule "add_literals" (formula "18") (term "1,0,1,0,1,0,0,0,1"))
                                             (rule "times_zero_1" (formula "18") (term "0,1,0,1,0,0,0,1"))
                                             (rule "leq_literals" (formula "18") (term "1,0,1,0,0,0,1"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,1,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0,1,0,0,0,1"))
                                             (rule "add_literals" (formula "18") (term "1,1,0,0,1,0,0,0,1"))
                                             (rule "times_zero_1" (formula "18") (term "1,0,0,1,0,0,0,1"))
                                             (rule "add_zero_right" (formula "18") (term "0,0,1,0,0,0,1"))
                                             (rule "qeq_literals" (formula "18") (term "0,1,0,0,0,1"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "elimGcdGeq" (formula "17") (term "1,0,0,1") (inst "elimGcdRightDiv=l_0") (inst "elimGcdLeftDiv=n") (inst "elimGcd=Z(2(#))"))
                                             (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0,0,1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0,1,0,0,1"))
                                             (rule "mul_literals" (formula "17") (term "0,0,0,0,0,1,0,1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,1,0,0,1"))
                                             (rule "sub_literals" (formula "17") (term "0,0,0,0,0,0,0,1,0,0,1"))
                                             (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,1,0,1,0,0,1"))
                                             (rule "add_literals" (formula "17") (term "1,1,0,1,0,1,0,0,1"))
                                             (rule "times_zero_1" (formula "17") (term "1,0,1,0,1,0,0,1"))
                                             (rule "add_zero_right" (formula "17") (term "0,1,0,1,0,0,1"))
                                             (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0,0,1,0,0,1"))
                                             (rule "add_literals" (formula "17") (term "1,1,0,0,0,1,0,0,1"))
                                             (rule "times_zero_1" (formula "17") (term "1,0,0,0,1,0,0,1"))
                                             (rule "add_zero_right" (formula "17") (term "0,0,0,1,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "17") (term "0,0,1,0,1,0,0,1"))
                                             (rule "polySimp_pullOutFactor0" (formula "17") (term "0,1,0,1,0,0,1"))
                                             (rule "add_literals" (formula "17") (term "1,0,1,0,1,0,0,1"))
                                             (rule "times_zero_1" (formula "17") (term "0,1,0,1,0,0,1"))
                                             (rule "leq_literals" (formula "17") (term "1,0,1,0,0,1"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,1,0,0,1"))
                                             (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0,1,0,0,1"))
                                             (rule "add_literals" (formula "17") (term "1,1,0,0,1,0,0,1"))
                                             (rule "times_zero_1" (formula "17") (term "1,0,0,1,0,0,1"))
                                             (rule "add_zero_right" (formula "17") (term "0,0,1,0,0,1"))
                                             (rule "qeq_literals" (formula "17") (term "0,1,0,0,1"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "elimGcdGeq_antec" (formula "13") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0"))
                                             (rule "add_zero_right" (formula "13") (term "0,0,0,1,0"))
                                             (rule "leq_literals" (formula "13") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "times_zero_1" (formula "13") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "13") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                                             (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "13") (term "0,0"))
                                             (rule "leq_literals" (formula "13") (term "0"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "polyDiv_pullOut" (formula "7") (term "0,1,1,1,0,0,0") (inst "polyDivCoeff=l_1"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,2,0,1,1,1,0,0,0"))
                                             (rule "equal_literals" (formula "7") (term "0,0,1,1,1,0,0,0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "polySimp_pullOutFactor0" (formula "7") (term "0,0,0,1,1,1,0,0,0"))
                                             (rule "add_literals" (formula "7") (term "1,0,0,0,1,1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "7") (term "0,0,0,1,1,1,0,0,0"))
                                             (rule "div_literals" (formula "7") (term "0,0,1,1,1,0,0,0"))
                                             (rule "add_zero_left" (formula "7") (term "0,1,1,1,0,0,0"))
                                             (rule "polyDiv_pullOut" (formula "7") (term "0,1,1,0,0,0,0,0") (inst "polyDivCoeff=l_1"))
                                             (rule "equal_literals" (formula "7") (term "0,0,1,1,0,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,1,1,0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "7") (term "0,0,0,1,1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "7") (term "1,0,0,0,1,1,0,0,0,0,0"))
                                             (rule "times_zero_1" (formula "7") (term "0,0,0,1,1,0,0,0,0,0"))
                                             (rule "div_literals" (formula "7") (term "0,0,1,1,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "7") (term "0,1,1,0,0,0,0,0"))
                                             (rule "replace_known_left" (formula "7") (term "0,0,0,0,0") (ifseqformula "14"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "elimGcdLeq" (formula "17") (term "0,0,0,1") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_1)") (inst "elimGcdLeftDiv=n") (inst "elimGcd=Z(2(#))"))
                                             (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0,0,0,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0,0,0,0,1"))
                                             (rule "mul_literals" (formula "17") (term "0,0,0,0,0,1,0,0,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,0,0,0,1"))
                                             (rule "sub_literals" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,1,0,0,0,0,1"))
                                             (rule "add_literals" (formula "17") (term "1,1,0,1,0,0,0,0,1"))
                                             (rule "times_zero_1" (formula "17") (term "1,0,1,0,0,0,0,1"))
                                             (rule "add_zero_right" (formula "17") (term "0,1,0,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0,0,0,0,0,1"))
                                             (rule "add_literals" (formula "17") (term "1,1,0,0,0,0,0,0,1"))
                                             (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0,0,1"))
                                             (rule "add_zero_right" (formula "17") (term "0,0,0,0,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "17") (term "0,0,1,0,0,0,0,1"))
                                             (rule "mul_literals" (formula "17") (term "0,0,0,1,0,0,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0,0,0,1"))
                                             (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "17") (term "0,1,0,0,0,0,1"))
                                             (rule "polySimp_addComm1" (formula "17") (term "0,0,1,0,0,0,0,1"))
                                             (rule "add_literals" (formula "17") (term "0,0,0,1,0,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,1,0,0,0,0,1"))
                                             (rule "add_literals" (formula "17") (term "1,1,0,1,0,0,0,0,1"))
                                             (rule "times_zero_1" (formula "17") (term "1,0,1,0,0,0,0,1"))
                                             (rule "add_zero_right" (formula "17") (term "0,1,0,0,0,0,1"))
                                             (rule "qeq_literals" (formula "17") (term "1,0,0,0,0,1"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0,0,1"))
                                             (rule "add_literals" (formula "17") (term "0,0,0,0,0,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0,1"))
                                             (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,0,0,1"))
                                             (rule "add_literals" (formula "17") (term "0,0,0,0,0,0,0,1"))
                                             (rule "add_zero_left" (formula "17") (term "0,0,0,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor0" (formula "17") (term "0,0,0,0,0,1"))
                                             (rule "add_literals" (formula "17") (term "1,0,0,0,0,0,1"))
                                             (rule "times_zero_1" (formula "17") (term "0,0,0,0,0,1"))
                                             (rule "leq_literals" (formula "17") (term "0,0,0,0,1"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "elimGcdLeq" (formula "18") (term "0,0,0,1,1") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_1)") (inst "elimGcdLeftDiv=m") (inst "elimGcd=Z(2(#))"))
                                             (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,0,0,0,0,1,1"))
                                             (rule "mul_literals" (formula "18") (term "0,0,0,0,0,1,0,0,0,0,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0,0,0,0,1,1"))
                                             (rule "sub_literals" (formula "18") (term "0,0,0,0,0,0,0,0,0,0,1,1"))
                                             (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0,0,0,0,0,1,1"))
                                             (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,1,0,0,0,0,1,1"))
                                             (rule "add_literals" (formula "18") (term "1,1,0,1,0,0,0,0,1,1"))
                                             (rule "times_zero_1" (formula "18") (term "1,0,1,0,0,0,0,1,1"))
                                             (rule "add_zero_right" (formula "18") (term "0,1,0,0,0,0,1,1"))
                                             (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0,0,0,0,0,1,1"))
                                             (rule "add_literals" (formula "18") (term "1,1,0,0,0,0,0,0,1,1"))
                                             (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0,0,1,1"))
                                             (rule "add_zero_right" (formula "18") (term "0,0,0,0,0,0,1,1"))
                                             (rule "polySimp_rightDist" (formula "18") (term "0,0,1,0,0,0,0,1,1"))
                                             (rule "mul_literals" (formula "18") (term "0,0,0,1,0,0,0,0,1,1"))
                                             (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0,0,0,1,1"))
                                             (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0,0,0,1,1"))
                                             (rule "polySimp_addAssoc" (formula "18") (term "0,1,0,0,0,0,1,1"))
                                             (rule "polySimp_addComm1" (formula "18") (term "0,0,1,0,0,0,0,1,1"))
                                             (rule "add_literals" (formula "18") (term "0,0,0,1,0,0,0,0,1,1"))
                                             (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,1,0,0,0,0,1,1"))
                                             (rule "add_literals" (formula "18") (term "1,1,0,1,0,0,0,0,1,1"))
                                             (rule "times_zero_1" (formula "18") (term "1,0,1,0,0,0,0,1,1"))
                                             (rule "add_zero_right" (formula "18") (term "0,1,0,0,0,0,1,1"))
                                             (rule "qeq_literals" (formula "18") (term "1,0,0,0,0,1,1"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,0,0,1,1"))
                                             (rule "add_literals" (formula "18") (term "0,0,0,0,0,0,0,1,1"))
                                             (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,0,1,1"))
                                             (rule "polySimp_addComm1" (formula "18") (term "0,0,0,0,0,0,1,1"))
                                             (rule "add_literals" (formula "18") (term "0,0,0,0,0,0,0,1,1"))
                                             (rule "add_zero_left" (formula "18") (term "0,0,0,0,0,0,1,1"))
                                             (rule "polySimp_pullOutFactor0" (formula "18") (term "0,0,0,0,0,1,1"))
                                             (rule "add_literals" (formula "18") (term "1,0,0,0,0,0,1,1"))
                                             (rule "times_zero_1" (formula "18") (term "0,0,0,0,0,1,1"))
                                             (rule "leq_literals" (formula "18") (term "0,0,0,0,1,1"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "21"))
                                             (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                                             (rule "mul_literals" (formula "27") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "27") (term "0"))
                                             (rule "add_literals" (formula "27") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                                             (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                             (rule "polySimp_elimOne" (formula "27") (term "0"))
                                             (rule "elimGcdLeq" (formula "17") (term "0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_1)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                             (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0,0"))
                                             (rule "sub_literals" (formula "17") (term "0,0,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "17") (term "0,0,0,0,0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,0"))
                                             (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,1,0,0"))
                                             (rule "add_literals" (formula "17") (term "1,1,0,1,0,0"))
                                             (rule "times_zero_1" (formula "17") (term "1,0,1,0,0"))
                                             (rule "add_zero_right" (formula "17") (term "0,1,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "17") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "17") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "17") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "17") (term "0,0,1,0,0"))
                                             (rule "mul_literals" (formula "17") (term "0,0,0,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "17") (term "0,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "17") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,1,0,0"))
                                             (rule "add_literals" (formula "17") (term "1,1,0,1,0,0"))
                                             (rule "times_zero_1" (formula "17") (term "1,0,1,0,0"))
                                             (rule "add_zero_right" (formula "17") (term "0,1,0,0"))
                                             (rule "qeq_literals" (formula "17") (term "1,0,0"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "17") (term "0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "17") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "17") (term "0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "17") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "17") (term "0,0,0"))
                                             (rule "add_literals" (formula "17") (term "1,0,0,0"))
                                             (rule "times_zero_1" (formula "17") (term "0,0,0"))
                                             (rule "leq_literals" (formula "17") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "polyDiv_pullOut" (formula "7") (term "0,0,1,1,0") (inst "polyDivCoeff=l_1"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,2,0,0,1,1,0"))
                                             (rule "equal_literals" (formula "7") (term "0,0,0,1,1,0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "polySimp_pullOutFactor0" (formula "7") (term "0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "7") (term "1,0,0,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "7") (term "0,0,0,0,1,1,0"))
                                             (rule "div_literals" (formula "7") (term "0,0,0,1,1,0"))
                                             (rule "add_zero_left" (formula "7") (term "0,0,1,1,0"))
                                             (rule "inEqSimp_subsumption6" (formula "7") (term "1,1,0") (ifseqformula "13"))
                                             (rule "times_zero_1" (formula "7") (term "1,1,0,1,1,0"))
                                             (rule "greater_literals" (formula "7") (term "0,0,1,1,0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "leq_literals" (formula "7") (term "0,1,1,0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "elimGcdGeq" (formula "18") (term "0") (inst "elimGcdRightDiv=add(Z(1(#)), l_1)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                             (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,0,0"))
                                             (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0,0,0"))
                                             (rule "sub_literals" (formula "18") (term "0,0,0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "18") (term "0,0,0,0,0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,1,0,0"))
                                             (rule "add_literals" (formula "18") (term "1,1,0,1,0,0"))
                                             (rule "times_zero_1" (formula "18") (term "1,0,1,0,0"))
                                             (rule "add_zero_right" (formula "18") (term "0,1,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "18") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "18") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "18") (term "0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "18") (term "0,0,1,0,0"))
                                             (rule "mul_literals" (formula "18") (term "0,0,0,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "18") (term "0,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "18") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,1,0,0"))
                                             (rule "add_literals" (formula "18") (term "1,1,0,1,0,0"))
                                             (rule "times_zero_1" (formula "18") (term "1,0,1,0,0"))
                                             (rule "add_zero_right" (formula "18") (term "0,1,0,0"))
                                             (rule "leq_literals" (formula "18") (term "1,0,0"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "18") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "18") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "18") (term "0,0,0"))
                                             (rule "add_literals" (formula "18") (term "1,0,0,0"))
                                             (rule "times_zero_1" (formula "18") (term "0,0,0"))
                                             (rule "qeq_literals" (formula "18") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "polyDiv_pullOut" (formula "7") (term "0,1,1,1,0") (inst "polyDivCoeff=l_1"))
                                             (rule "equal_literals" (formula "7") (term "0,0,1,1,1,0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,1,1,1,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "7") (term "0,0,0,1,1,1,0"))
                                             (rule "add_literals" (formula "7") (term "1,0,0,0,1,1,1,0"))
                                             (rule "times_zero_1" (formula "7") (term "0,0,0,1,1,1,0"))
                                             (rule "div_literals" (formula "7") (term "0,0,1,1,1,0"))
                                             (rule "add_zero_left" (formula "7") (term "0,1,1,1,0"))
                                             (rule "elimGcdGeq" (formula "7") (term "0,0,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=div(mul(l_1, Z(2(#))), Z(2(#)))") (inst "elimGcd=Z(2(#))"))
                                             (rule "times_zero_1" (formula "7") (term "0,0,0,0,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0,0,0,0"))
                                             (rule "sub_literals" (formula "7") (term "0,0,0,0,0,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,0,0,0"))
                                             (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "7") (term "0,0,0,1,0,0,0,0"))
                                             (rule "polySimp_addLiterals" (formula "7") (term "0,0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "7") (term "0,0,1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "7") (term "0,0,0,0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "7") (term "0,1,0,0,0,0"))
                                             (rule "add_literals" (formula "7") (term "1,0,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "7") (term "0,1,0,0,0,0"))
                                             (rule "leq_literals" (formula "7") (term "1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "7") (term "1,1,0,0,0,0,0"))
                                             (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "7") (term "0,0,0,0,0"))
                                             (rule "qeq_literals" (formula "7") (term "0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "polyDiv_pullOut" (formula "7") (term "0,0,0,1,0") (inst "polyDivCoeff=l_1"))
                                             (rule "equal_literals" (formula "7") (term "0,0,0,0,1,0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "7") (term "0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "7") (term "1,0,0,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "7") (term "0,0,0,0,0,1,0"))
                                             (rule "div_literals" (formula "7") (term "0,0,0,0,1,0"))
                                             (rule "add_zero_left" (formula "7") (term "0,0,0,1,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "7") (term "0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "7") (term "0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "7") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "7") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "7") (term "0,1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,1,0"))
                                             (rule "elimGcdGeq" (formula "7") (term "0,1,0") (inst "elimGcdRightDiv=add(Z(1(#)), l_1)") (inst "elimGcdLeftDiv=j_0") (inst "elimGcd=Z(2(#))"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0,0,1,0"))
                                             (rule "mul_literals" (formula "7") (term "0,0,0,0,0,1,0,0,1,0"))
                                             (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,0,1,0"))
                                             (rule "sub_literals" (formula "7") (term "0,0,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,1,0,0,1,0"))
                                             (rule "add_literals" (formula "7") (term "1,1,0,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "7") (term "1,0,1,0,0,1,0"))
                                             (rule "add_zero_right" (formula "7") (term "0,1,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "7") (term "1,1,0,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "7") (term "0,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "7") (term "0,0,1,0,0,1,0"))
                                             (rule "mul_literals" (formula "7") (term "0,0,0,1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "7") (term "0,1,0,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "7") (term "0,0,1,0,0,1,0"))
                                             (rule "add_literals" (formula "7") (term "0,0,0,1,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,1,0,0,1,0"))
                                             (rule "add_literals" (formula "7") (term "1,1,0,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "7") (term "1,0,1,0,0,1,0"))
                                             (rule "add_zero_right" (formula "7") (term "0,1,0,0,1,0"))
                                             (rule "leq_literals" (formula "7") (term "1,0,0,1,0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "7") (term "0,0,0,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "7") (term "0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "7") (term "0,0,0,0,0,1,0"))
                                             (rule "add_zero_left" (formula "7") (term "0,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "7") (term "0,0,0,1,0"))
                                             (rule "add_literals" (formula "7") (term "1,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "7") (term "0,0,0,1,0"))
                                             (rule "qeq_literals" (formula "7") (term "0,0,1,0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "polyDiv_pullOut" (formula "7") (term "0,0,0,0") (inst "polyDivCoeff=l_1"))
                                             (rule "equal_literals" (formula "7") (term "0,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "7") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "7") (term "1,0,0,0,0,0,0"))
                                             (rule "times_zero_1" (formula "7") (term "0,0,0,0,0,0"))
                                             (rule "div_literals" (formula "7") (term "0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "7") (term "0,0,0,0"))
                                             (rule "replace_known_left" (formula "7") (term "0,0,0") (ifseqformula "13"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "polyDiv_pullOut" (formula "7") (term "0,0,2,0,0,1") (inst "polyDivCoeff=l_1"))
                                             (rule "equal_literals" (formula "7") (term "0,0,0,2,0,0,1"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,0,2,0,0,1"))
                                             (rule "polySimp_pullOutFactor0" (formula "7") (term "0,0,0,0,2,0,0,1"))
                                             (rule "add_literals" (formula "7") (term "1,0,0,0,0,2,0,0,1"))
                                             (rule "times_zero_1" (formula "7") (term "0,0,0,0,2,0,0,1"))
                                             (rule "div_literals" (formula "7") (term "0,0,0,2,0,0,1"))
                                             (rule "add_zero_left" (formula "7") (term "0,0,2,0,0,1"))
                                             (rule "replace_known_left" (formula "7") (term "0,1") (ifseqformula "12"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "notLeft" (formula "7"))
                                             (rule "orRight" (formula "48"))
                                             (rule "inEqSimp_leqRight" (formula "49"))
                                             (rule "polySimp_mulAssoc" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_geqRight" (formula "49"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1"))
                                             (rule "mul_literals" (formula "2") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1"))
                                             (rule "inEqSimp_exactShadow3" (formula "48") (ifseqformula "22"))
                                             (rule "polySimp_rightDist" (formula "48") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "48") (term "1,0,0"))
                                             (rule "mul_literals" (formula "48") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "48") (term "0"))
                                             (rule "add_literals" (formula "48") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "48"))
                                             (rule "polySimp_mulLiterals" (formula "48") (term "0"))
                                             (rule "elimGcdLeq_antec" (formula "48") (inst "elimGcdRightDiv=Z(1(1(9(0(7(8(6(3(5(#))))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                             (rule "polySimp_mulLiterals" (formula "48") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "48") (term "0,1,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "48") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "48"))
                                             (rule "neg_literal" (formula "48") (term "0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "48") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_addLiterals" (formula "48") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "48") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "48") (term "0,0"))
                                             (rule "add_literals" (formula "48") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "48") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "48") (term "0,0"))
                                             (rule "qeq_literals" (formula "48") (term "0"))
                                              (builtin "One Step Simplification" (formula "48"))
                                             (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "22"))
                                             (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                                             (rule "mul_literals" (formula "15") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "15") (term "0"))
                                             (rule "add_literals" (formula "15") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                                             (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                             (rule "elimGcdLeq_antec" (formula "15") (inst "elimGcdRightDiv=Z(1(1(9(0(7(8(6(3(5(#))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                             (rule "leq_literals" (formula "15") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "15"))
                                             (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
                                             (rule "neg_literal" (formula "15") (term "0,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_addLiterals" (formula "15") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "15") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                                             (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "15") (term "0,0"))
                                             (rule "qeq_literals" (formula "15") (term "0"))
                                              (builtin "One Step Simplification" (formula "15"))
                                             (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "1"))
                                             (rule "times_zero_1" (formula "9") (term "0,0"))
                                             (rule "add_zero_left" (formula "9") (term "0"))
                                             (rule "boxToDiamond" (formula "11") (term "1"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "notLeft" (formula "11"))
                                             (rule "boxToDiamond" (formula "7") (term "1"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "notLeft" (formula "7"))
                                             (rule "boxToDiamond" (formula "7") (term "1"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "notLeft" (formula "7"))
                                             (rule "boxToDiamond" (formula "5") (term "1"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "notLeft" (formula "5"))
                                             (rule "boxToDiamond" (formula "3") (term "1"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "notLeft" (formula "3"))
                                             (rule "nnf_imp2or" (formula "19") (term "1,0"))
                                             (rule "nnf_imp2or" (formula "20") (term "1,0,1,0"))
                                             (rule "nnf_imp2or" (formula "30") (term "0,1,1,0"))
                                             (rule "nnf_imp2or" (formula "31") (term "0"))
                                             (rule "commute_and" (formula "30") (term "0,0"))
                                             (rule "jdiv_axiom" (formula "22") (term "1,0"))
                                             (rule "eqSymm" (formula "22"))
                                             (rule "inEqSimp_subsumption1" (formula "22") (term "0,0") (ifseqformula "17"))
                                             (rule "leq_literals" (formula "22") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "eqSymm" (formula "22"))
                                             (rule "applyEqRigid" (formula "19") (term "1,1,0,0,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "29") (term "0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "31") (term "1,1,1,0,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "6") (term "0") (ifseqformula "22"))
                                             (rule "applyEqRigid" (formula "32") (term "1,1,0,0,0,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "20") (term "1,1,0,0,0") (ifseqformula "22"))
                                             (rule "applyEqRigid" (formula "23") (term "1,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "20") (term "1,1,0,0,0,1,0") (ifseqformula "22"))
                                             (rule "nnf_imp2or" (formula "14") (term "0,1"))
                                             (rule "nnf_imp2or" (formula "15") (term "0,0,1"))
                                             (rule "nnf_imp2or" (formula "15") (term "0,1,1"))
                                             (rule "jdiv_axiom" (formula "43") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "0,0,2,1"))
                                             (rule "eqSymm" (formula "43"))
                                             (rule "applyEqRigid" (formula "43") (term "1") (ifseqformula "44"))
                                             (rule "inEqSimp_subsumption6" (formula "43") (term "0,0") (ifseqformula "48"))
                                             (rule "times_zero_1" (formula "43") (term "1,1,0,0,0"))
                                             (rule "greater_literals" (formula "43") (term "0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "43"))
                                             (rule "leq_literals" (formula "43") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "43"))
                                             (rule "polyDiv_pullOut" (formula "43") (term "0") (inst "polyDivCoeff=l_0"))
                                             (rule "equal_literals" (formula "43") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "43"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,0"))
                                             (rule "polySimp_homoEq" (formula "43"))
                                             (rule "polySimp_pullOutFactor0" (formula "43") (term "0,0,0,1,0"))
                                             (rule "add_literals" (formula "43") (term "1,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "43") (term "0,0,0,1,0"))
                                             (rule "div_literals" (formula "43") (term "0,0,1,0"))
                                             (rule "add_zero_left" (formula "43") (term "0,1,0"))
                                             (rule "polySimp_pullOutFactor1" (formula "43") (term "0"))
                                             (rule "add_literals" (formula "43") (term "1,0"))
                                             (rule "times_zero_1" (formula "43") (term "0"))
                                              (builtin "One Step Simplification" (formula "43"))
                                             (rule "true_left" (formula "43"))
                                             (rule "jdiv_axiom" (formula "12") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "0,0,2,1"))
                                             (rule "eqSymm" (formula "12"))
                                             (rule "applyEq" (formula "12") (term "1") (ifseqformula "13"))
                                             (rule "inEqSimp_subsumption6" (formula "12") (term "0,0") (ifseqformula "9"))
                                             (rule "greater_literals" (formula "12") (term "0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "times_zero_1" (formula "12") (term "1,0,0,0"))
                                             (rule "leq_literals" (formula "12") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "polyDiv_pullOut" (formula "12") (term "0") (inst "polyDivCoeff=l_1"))
                                             (rule "equal_literals" (formula "12") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "12") (term "0,0,0"))
                                             (rule "add_literals" (formula "12") (term "1,0,0,0"))
                                             (rule "times_zero_1" (formula "12") (term "0,0,0"))
                                             (rule "div_literals" (formula "12") (term "0,0"))
                                             (rule "add_zero_left" (formula "12") (term "0"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "true_left" (formula "12"))
                                             (rule "nnf_imp2or" (formula "19") (term "0"))
                                             (rule "nnf_imp2or" (formula "31") (term "1,0"))
                                             (rule "nnf_imp2or" (formula "32") (term "1,0"))
                                             (rule "nnf_imp2or" (formula "20") (term "0"))
                                             (rule "nnf_notAnd" (formula "32") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "32") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "32") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "32") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0"))
                                             (rule "mul_literals" (formula "32") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "32") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "32") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "32") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "32") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "32") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "32") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "14") (term "0,0,1"))
                                             (rule "inEqSimp_notLeq" (formula "14") (term "0,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0,1"))
                                             (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0,1"))
                                             (rule "add_literals" (formula "14") (term "0,0,0,0,0,0,1"))
                                             (rule "add_zero_left" (formula "14") (term "0,0,0,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "14") (term "1,0,0,0,1"))
                                             (rule "inEqSimp_notGeq" (formula "14") (term "1,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1"))
                                             (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1"))
                                             (rule "nnf_notAnd" (formula "15") (term "0,0,0,1"))
                                             (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,0,1"))
                                             (rule "mul_literals" (formula "15") (term "0,1,1,0,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,0,1"))
                                             (rule "inEqSimp_notLeq" (formula "15") (term "0,0,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0,0,1"))
                                             (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0,0,1"))
                                             (rule "add_literals" (formula "15") (term "0,0,0,0,0,0,0,1"))
                                             (rule "add_zero_left" (formula "15") (term "0,0,0,0,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "15") (term "1,0,0,0,0,1"))
                                             (rule "nnf_notAnd" (formula "15") (term "0,0,1,1"))
                                             (rule "inEqSimp_notLeq" (formula "15") (term "0,0,0,1,1"))
                                             (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0,1,1"))
                                             (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0,1,1"))
                                             (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0,1,1"))
                                             (rule "add_literals" (formula "15") (term "0,0,0,0,0,0,1,1"))
                                             (rule "add_zero_left" (formula "15") (term "0,0,0,0,0,1,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,1,1"))
                                             (rule "polySimp_elimOne" (formula "15") (term "1,0,0,0,1,1"))
                                             (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0,1,1"))
                                             (rule "times_zero_1" (formula "15") (term "1,0,0,1,0,0,1,1"))
                                             (rule "add_literals" (formula "15") (term "0,0,1,0,0,1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1,1"))
                                             (rule "mul_literals" (formula "15") (term "1,1,0,0,1,1"))
                                             (rule "nnf_imp2or" (formula "31") (term "0"))
                                             (rule "nnf_notAnd" (formula "19") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "19") (term "1,0,0"))
                                             (rule "mul_literals" (formula "19") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "19") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                                             (rule "mul_literals" (formula "19") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "19") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "19") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "19") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "19") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "20") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "20") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "20") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "20") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                                             (rule "mul_literals" (formula "20") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "20") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "20") (term "0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "20") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "20") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "32") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "32"))
                                             (rule "inEqSimp_notGeq" (formula "32") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,1,0,1,0"))
                                             (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,1,0"))
                                             (rule "add_literals" (formula "32") (term "0,0,0,1,0,1,0"))
                                             (rule "add_zero_left" (formula "32") (term "0,0,1,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,1,0"))
                                             (rule "nnf_imp2or" (formula "20") (term "0,1,0"))
                                             (rule "nnf_notAnd" (formula "31") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "31") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "31") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "31") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "31") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
                                             (rule "mul_literals" (formula "31") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "31") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "31"))
                                             (rule "inEqSimp_notLeq" (formula "31") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,1,0,1,0"))
                                             (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,1,0"))
                                             (rule "add_literals" (formula "31") (term "0,0,0,1,0,1,0"))
                                             (rule "add_zero_left" (formula "31") (term "0,0,1,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,1,0"))
                                             (rule "nnf_imp2or" (formula "32") (term "0,1,1,0"))
                                             (rule "nnf_notAnd" (formula "20") (term "0,0,1,0"))
                                             (rule "inEqSimp_notGeq" (formula "20") (term "1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,1,0"))
                                             (rule "mul_literals" (formula "20") (term "0,1,1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0,1,0"))
                                             (rule "inEqSimp_notLeq" (formula "20") (term "0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "20") (term "0,0,0,0,0,0,1,0"))
                                             (rule "add_zero_left" (formula "20") (term "0,0,0,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "20") (term "1,0,0,0,1,0"))
                                             (rule "nnf_notAnd" (formula "20") (term "0,1,0,1,0"))
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "nnf_notAnd" (formula "31") (term "0,0,1,1,0"))
                                             (rule "inEqSimp_notGeq" (formula "31") (term "1,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "31") (term "0,1,1,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0,1,1,0"))
                                             (rule "inEqSimp_notLeq" (formula "31") (term "0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "31") (term "0,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "31") (term "0,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "31") (term "0,0,0,0,0,0,1,1,0"))
                                             (rule "add_zero_left" (formula "31") (term "0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "31") (term "1,0,0,0,1,1,0"))
                                             (rule "nnf_notAnd" (formula "32") (term "0,0,1,1,0"))
                                             (rule "nnf_notAnd" (formula "32") (term "0,0,0,1,1,0"))
                                             (rule "nnf_notOr" (formula "32") (term "1,0,0,1,1,0"))
                                             (rule "inEqSimp_notLeq" (formula "32") (term "0,1,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,1,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "32") (term "0,1,0,0,0,1,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "32") (term "0,0,0,1,0,0,1,1,0"))
                                             (rule "add_literals" (formula "32") (term "0,0,0,0,1,0,0,1,1,0"))
                                             (rule "add_zero_left" (formula "32") (term "0,0,0,1,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "0,1,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "32") (term "1,0,1,0,0,1,1,0"))
                                             (rule "inEqSimp_notGeq" (formula "32") (term "1,1,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "32") (term "1,0,0,1,1,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "32") (term "0,0,1,1,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,1,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "32") (term "1,1,1,0,0,1,1,0"))
                                             (rule "nnf_notOr" (formula "32") (term "1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_notGeq" (formula "32") (term "1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "32") (term "1,1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "32") (term "1,1,1,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "32") (term "0,1,1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "32") (term "1,1,1,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_notLeq" (formula "32") (term "0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "32") (term "0,1,0,0,0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "32") (term "0,0,0,1,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "32") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                             (rule "add_zero_left" (formula "32") (term "0,0,0,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,0,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "32") (term "1,0,1,0,0,0,1,1,0"))
                                             (rule "nnf_notAnd" (formula "32") (term "0,0,0,0,1,1,0"))
                                             (rule "nnf_notOr" (formula "32") (term "1,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_notGeq" (formula "32") (term "1,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,1,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "32") (term "1,1,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "32") (term "1,1,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,1,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "32") (term "0,1,1,1,0,0,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "32") (term "1,1,1,1,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_notGeq" (formula "32") (term "0,1,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "32") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "32") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,1,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "32") (term "1,0,1,0,0,0,0,1,1,0"))
                                             (rule "nnf_notOr" (formula "32") (term "0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "32") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "add_zero_left" (formula "32") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_notLeq" (formula "32") (term "0,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "32") (term "0,1,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "32") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "32") (term "0,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "add_zero_left" (formula "32") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "0,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "32") (term "1,0,0,0,0,0,0,1,1,0"))
                                             (rule "methodBodyExpand" (formula "52") (term "1") (newnames "heapBefore_maskNull_0,savedHeapBefore_maskNull"))
                                              (builtin "One Step Simplification" (formula "52"))
                                             (rule "methodBodyExpand" (formula "51") (term "1") (newnames "heapBefore_maskNull_1,savedHeapBefore_maskNull_0"))
                                              (builtin "One Step Simplification" (formula "51"))
                                             (rule "methodBodyExpand" (formula "50") (term "1") (newnames "heapBefore_maskNull_2,savedHeapBefore_maskNull_1"))
                                              (builtin "One Step Simplification" (formula "50"))
                                             (rule "methodBodyExpand" (formula "49") (term "1") (newnames "heapBefore_maskNull_3,savedHeapBefore_maskNull_2"))
                                              (builtin "One Step Simplification" (formula "49"))
                                             (rule "methodBodyExpand" (formula "48") (term "1") (newnames "heapBefore_maskNull_4,savedHeapBefore_maskNull_3"))
                                              (builtin "One Step Simplification" (formula "48"))
                                             (rule "commute_or" (formula "14") (term "0,0,1"))
                                             (rule "commute_or_2" (formula "19") (term "0"))
                                             (rule "commute_or" (formula "15") (term "0,0,0,1"))
                                             (rule "commute_or" (formula "32") (term "0,0"))
                                             (rule "commute_or" (formula "15") (term "0,0,1,1"))
                                             (rule "div_axiom" (formula "22") (term "1") (inst "quotient=quotient_0"))
                                             (rule "mul_literals" (formula "22") (term "1,1,1,1,1"))
                                             (rule "qeq_literals" (formula "22") (term "0,1,1"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "equal_literals" (formula "22") (term "0"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "andLeft" (formula "22"))
                                             (rule "andLeft" (formula "22"))
                                             (rule "polySimp_addComm1" (formula "24") (term "1"))
                                             (rule "add_literals" (formula "24") (term "0,1"))
                                             (rule "inEqSimp_commuteLeq" (formula "23"))
                                             (rule "inEqSimp_homoInEq1" (formula "24"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "24") (term "0"))
                                             (rule "applyEq" (formula "26") (term "1,0") (ifseqformula "22"))
                                             (rule "applyEqRigid" (formula "19") (term "1,0,0,0") (ifseqformula "22"))
                                             (rule "applyEqRigid" (formula "6") (term "0") (ifseqformula "22"))
                                             (rule "inEqSimp_homoInEq1" (formula "6"))
                                             (rule "polySimp_addComm1" (formula "6") (term "0"))
                                             (rule "applyEqRigid" (formula "34") (term "1,1,0,0") (ifseqformula "22"))
                                             (rule "applyEqRigid" (formula "32") (term "0") (ifseqformula "22"))
                                             (rule "inEqSimp_homoInEq1" (formula "32"))
                                             (rule "polySimp_addComm1" (formula "32") (term "0"))
                                             (rule "applyEqRigid" (formula "20") (term "1,0,0,0") (ifseqformula "22"))
                                             (rule "applyEqRigid" (formula "35") (term "1,1,0,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "20") (term "1,0,0,0,1,0") (ifseqformula "22"))
                                             (rule "applyEq" (formula "25") (term "1") (ifseqformula "22"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "24"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1"))
                                             (rule "polySimp_rightDist" (formula "24") (term "1"))
                                             (rule "mul_literals" (formula "24") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                             (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                             (rule "polySimp_rightDist" (formula "6") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                             (rule "mul_literals" (formula "6") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "32"))
                                             (rule "polySimp_mulComm0" (formula "32") (term "1"))
                                             (rule "polySimp_rightDist" (formula "32") (term "1"))
                                             (rule "mul_literals" (formula "32") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "32") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "32") (term "1,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "24"))
                                             (rule "mul_literals" (formula "17") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                             (rule "add_literals" (formula "17") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                             (rule "mul_literals" (formula "17") (term "1"))
                                             (rule "elimGcdGeq_antec" (formula "17") (inst "elimGcdRightDiv=Z(4(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
                                             (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0"))
                                             (rule "leq_literals" (formula "17") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "17") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "17") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0"))
                                             (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "17") (term "0,0"))
                                             (rule "leq_literals" (formula "17") (term "0"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "25"))
                                             (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                                             (rule "mul_literals" (formula "11") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "11") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                             (rule "add_literals" (formula "11") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "11") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                             (rule "elimGcdLeq_antec" (formula "11") (inst "elimGcdRightDiv=quotient_0") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0"))
                                             (rule "leq_literals" (formula "11") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "neg_literal" (formula "11") (term "0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                                             (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "11") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                                             (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "11") (term "0,0"))
                                             (rule "qeq_literals" (formula "11") (term "0"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "6"))
                                             (rule "times_zero_1" (formula "5") (term "0,0"))
                                             (rule "add_zero_left" (formula "5") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                             (rule "mul_literals" (formula "5") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "19"))
                                             (rule "leq_literals" (formula "5") (term "0"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "true_left" (formula "5"))
                                             (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "26"))
                                             (rule "polySimp_rightDist" (formula "31") (term "0,0"))
                                             (rule "mul_literals" (formula "31") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "31") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                                             (rule "add_literals" (formula "31") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "31") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "31"))
                                             (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                             (rule "polySimp_elimOne" (formula "31") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "35"))
                                             (rule "times_zero_1" (formula "34") (term "0,0"))
                                             (rule "add_zero_left" (formula "34") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "34"))
                                             (rule "mul_literals" (formula "34") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "34") (ifseqformula "18"))
                                             (rule "leq_literals" (formula "34") (term "0"))
                                              (builtin "One Step Simplification" (formula "34"))
                                             (rule "true_left" (formula "34"))
                                             (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "20"))
                                             (rule "polySimp_mulAssoc" (formula "25") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "25") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                             (rule "elimGcdLeq_antec" (formula "25") (inst "elimGcdRightDiv=Z(2(1(9(0(7(8(6(3(5(#))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
                                             (rule "neg_literal" (formula "25") (term "0,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "25") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "25") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_addLiterals" (formula "25") (term "0,0,0,0"))
                                             (rule "add_zero_right" (formula "25") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,0"))
                                             (rule "add_literals" (formula "25") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "25") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "25") (term "0,0"))
                                             (rule "qeq_literals" (formula "25") (term "0"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "inEqSimp_exactShadow3" (formula "53") (ifseqformula "27"))
                                             (rule "polySimp_rightDist" (formula "53") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "53") (term "1,0,0"))
                                             (rule "mul_literals" (formula "53") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "53") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "53") (term "0,0"))
                                             (rule "add_literals" (formula "53") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "53") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "53"))
                                             (rule "polySimp_mulLiterals" (formula "53") (term "0"))
                                             (rule "elimGcdLeq_antec" (formula "53") (inst "elimGcdRightDiv=quotient_0") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                             (rule "mul_literals" (formula "53") (term "0,1,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "53") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "53"))
                                             (rule "neg_literal" (formula "53") (term "0,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "53") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "53") (term "0,0"))
                                             (rule "add_literals" (formula "53") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "53") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "53") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "53") (term "0,0"))
                                             (rule "add_literals" (formula "53") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "53") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "53") (term "0,0"))
                                             (rule "qeq_literals" (formula "53") (term "0"))
                                              (builtin "One Step Simplification" (formula "53"))
                                             (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "11"))
                                             (rule "mul_literals" (formula "9") (term "0,0"))
                                             (rule "add_zero_left" (formula "9") (term "0"))
                                             (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "19"))
                                             (rule "leq_literals" (formula "9") (term "0"))
                                              (builtin "One Step Simplification" (formula "9"))
                                             (rule "true_left" (formula "9"))
                                             (rule "inEqSimp_exactShadow3" (formula "55") (ifseqformula "53"))
                                             (rule "times_zero_1" (formula "55") (term "0,0"))
                                             (rule "add_zero_left" (formula "55") (term "0"))
                                             (rule "inEqSimp_subsumption1" (formula "55") (ifseqformula "18"))
                                             (rule "leq_literals" (formula "55") (term "0"))
                                              (builtin "One Step Simplification" (formula "55"))
                                             (rule "true_left" (formula "55"))
                                             (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "32"))
                                             (rule "times_zero_1" (formula "30") (term "0,0"))
                                             (rule "add_zero_left" (formula "30") (term "0"))
                                             (rule "inEqSimp_subsumption6" (formula "30") (ifseqformula "18"))
                                             (rule "greater_literals" (formula "30") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "30"))
                                             (rule "mul_literals" (formula "30") (term "1,0"))
                                             (rule "leq_literals" (formula "30") (term "0"))
                                              (builtin "One Step Simplification" (formula "30"))
                                             (rule "true_left" (formula "30"))
                                             (rule "commute_or_2" (formula "38") (term "0,1,1,0"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "7") (term "1,0") (ifseqformula "41"))
                                             (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "62"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "8") (term "0") (ifseqformula "42"))
                                             (rule "applyEq" (formula "8") (term "1,0,1") (ifseqformula "9"))
                                             (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "9"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "64") (term "0") (ifseqformula "43"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "65"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "40") (term "0") (ifseqformula "44"))
                                             (rule "replace_known_left" (formula "40") (term "0") (ifseqformula "41"))
                                              (builtin "One Step Simplification" (formula "40"))
                                             (rule "true_left" (formula "40"))
                                             (rule "commute_or" (formula "24") (term "0,0"))
                                             (rule "commute_or" (formula "25") (term "0,0"))
                                             (rule "cnf_rightDist" (formula "18") (term "0,1"))
                                             (rule "commute_and" (formula "42") (term "1,0,0,1,1,0"))
                                             (rule "shift_paren_or" (formula "25") (term "0,1,0"))
                                             (rule "cnf_rightDist" (formula "19") (term "0,0,1"))
                                             (rule "cnf_rightDist" (formula "19") (term "0,1,1"))
                                             (rule "returnUnfold" (formula "63") (term "1") (inst "#v0=o_2"))
                                             (rule "variableDeclarationAssign" (formula "63") (term "1"))
                                             (rule "variableDeclaration" (formula "63") (term "1") (newnames "o_2"))
                                             (rule "returnUnfold" (formula "62") (term "1") (inst "#v0=o_2"))
                                             (rule "variableDeclarationAssign" (formula "62") (term "1"))
                                             (rule "variableDeclaration" (formula "62") (term "1") (newnames "o_3"))
                                             (rule "returnUnfold" (formula "61") (term "1") (inst "#v0=o_2"))
                                             (rule "variableDeclarationAssign" (formula "61") (term "1"))
                                             (rule "variableDeclaration" (formula "61") (term "1") (newnames "o_4"))
                                             (rule "returnUnfold" (formula "60") (term "1") (inst "#v0=o_2"))
                                             (rule "variableDeclarationAssign" (formula "60") (term "1"))
                                             (rule "variableDeclaration" (formula "60") (term "1") (newnames "o_5"))
                                             (rule "returnUnfold" (formula "59") (term "1") (inst "#v0=o_2"))
                                             (rule "variableDeclarationAssign" (formula "59") (term "1"))
                                             (rule "variableDeclaration" (formula "59") (term "1") (newnames "o_6"))
                                             (rule "commute_and" (formula "42") (term "0,0,0,0,0,1,1,0"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "11") (term "0") (ifseqformula "44"))
                                             (rule "replace_known_left" (formula "11") (term "0") (ifseqformula "12"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "true_left" (formula "11"))
                                             (rule "commute_or_2" (formula "24") (term "0"))
                                             (rule "commute_or_2" (formula "18") (term "0,0,1"))
                                             (rule "shift_paren_or" (formula "18") (term "1,0,1"))
                                             (rule "commute_or_2" (formula "25") (term "0,0,1,0"))
                                             (rule "inEqSimp_or_weaken2" (formula "25") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "25") (term "1,0,1,0,1,0"))
                                             (rule "add_literals" (formula "25") (term "0,1,0,1,0,1,0"))
                                             (rule "add_zero_left" (formula "25") (term "1,0,1,0,1,0"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "commute_or_2" (formula "19") (term "0,0,0,1"))
                                             (rule "commute_or" (formula "41") (term "0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "19") (term "0,0,1,1"))
                                             (rule "shift_paren_or" (formula "19") (term "1,0,0,1"))
                                             (rule "shift_paren_or" (formula "19") (term "1,0,1,1"))
                                             (rule "commute_or" (formula "18") (term "0,0,0,1"))
                                             (rule "commute_or" (formula "25") (term "0,0,1,0"))
                                             (rule "commute_or" (formula "19") (term "0,0,0,0,1"))
                                             (rule "commute_or" (formula "19") (term "0,0,0,1,1"))
                                             (rule "remove_parentheses_right" (formula "63") (term "1"))
                                             (rule "remove_parentheses_right" (formula "62") (term "1"))
                                             (rule "remove_parentheses_right" (formula "61") (term "1"))
                                             (rule "remove_parentheses_right" (formula "60") (term "1"))
                                             (rule "remove_parentheses_right" (formula "59") (term "1"))
                                             (rule "cnf_rightDist" (formula "42") (term "0,0,0,0,1,1,0"))
                                             (rule "commute_or" (formula "42") (term "0,0,0,0,0,1,1,0"))
                                             (rule "condition" (formula "63") (term "1"))
                                             (rule "condition" (formula "62") (term "1"))
                                             (rule "condition" (formula "61") (term "1"))
                                             (rule "condition" (formula "60") (term "1"))
                                             (rule "condition" (formula "59") (term "1"))
                                             (rule "cnf_rightDist" (formula "42") (term "1,0,0,0,0,1,1,0"))
                                             (rule "commute_or" (formula "42") (term "0,1,0,0,0,0,1,1,0"))
                                             (rule "cnf_rightDist" (formula "42") (term "0,0,0,0,0,1,1,0"))
                                             (rule "commute_or" (formula "42") (term "1,0,0,0,0,0,1,1,0"))
                                             (rule "all_pull_out3" (formula "41") (term "1,0"))
                                             (rule "shift_paren_or" (formula "41") (term "0,1,0"))
                                             (rule "shift_paren_or" (formula "41") (term "0,0,1,0"))
                                             (rule "commute_or_2" (formula "41") (term "0,0,0,1,0"))
                                             (rule "all_pull_out3" (formula "25") (term "0"))
                                             (rule "shift_paren_or" (formula "25") (term "0,0"))
                                             (rule "shift_paren_or" (formula "25") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "25") (term "0,0,0,0"))
                                             (rule "commute_or" (formula "25") (term "0,0,0,0,0"))
                                             (rule "shift_paren_and" (formula "42") (term "0,0,0,0,1,1,0"))
                                             (rule "cnf_rightDist" (formula "42") (term "0,0,0,1,1,0"))
                                             (rule "commute_or" (formula "42") (term "0,0,0,0,1,1,0"))
                                             (rule "cnf_rightDist" (formula "42") (term "1,0,0,0,1,1,0"))
                                              (builtin "One Step Simplification" (formula "42"))
                                             (rule "cnf_rightDist" (formula "42") (term "0,0,0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "42") (term "1,0,0,0,0,1,1,0"))
                                             (rule "commute_or" (formula "42") (term "0,1,0,0,0,0,1,1,0"))
                                             (rule "cnf_rightDist" (formula "42") (term "0,1,0,0,0,1,1,0"))
                                              (builtin "One Step Simplification" (formula "42"))
                                             (rule "cnf_rightDist" (formula "42") (term "0,0,0,0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "42") (term "1,0,0,0,0,0,1,1,0"))
                                              (builtin "One Step Simplification" (formula "42"))
                                             (rule "all_pull_out3" (formula "41") (term "0"))
                                             (rule "shift_paren_or" (formula "41") (term "0,0"))
                                             (rule "shift_paren_or" (formula "41") (term "0,0,0"))
                                             (rule "shift_paren_or" (formula "41") (term "0,0,0,0"))
                                             (rule "commute_or_2" (formula "41") (term "0,0,0,0,0"))
                                             (rule "commute_or" (formula "41") (term "0,0,0,0,0,0"))
                                             (rule "ifElseUnfold" (formula "63") (term "1") (inst "#boolv=x"))
                                             (rule "variableDeclaration" (formula "63") (term "1") (newnames "x"))
                                             (rule "equality_comparison_simple" (formula "63") (term "1"))
                                              (builtin "One Step Simplification" (formula "63"))
                                             (rule "replace_known_right" (formula "63") (term "0,0,1,0") (ifseqformula "67"))
                                              (builtin "One Step Simplification" (formula "63"))
                                             (rule "ifElseUnfold" (formula "62") (term "1") (inst "#boolv=x"))
                                             (rule "variableDeclaration" (formula "62") (term "1") (newnames "x_4"))
                                             (rule "equality_comparison_simple" (formula "62") (term "1"))
                                              (builtin "One Step Simplification" (formula "62"))
                                             (rule "replace_known_right" (formula "62") (term "0,0,1,0") (ifseqformula "67"))
                                              (builtin "One Step Simplification" (formula "62"))
                                             (rule "ifElseUnfold" (formula "61") (term "1") (inst "#boolv=x"))
                                             (rule "variableDeclaration" (formula "61") (term "1") (newnames "x_5"))
                                             (rule "equality_comparison_simple" (formula "61") (term "1"))
                                              (builtin "One Step Simplification" (formula "61"))
                                             (rule "replace_known_right" (formula "61") (term "0,0,1,0") (ifseqformula "67"))
                                              (builtin "One Step Simplification" (formula "61"))
                                             (rule "ifElseUnfold" (formula "60") (term "1") (inst "#boolv=x"))
                                             (rule "variableDeclaration" (formula "60") (term "1") (newnames "x_6"))
                                             (rule "equality_comparison_simple" (formula "60") (term "1"))
                                              (builtin "One Step Simplification" (formula "60"))
                                             (rule "replace_known_right" (formula "60") (term "0,0,1,0") (ifseqformula "67"))
                                              (builtin "One Step Simplification" (formula "60"))
                                             (rule "ifElseUnfold" (formula "59") (term "1") (inst "#boolv=x"))
                                             (rule "variableDeclaration" (formula "59") (term "1") (newnames "x_7"))
                                             (rule "equality_comparison_simple" (formula "59") (term "1"))
                                              (builtin "One Step Simplification" (formula "59"))
                                             (rule "replace_known_right" (formula "59") (term "0,0,1,0") (ifseqformula "67"))
                                              (builtin "One Step Simplification" (formula "59"))
                                             (rule "cnf_rightDist" (formula "42") (term "0,0,1,0,0,0,1,1,0"))
                                             (rule "cnf_rightDist" (formula "42") (term "0,0,0,0,0,0,1,1,0"))
                                             (rule "commute_or" (formula "42") (term "0,0,0,1,0,0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "42") (term "1,0,0,0,0,0,0,1,1,0"))
                                             (rule "shift_paren_or" (formula "42") (term "0,0,0,0,0,0,0,1,1,0"))
                                             (rule "shift_paren_and" (formula "42") (term "0,0,0,1,1,0"))
                                             (rule "shift_paren_and" (formula "42") (term "0,0,0,0,1,1,0"))
                                             (rule "shift_paren_and" (formula "42") (term "0,0,0,0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "42") (term "0,1,1,0"))
                                             (rule "commute_or" (formula "42") (term "0,0,1,1,0"))
                                             (rule "cnf_rightDist" (formula "42") (term "0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "42") (term "1,0,0,1,1,0"))
                                             (rule "commute_or" (formula "42") (term "0,1,0,0,1,1,0"))
                                             (rule "cnf_rightDist" (formula "42") (term "0,0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "42") (term "1,0,0,0,1,1,0"))
                                             (rule "commute_or" (formula "42") (term "0,1,0,0,0,1,1,0"))
                                             (rule "cnf_rightDist" (formula "42") (term "0,0,0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "42") (term "1,0,0,0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "42") (term "0,1,0,0,0,0,1,1,0"))
                                             (rule "commute_or" (formula "42") (term "0,0,1,0,0,0,0,1,1,0"))
                                             (rule "cnf_rightDist" (formula "42") (term "0,0,0,0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "42") (term "1,0,0,0,0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "42") (term "0,1,0,0,0,0,0,1,1,0"))
                                             (rule "commute_or" (formula "42") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "cnf_rightDist" (formula "42") (term "0,0,0,0,0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "42") (term "1,0,0,0,0,0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "42") (term "0,1,0,0,0,0,0,0,1,1,0"))
                                             (rule "allLeft" (formula "24") (inst "t=i_1_0"))
                                             (rule "replace_known_left" (formula "24") (term "0,0,0,0") (ifseqformula "41"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "inEqSimp_contradInEq1" (formula "24") (term "1,0") (ifseqformula "39"))
                                             (rule "qeq_literals" (formula "24") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "inEqSimp_contradInEq0" (formula "24") (term "1") (ifseqformula "40"))
                                             (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "24") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "24") (term "0,0,1"))
                                             (rule "polySimp_addComm0" (formula "24") (term "0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                                             (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "24") (term "0,0,1"))
                                             (rule "leq_literals" (formula "24") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "commute_or" (formula "43") (term "0,0,1,0,0,0,0,0,0,1,1,0"))
                                             (rule "cnf_rightDist" (formula "43") (term "0,0,0,0,0,0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "43") (term "1,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "ifElseSplit" (formula "64"))
                                             (branch "if x true"
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                             (branch "if x false"
                                                 (builtin "One Step Simplification" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "65"))
                                                (rule "true_left" (formula "1"))
                                                (rule "assignment" (formula "64") (term "1"))
                                                 (builtin "One Step Simplification" (formula "64"))
                                                (rule "blockEmpty" (formula "64") (term "1"))
                                                (rule "methodCallReturn" (formula "64") (term "1"))
                                                (rule "assignment" (formula "64") (term "1"))
                                                 (builtin "One Step Simplification" (formula "64"))
                                                (rule "methodCallEmpty" (formula "64") (term "1"))
                                                (rule "emptyModality" (formula "64") (term "1"))
                                                 (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "68")) (ifInst ""  (formula "48")))
                                                (rule "notRight" (formula "64"))
                                                (rule "eqSymm" (formula "1"))
                                                (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "1"))
                                                (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "68"))
                                                 (builtin "One Step Simplification" (formula "10"))
                                                (rule "applyEq" (formula "11") (term "1") (ifseqformula "1"))
                                                (rule "applyEq" (formula "10") (term "1,0") (ifseqformula "1"))
                                                (rule "ifElseSplit" (formula "63"))
                                                (branch "if x_4 true"
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                                (branch "if x_4 false"
                                                    (builtin "One Step Simplification" (formula "64"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "assignment" (formula "63") (term "1"))
                                                    (builtin "One Step Simplification" (formula "63"))
                                                   (rule "blockEmpty" (formula "63") (term "1"))
                                                   (rule "methodCallReturn" (formula "63") (term "1"))
                                                   (rule "assignment" (formula "63") (term "1"))
                                                    (builtin "One Step Simplification" (formula "63"))
                                                   (rule "methodCallEmpty" (formula "63") (term "1"))
                                                   (rule "emptyModality" (formula "63") (term "1"))
                                                    (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "67")) (ifInst ""  (formula "48")))
                                                   (rule "notRight" (formula "63"))
                                                   (rule "eqSymm" (formula "1"))
                                                   (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "5") (term "0") (ifseqformula "54"))
                                                   (rule "elimGcdGeq_antec" (formula "5") (inst "elimGcdRightDiv=add(Z(1(#)), l_1)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                                   (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,1,0"))
                                                   (rule "leq_literals" (formula "5") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                                   (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "5") (term "0,0"))
                                                   (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "5") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
                                                   (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                                   (rule "add_zero_left" (formula "5") (term "0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "5") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                                   (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "5") (term "0,0"))
                                                   (rule "leq_literals" (formula "5") (term "0"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "20") (term "0") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "20"))
                                                   (rule "andLeft" (formula "20"))
                                                   (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "5"))
                                                   (rule "inEqSimp_homoInEq1" (formula "19") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "19") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "19") (term "0,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,0"))
                                                   (rule "add_literals" (formula "19") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "19") (term "1,0,0,0"))
                                                   (rule "add_zero_right" (formula "19") (term "0,0,0"))
                                                   (rule "leq_literals" (formula "19") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "true_left" (formula "19"))
                                                   (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "58"))
                                                   (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                                   (rule "mul_literals" (formula "5") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                                   (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                   (rule "inEqSimp_subsumption0" (formula "16") (ifseqformula "5"))
                                                   (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "16") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "16") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "16") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0"))
                                                   (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "16") (term "0,0"))
                                                   (rule "qeq_literals" (formula "16") (term "0"))
                                                    (builtin "One Step Simplification" (formula "16"))
                                                   (rule "true_left" (formula "16"))
                                                   (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "57"))
                                                   (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                                   (rule "mul_literals" (formula "6") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                   (rule "add_literals" (formula "6") (term "0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                                   (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                   (rule "inEqSimp_subsumption0" (formula "16") (ifseqformula "6"))
                                                   (rule "leq_literals" (formula "16") (term "0"))
                                                    (builtin "One Step Simplification" (formula "16"))
                                                   (rule "true_left" (formula "16"))
                                                   (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "5"))
                                                   (rule "times_zero_1" (formula "15") (term "0,0"))
                                                   (rule "add_zero_left" (formula "15") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                                   (rule "mul_literals" (formula "15") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "23"))
                                                   (rule "leq_literals" (formula "15") (term "0"))
                                                    (builtin "One Step Simplification" (formula "15"))
                                                   (rule "true_left" (formula "15"))
                                                   (rule "distr_forallAnd" (formula "19"))
                                                   (rule "andLeft" (formula "19"))
                                                   (rule "distr_forallAnd" (formula "21"))
                                                   (rule "andLeft" (formula "21"))
                                                   (rule "ifElseSplit" (formula "65"))
                                                   (branch "if x_5 true"
                                                       (builtin "One Step Simplification" (formula "66"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "closeFalse" (formula "1"))
                                                   )
                                                   (branch "if x_5 false"
                                                       (builtin "One Step Simplification" (formula "66"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "assignment" (formula "65") (term "1"))
                                                       (builtin "One Step Simplification" (formula "65"))
                                                      (rule "blockEmpty" (formula "65") (term "1"))
                                                      (rule "commute_or" (formula "46") (term "0,1,0,0,0,0,0,0,0,1,1,0"))
                                                      (rule "ifElseSplit" (formula "64"))
                                                      (branch "if x_6 true"
                                                          (builtin "One Step Simplification" (formula "65"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "closeFalse" (formula "1"))
                                                      )
                                                      (branch "if x_6 false"
                                                          (builtin "One Step Simplification" (formula "65"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "true_left" (formula "1"))
                                                         (rule "assignment" (formula "64") (term "1"))
                                                          (builtin "One Step Simplification" (formula "64"))
                                                         (rule "blockEmpty" (formula "64") (term "1"))
                                                         (rule "ifElseSplit" (formula "63"))
                                                         (branch "if x_7 true"
                                                             (builtin "One Step Simplification" (formula "64"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "closeFalse" (formula "1"))
                                                         )
                                                         (branch "if x_7 false"
                                                             (builtin "One Step Simplification" (formula "64"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "true_left" (formula "1"))
                                                            (rule "assignment" (formula "63") (term "1"))
                                                             (builtin "One Step Simplification" (formula "63"))
                                                            (rule "blockEmpty" (formula "63") (term "1"))
                                                            (rule "cnf_rightDist" (formula "46") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                                            (rule "methodCallReturn" (formula "65") (term "1"))
                                                            (rule "assignment" (formula "65") (term "1"))
                                                             (builtin "One Step Simplification" (formula "65"))
                                                            (rule "methodCallReturn" (formula "64") (term "1"))
                                                            (rule "assignment" (formula "64") (term "1"))
                                                             (builtin "One Step Simplification" (formula "64"))
                                                            (rule "methodCallReturn" (formula "63") (term "1"))
                                                            (rule "assignment" (formula "63") (term "1"))
                                                             (builtin "One Step Simplification" (formula "63"))
                                                            (rule "methodCallEmpty" (formula "65") (term "1"))
                                                            (rule "methodCallEmpty" (formula "64") (term "1"))
                                                            (rule "methodCallEmpty" (formula "63") (term "1"))
                                                            (rule "emptyModality" (formula "65") (term "1"))
                                                             (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "69")) (ifInst ""  (formula "51")))
                                                            (rule "notRight" (formula "65"))
                                                            (rule "eqSymm" (formula "1"))
                                                            (rule "emptyModality" (formula "65") (term "1"))
                                                             (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "69")) (ifInst ""  (formula "52")))
                                                            (rule "notRight" (formula "65"))
                                                            (rule "eqSymm" (formula "1"))
                                                            (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "11") (term "0") (ifseqformula "58"))
                                                            (rule "inEqSimp_homoInEq1" (formula "11"))
                                                            (rule "polySimp_mulLiterals" (formula "11") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "11") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "11"))
                                                            (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "11") (term "1"))
                                                            (rule "mul_literals" (formula "11") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                                            (rule "elimGcdLeq_antec" (formula "11") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_0)") (inst "elimGcdLeftDiv=j_0") (inst "elimGcd=Z(2(#))"))
                                                            (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0"))
                                                            (rule "leq_literals" (formula "11") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "11"))
                                                            (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0"))
                                                            (rule "neg_literal" (formula "11") (term "0,0,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                                                            (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "11") (term "0,0"))
                                                            (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "11") (term "0,0,0"))
                                                            (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                                            (rule "add_zero_left" (formula "11") (term "0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "11") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                                                            (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "11") (term "0,0"))
                                                            (rule "qeq_literals" (formula "11") (term "0"))
                                                             (builtin "One Step Simplification" (formula "11"))
                                                            (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "11"))
                                                            (rule "times_zero_1" (formula "12") (term "0,0"))
                                                            (rule "add_zero_left" (formula "12") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                                            (rule "mul_literals" (formula "12") (term "1"))
                                                            (rule "inEqSimp_subsumption1" (formula "65") (ifseqformula "12"))
                                                            (rule "leq_literals" (formula "65") (term "0"))
                                                             (builtin "One Step Simplification" (formula "65"))
                                                            (rule "true_left" (formula "65"))
                                                            (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "63"))
                                                            (rule "mul_literals" (formula "12") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                                            (rule "mul_literals" (formula "12") (term "1"))
                                                            (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "28"))
                                                            (rule "leq_literals" (formula "12") (term "0"))
                                                             (builtin "One Step Simplification" (formula "12"))
                                                            (rule "true_left" (formula "12"))
                                                            (rule "emptyModality" (formula "65") (term "1"))
                                                             (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "69")) (ifInst ""  (formula "54")))
                                                            (rule "notRight" (formula "65"))
                                                            (rule "eqSymm" (formula "1"))
                                                            (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "11") (term "0") (ifseqformula "60"))
                                                            (rule "inEqSimp_commuteGeq" (formula "11"))
                                                            (rule "inEqSimp_subsumption4" (formula "11") (ifseqformula "12"))
                                                            (rule "greater_literals" (formula "11") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "11"))
                                                            (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                                                            (rule "mul_literals" (formula "11") (term "0,0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "11") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "11") (term "1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                                                            (rule "mul_literals" (formula "11") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "11") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                                                            (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "11") (term "0,0"))
                                                            (rule "qeq_literals" (formula "11") (term "0"))
                                                             (builtin "One Step Simplification" (formula "11"))
                                                            (rule "true_left" (formula "11"))
                                                            (rule "commute_or_2" (formula "49") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                                            (rule "allLeft" (formula "31") (inst "t=l_1"))
                                                            (rule "replace_known_left" (formula "31") (term "0,0,0,0") (ifseqformula "17"))
                                                             (builtin "One Step Simplification" (formula "31"))
                                                            (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0") (ifseqformula "18"))
                                                            (rule "qeq_literals" (formula "31") (term "0,1,0"))
                                                             (builtin "One Step Simplification" (formula "31"))
                                                            (rule "inEqSimp_contradInEq0" (formula "31") (term "1") (ifseqformula "8"))
                                                            (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1"))
                                                            (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1"))
                                                            (rule "mul_literals" (formula "31") (term "0,1,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "31") (term "0,0,1"))
                                                            (rule "polySimp_addComm0" (formula "31") (term "0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1"))
                                                            (rule "add_literals" (formula "31") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "31") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "31") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "31") (term "0,1"))
                                                             (builtin "One Step Simplification" (formula "31"))
                                                            (rule "shift_paren_or" (formula "50") (term "0,0,0,0,0,0,0,0,0,1,1,0"))
                                                            (rule "commute_or_2" (formula "50") (term "0,1,0,0,0,0,0,0,0,0,1,1,0"))
                                                            (rule "allLeft" (formula "23") (inst "t=l_0"))
                                                            (rule "inEqSimp_commuteGeq" (formula "23") (term "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "23") (term "1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,1,0"))
                                                            (rule "add_literals" (formula "23") (term "1,1,0,1,0"))
                                                            (rule "times_zero_1" (formula "23") (term "1,0,1,0"))
                                                            (rule "add_zero_right" (formula "23") (term "0,1,0"))
                                                            (rule "qeq_literals" (formula "23") (term "1,0"))
                                                             (builtin "One Step Simplification" (formula "23"))
                                                            (rule "inEqSimp_contradInEq1" (formula "23") (term "1") (ifseqformula "66"))
                                                            (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,1"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0,1"))
                                                            (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "23") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "23") (term "0,1"))
                                                             (builtin "One Step Simplification" (formula "23"))
                                                            (rule "notLeft" (formula "23"))
                                                            (rule "allLeft" (formula "25") (inst "t=j_0"))
                                                            (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "16"))
                                                             (builtin "One Step Simplification" (formula "25"))
                                                            (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "13"))
                                                            (rule "qeq_literals" (formula "25") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "25"))
                                                            (rule "inEqSimp_antiSymm" (formula "25") (ifseqformula "7"))
                                                            (rule "applyEqRigid" (formula "13") (term "0") (ifseqformula "25"))
                                                            (rule "applyEq" (formula "11") (term "0") (ifseqformula "24"))
                                                            (rule "inEqSimp_homoInEq0" (formula "11"))
                                                            (rule "polySimp_addComm1" (formula "11") (term "0"))
                                                            (rule "applyEqRigid" (formula "13") (term "0") (ifseqformula "24"))
                                                            (rule "applyEq" (formula "24") (term "0") (ifseqformula "23"))
                                                            (rule "inEqSimp_homoInEq1" (formula "24"))
                                                            (rule "polySimp_pullOutFactor1" (formula "24") (term "0"))
                                                            (rule "add_literals" (formula "24") (term "1,0"))
                                                            (rule "times_zero_1" (formula "24") (term "0"))
                                                            (rule "leq_literals" (formula "24"))
                                                            (rule "true_left" (formula "24"))
                                                            (rule "applyEqRigid" (formula "14") (term "0,0,2,0") (ifseqformula "23"))
                                                            (rule "applyEq" (formula "7") (term "0") (ifseqformula "23"))
                                                            (rule "inEqSimp_homoInEq0" (formula "7"))
                                                            (rule "polySimp_pullOutFactor1" (formula "7") (term "0"))
                                                            (rule "add_literals" (formula "7") (term "1,0"))
                                                            (rule "times_zero_1" (formula "7") (term "0"))
                                                            (rule "qeq_literals" (formula "7"))
                                                            (rule "true_left" (formula "7"))
                                                            (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
                                                            (rule "eqSymm" (formula "13"))
                                                            (rule "close" (formula "68") (ifseqformula "13"))
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                       (branch "CUT: j_0 * 2 < genHash(self.table[j_0 * 2], pow(2, i_2_0)) FALSE"
                                           (builtin "One Step Simplification" (formula "4"))
                                           (builtin "One Step Simplification" (formula "2"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "true_left" (formula "2"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "inEqSimp_gtRight" (formula "41"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "1") (term "0"))
                                          (rule "inEqSimp_ltRight" (formula "41"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "1") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "20"))
                                          (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0"))
                                          (rule "inEqSimp_gtToGeq" (formula "27") (term "1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "27") (term "0,1,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "28") (term "0,1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,1,1"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,1,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "17"))
                                          (rule "mul_literals" (formula "17") (term "1,0,0"))
                                          (rule "add_literals" (formula "17") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulAssoc" (formula "28") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "8"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "8") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "11") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "40"))
                                          (rule "polySimp_mulComm0" (formula "40") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "40") (term "0"))
                                          (rule "inEqSimp_gtToGeq" (formula "10") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "25"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "25") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "28") (term "0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulAssoc" (formula "28") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "0,1,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "28") (term "0,1,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "4"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0"))
                                          (rule "applyEq" (formula "4") (term "0,0,1,0") (ifseqformula "23"))
                                          (rule "applyEq" (formula "2") (term "0,0,1,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "1") (term "0,0,1,0") (ifseqformula "5"))
                                          (rule "jmod_axiom" (formula "9") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
                                          (rule "jmod_axiom" (formula "39") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "1,0"))
                                          (rule "Query_axiom_for_maskNull_java_lang_Object__in_java_util_VerifiedIdentityHashMap" (formula "5") (term "1") (inst "maskNull_sk=maskNull_sk_0") (inst "#p0=o_1") (inst "#res=o"))
                                          (rule "eqSymm" (formula "5") (term "1,0,1"))
                                          (rule "polySimp_sepNegMonomial" (formula "10"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                          (rule "polySimp_sepNegMonomial" (formula "40"))
                                          (rule "polySimp_mulLiterals" (formula "40") (term "0"))
                                          (rule "Query_axiom_for_maskNull_java_lang_Object__in_java_util_VerifiedIdentityHashMap" (formula "2") (term "0,0,1,0") (inst "maskNull_sk=maskNull_sk_1") (inst "#p0=o_1") (inst "#res=o"))
                                          (rule "eqSymm" (formula "2") (term "1,0,1"))
                                          (rule "Query_axiom_for_maskNull_java_lang_Object__in_java_util_VerifiedIdentityHashMap" (formula "1") (term "0,0,1,0") (inst "maskNull_sk=maskNull_sk_2") (inst "#p0=o_1") (inst "#res=o"))
                                          (rule "eqSymm" (formula "1") (term "1,0,1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "23"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                          (rule "polySimp_elimOne" (formula "23") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "30") (term "1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "30") (term "0,1,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "31") (term "0,1,0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0,0,0,0,1,1,0"))
                                          (rule "applyEq" (formula "25") (term "0") (ifseqformula "26"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "30") (term "1,0,1,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "30") (term "1,0,1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "30") (term "0,1,0,1,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "30") (term "1,1,0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,0,1"))
                                          (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "29") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,1,1"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,1,1"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,1,1"))
                                          (rule "mul_literals" (formula "14") (term "0,1,0,0,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,1,1"))
                                          (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0,1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "20"))
                                          (rule "mul_literals" (formula "20") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "29") (term "0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "30") (term "0,1,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                          (rule "polySimp_elimOne" (formula "11") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "0,0"))
                                          (rule "polySimp_elimOne" (formula "14") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,1"))
                                          (rule "mul_literals" (formula "13") (term "0,1,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "42"))
                                          (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                          (rule "polySimp_elimOne" (formula "42") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "13") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "0,0"))
                                          (rule "polySimp_elimOne" (formula "13") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "19") (term "0,1,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "27"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                          (rule "polySimp_elimOne" (formula "27") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "30") (term "1,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "30") (term "1,0,1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "30") (term "0,1,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "30") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "30") (term "1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "30") (term "0,1,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "30") (term "0,1,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                          (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                          (rule "polySimp_elimOne" (formula "6") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                          (rule "polySimp_elimOne" (formula "4") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "16"))
                                          (rule "leq_literals" (formula "24") (term "0"))
                                           (builtin "One Step Simplification" (formula "24"))
                                          (rule "true_left" (formula "24"))
                                          (rule "elimGcdLeq" (formula "29") (term "0,1,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "sub_literals" (formula "29") (term "0,0,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "29") (term "0,0,0,0,0,1,0,0,1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "29") (term "0,1,0,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "29") (term "1,1,0,1,0,0,1,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "29") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "29") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "29") (term "1,1,0,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "29") (term "1,0,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "29") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "29") (term "0,0,1,0,0,1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "29") (term "0,0,0,1,0,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "29") (term "0,1,0,0,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "29") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_addComm1" (formula "29") (term "0,0,1,0,0,1,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "29") (term "0,0,0,1,0,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "29") (term "1,1,0,1,0,0,1,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "29") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "29") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                          (rule "qeq_literals" (formula "29") (term "1,0,0,1,0,0,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "29"))
                                          (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "29") (term "0,0,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_addComm1" (formula "29") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "29") (term "0,0,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "29") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "29") (term "0,0,0,1,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "29") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "29") (term "0,0,0,1,0,0,0,1,1,0"))
                                          (rule "leq_literals" (formula "29") (term "0,0,1,0,0,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "29"))
                                          (rule "elimGcdGeq" (formula "14") (term "1,0,0,1,1") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=m") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,1,0,0,1,1"))
                                          (rule "add_zero_right" (formula "14") (term "0,0,0,0,0,1,0,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0,1,0,0,1,1"))
                                          (rule "add_zero_right" (formula "14") (term "0,0,0,1,0,1,0,0,1,1"))
                                          (rule "sub_literals" (formula "14") (term "0,0,0,0,0,0,1,0,0,1,1"))
                                          (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0,1,0,0,1,1"))
                                          (rule "times_zero_1" (formula "14") (term "0,0,0,1,0,1,0,0,1,1"))
                                          (rule "add_zero_right" (formula "14") (term "0,0,0,0,0,1,0,0,1,1"))
                                          (rule "add_zero_left" (formula "14") (term "0,0,1,0,1,0,0,1,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0,0,1,0,0,1,1"))
                                          (rule "add_literals" (formula "14") (term "1,1,0,0,0,1,0,0,1,1"))
                                          (rule "times_zero_1" (formula "14") (term "1,0,0,0,1,0,0,1,1"))
                                          (rule "add_zero_right" (formula "14") (term "0,0,0,1,0,0,1,1"))
                                          (rule "qeq_literals" (formula "14") (term "0,0,1,0,0,1,1"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "polySimp_pullOutFactor0" (formula "14") (term "0,0,1,0,0,1,1"))
                                          (rule "add_literals" (formula "14") (term "1,0,0,1,0,0,1,1"))
                                          (rule "times_zero_1" (formula "14") (term "0,0,1,0,0,1,1"))
                                          (rule "leq_literals" (formula "14") (term "0,1,0,0,1,1"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "elimGcdLeq" (formula "29") (term "1,0,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                          (rule "mul_literals" (formula "29") (term "0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "sub_literals" (formula "29") (term "0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "29") (term "0,0,0,0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "29") (term "1,1,0,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "29") (term "1,0,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "29") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "29") (term "1,1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "29") (term "1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "29") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "29") (term "0,1,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "29") (term "0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "29") (term "0,0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "29") (term "0,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "29") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_addComm1" (formula "29") (term "0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "29") (term "0,0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "29") (term "1,1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "29") (term "1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "29") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "qeq_literals" (formula "29") (term "1,0,1,0,0,0,0,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "29"))
                                          (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_addComm1" (formula "29") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "29") (term "0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "29") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "29") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "29") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "29") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "leq_literals" (formula "29") (term "0,1,0,0,0,0,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "29"))
                                          (rule "elimGcdGeq" (formula "29") (term "1,1,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1,0,1,1,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "29") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0,1,1,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "29") (term "0,0,0,0,0,1,1,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "29") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                                          (rule "sub_literals" (formula "29") (term "0,0,0,0,0,0,1,1,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "29") (term "1,0,0,0,0,0,1,1,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "29") (term "0,0,1,0,1,1,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "29") (term "0,0,0,0,0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "29") (term "0,1,0,1,1,0,0,1,1,0"))
                                          (rule "add_literals" (formula "29") (term "1,0,1,0,1,1,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "29") (term "0,1,0,1,1,0,0,1,1,0"))
                                          (rule "leq_literals" (formula "29") (term "1,0,1,1,0,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "29"))
                                          (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,0,1,1,0,0,1,1,0"))
                                          (rule "add_literals" (formula "29") (term "1,1,0,0,1,1,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "29") (term "1,0,0,1,1,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "29") (term "0,0,1,1,0,0,1,1,0"))
                                          (rule "qeq_literals" (formula "29") (term "0,1,1,0,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "29"))
                                          (rule "elimGcdGeq" (formula "29") (term "0,1,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "29") (term "0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "29") (term "0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "29") (term "0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "sub_literals" (formula "29") (term "0,0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "29") (term "1,0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "29") (term "0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "29") (term "0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "29") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "29") (term "1,0,1,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "29") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "leq_literals" (formula "29") (term "1,0,0,1,0,0,0,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "29"))
                                          (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "29") (term "1,1,0,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "29") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "29") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "qeq_literals" (formula "29") (term "0,0,1,0,0,0,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "29"))
                                          (rule "newSym_eq" (formula "40") (inst "l=l_0") (inst "newSymDef=mul(result_1, Z(0(#)))"))
                                          (rule "times_zero_1" (formula "40") (term "1,1"))
                                          (rule "add_zero_right" (formula "40") (term "1"))
                                          (rule "applyEq" (formula "41") (term "0,0") (ifseqformula "40"))
                                          (rule "eqSymm" (formula "41"))
                                          (rule "applyEq" (formula "40") (term "0,0") (ifseqformula "41"))
                                          (rule "applyEq" (formula "43") (term "0") (ifseqformula "41"))
                                          (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "41"))
                                          (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                                          (rule "applyEq" (formula "42") (term "1,1") (ifseqformula "41"))
                                          (rule "applyEq" (formula "14") (term "0,0") (ifseqformula "41"))
                                          (rule "inEqSimp_homoInEq1" (formula "14") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                                          (rule "applyEq" (formula "14") (term "1,1,0,0,0,1") (ifseqformula "41"))
                                          (rule "applyEq" (formula "13") (term "1,1,0,0,1") (ifseqformula "41"))
                                          (rule "applyEq" (formula "39") (term "1") (ifseqformula "41"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0"))
                                          (rule "mul_literals" (formula "13") (term "0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0"))
                                          (rule "mul_literals" (formula "14") (term "0,1,0"))
                                          (rule "elimGcdGeq_antec" (formula "43") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                          (rule "leq_literals" (formula "43") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "43"))
                                          (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "43") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_addLiterals" (formula "43") (term "0,0,0,0"))
                                          (rule "add_zero_right" (formula "43") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "43") (term "0,0"))
                                          (rule "add_literals" (formula "43") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "43") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "43") (term "0,0"))
                                          (rule "leq_literals" (formula "43") (term "0"))
                                           (builtin "One Step Simplification" (formula "43"))
                                          (rule "elimGcdGeq" (formula "13") (term "1,0,0,1") (inst "elimGcdRightDiv=l_0") (inst "elimGcdLeftDiv=n") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0,1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,1,0,0,1"))
                                          (rule "sub_literals" (formula "13") (term "0,0,0,0,0,0,0,1,0,0,1"))
                                          (rule "mul_literals" (formula "13") (term "0,0,0,0,0,1,0,1,0,0,1"))
                                          (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0,0,1,0,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,1,0,1,0,0,1"))
                                          (rule "add_literals" (formula "13") (term "1,1,0,1,0,1,0,0,1"))
                                          (rule "times_zero_1" (formula "13") (term "1,0,1,0,1,0,0,1"))
                                          (rule "add_zero_right" (formula "13") (term "0,1,0,1,0,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0,0,1,0,0,1"))
                                          (rule "add_literals" (formula "13") (term "1,1,0,0,0,1,0,0,1"))
                                          (rule "times_zero_1" (formula "13") (term "1,0,0,0,1,0,0,1"))
                                          (rule "add_zero_right" (formula "13") (term "0,0,0,1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "0,0,1,0,1,0,0,1"))
                                          (rule "polySimp_pullOutFactor0" (formula "13") (term "0,1,0,1,0,0,1"))
                                          (rule "add_literals" (formula "13") (term "1,0,1,0,1,0,0,1"))
                                          (rule "times_zero_1" (formula "13") (term "0,1,0,1,0,0,1"))
                                          (rule "leq_literals" (formula "13") (term "1,0,1,0,0,1"))
                                           (builtin "One Step Simplification" (formula "13"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0,1,0,0,1"))
                                          (rule "add_literals" (formula "13") (term "1,1,0,0,1,0,0,1"))
                                          (rule "times_zero_1" (formula "13") (term "1,0,0,1,0,0,1"))
                                          (rule "add_zero_right" (formula "13") (term "0,0,1,0,0,1"))
                                          (rule "qeq_literals" (formula "13") (term "0,1,0,0,1"))
                                           (builtin "One Step Simplification" (formula "13"))
                                          (rule "elimGcdGeq" (formula "14") (term "1,0,0,0,1") (inst "elimGcdRightDiv=l_0") (inst "elimGcdLeftDiv=n") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0,1,0,0,0,1"))
                                          (rule "mul_literals" (formula "14") (term "0,0,0,0,0,1,0,1,0,0,0,1"))
                                          (rule "sub_literals" (formula "14") (term "0,0,0,0,0,0,0,1,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,1,0,0,0,1"))
                                          (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0,0,1,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,1,0,1,0,0,0,1"))
                                          (rule "add_literals" (formula "14") (term "1,1,0,1,0,1,0,0,0,1"))
                                          (rule "times_zero_1" (formula "14") (term "1,0,1,0,1,0,0,0,1"))
                                          (rule "add_zero_right" (formula "14") (term "0,1,0,1,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0,0,1,0,0,0,1"))
                                          (rule "add_literals" (formula "14") (term "1,1,0,0,0,1,0,0,0,1"))
                                          (rule "times_zero_1" (formula "14") (term "1,0,0,0,1,0,0,0,1"))
                                          (rule "add_zero_right" (formula "14") (term "0,0,0,1,0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "0,0,1,0,1,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor0" (formula "14") (term "0,1,0,1,0,0,0,1"))
                                          (rule "add_literals" (formula "14") (term "1,0,1,0,1,0,0,0,1"))
                                          (rule "times_zero_1" (formula "14") (term "0,1,0,1,0,0,0,1"))
                                          (rule "leq_literals" (formula "14") (term "1,0,1,0,0,0,1"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,1,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0,1,0,0,0,1"))
                                          (rule "add_literals" (formula "14") (term "1,1,0,0,1,0,0,0,1"))
                                          (rule "times_zero_1" (formula "14") (term "1,0,0,1,0,0,0,1"))
                                          (rule "add_zero_right" (formula "14") (term "0,0,1,0,0,0,1"))
                                          (rule "qeq_literals" (formula "14") (term "0,1,0,0,0,1"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "newSym_eq" (formula "12") (inst "l=l_1") (inst "newSymDef=mul(i_0, Z(0(#)))"))
                                          (rule "times_zero_1" (formula "12") (term "1,1"))
                                          (rule "add_zero_right" (formula "12") (term "1"))
                                          (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "12"))
                                          (rule "eqSymm" (formula "13"))
                                          (rule "applyEqRigid" (formula "11") (term "1,1") (ifseqformula "13"))
                                          (rule "applyEqRigid" (formula "14") (term "0,0") (ifseqformula "13"))
                                          (rule "inEqSimp_homoInEq1" (formula "14") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                                          (rule "applyEqRigid" (formula "9") (term "0,2,0") (ifseqformula "13"))
                                          (rule "applyEq" (formula "15") (term "1,1,0,0,0,1,1") (ifseqformula "13"))
                                          (rule "applyEqRigid" (formula "12") (term "0,0") (ifseqformula "13"))
                                          (rule "applyEqRigid" (formula "14") (term "1,1,0,0,0,1") (ifseqformula "13"))
                                          (rule "applyEq" (formula "10") (term "0") (ifseqformula "13"))
                                          (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "13"))
                                          (rule "inEqSimp_homoInEq0" (formula "15") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "15") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0"))
                                          (rule "mul_literals" (formula "14") (term "0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                          (rule "mul_literals" (formula "15") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0"))
                                          (rule "elimGcdGeq_antec" (formula "10") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0"))
                                          (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "10") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "add_zero_right" (formula "10") (term "0,0,0,0"))
                                          (rule "add_zero_right" (formula "10") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                                          (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "10") (term "0,0"))
                                          (rule "leq_literals" (formula "10") (term "0"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "elimGcdLeq" (formula "14") (term "0,0,0,1") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_1)") (inst "elimGcdLeftDiv=n") (inst "elimGcd=Z(2(#))"))
                                          (rule "sub_literals" (formula "14") (term "0,0,0,0,0,0,0,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0,0,0,0,1"))
                                          (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0,0,0,0,0,1"))
                                          (rule "mul_literals" (formula "14") (term "0,0,0,0,0,1,0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0,0,0,0,0,1"))
                                          (rule "add_literals" (formula "14") (term "1,1,0,0,0,0,0,0,1"))
                                          (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0,0,1"))
                                          (rule "add_zero_right" (formula "14") (term "0,0,0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,1,0,0,0,0,1"))
                                          (rule "add_literals" (formula "14") (term "1,1,0,1,0,0,0,0,1"))
                                          (rule "times_zero_1" (formula "14") (term "1,0,1,0,0,0,0,1"))
                                          (rule "add_zero_right" (formula "14") (term "0,1,0,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0,0,0,1"))
                                          (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "14") (term "0,0,1,0,0,0,0,1"))
                                          (rule "mul_literals" (formula "14") (term "0,0,0,1,0,0,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0,0,0,1"))
                                          (rule "add_literals" (formula "14") (term "0,0,0,0,0,0,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0,1,0,0,0,0,1"))
                                          (rule "polySimp_addComm1" (formula "14") (term "0,0,1,0,0,0,0,1"))
                                          (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,1,0,0,0,0,1"))
                                          (rule "add_literals" (formula "14") (term "1,1,0,1,0,0,0,0,1"))
                                          (rule "times_zero_1" (formula "14") (term "1,0,1,0,0,0,0,1"))
                                          (rule "add_zero_right" (formula "14") (term "0,1,0,0,0,0,1"))
                                          (rule "qeq_literals" (formula "14") (term "1,0,0,0,0,1"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0,1"))
                                          (rule "polySimp_addComm1" (formula "14") (term "0,0,0,0,0,0,1"))
                                          (rule "add_literals" (formula "14") (term "0,0,0,0,0,0,0,1"))
                                          (rule "add_zero_left" (formula "14") (term "0,0,0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor0" (formula "14") (term "0,0,0,0,0,1"))
                                          (rule "add_literals" (formula "14") (term "1,0,0,0,0,0,1"))
                                          (rule "times_zero_1" (formula "14") (term "0,0,0,0,0,1"))
                                          (rule "leq_literals" (formula "14") (term "0,0,0,0,1"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "elimGcdLeq" (formula "15") (term "0,0,0,1,1") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_1)") (inst "elimGcdLeftDiv=m") (inst "elimGcd=Z(2(#))"))
                                          (rule "mul_literals" (formula "15") (term "0,0,0,0,0,1,0,0,0,0,1,1"))
                                          (rule "sub_literals" (formula "15") (term "0,0,0,0,0,0,0,0,0,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0,0,0,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,0,0,0,1,1"))
                                          (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0,0,0,0,0,1,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,1,0,0,0,0,1,1"))
                                          (rule "add_literals" (formula "15") (term "1,1,0,1,0,0,0,0,1,1"))
                                          (rule "times_zero_1" (formula "15") (term "1,0,1,0,0,0,0,1,1"))
                                          (rule "add_zero_right" (formula "15") (term "0,1,0,0,0,0,1,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0,0,0,0,0,1,1"))
                                          (rule "add_literals" (formula "15") (term "1,1,0,0,0,0,0,0,1,1"))
                                          (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0,0,1,1"))
                                          (rule "add_zero_right" (formula "15") (term "0,0,0,0,0,0,1,1"))
                                          (rule "polySimp_rightDist" (formula "15") (term "0,0,1,0,0,0,0,1,1"))
                                          (rule "mul_literals" (formula "15") (term "0,0,0,1,0,0,0,0,1,1"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0,0,0,1,1"))
                                          (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0,0,0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "15") (term "0,1,0,0,0,0,1,1"))
                                          (rule "polySimp_addComm1" (formula "15") (term "0,0,1,0,0,0,0,1,1"))
                                          (rule "add_literals" (formula "15") (term "0,0,0,1,0,0,0,0,1,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,1,0,0,0,0,1,1"))
                                          (rule "add_literals" (formula "15") (term "1,1,0,1,0,0,0,0,1,1"))
                                          (rule "times_zero_1" (formula "15") (term "1,0,1,0,0,0,0,1,1"))
                                          (rule "add_zero_right" (formula "15") (term "0,1,0,0,0,0,1,1"))
                                          (rule "qeq_literals" (formula "15") (term "1,0,0,0,0,1,1"))
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0,0,1,1"))
                                          (rule "add_literals" (formula "15") (term "0,0,0,0,0,0,0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0,1,1"))
                                          (rule "polySimp_addComm1" (formula "15") (term "0,0,0,0,0,0,1,1"))
                                          (rule "add_literals" (formula "15") (term "0,0,0,0,0,0,0,1,1"))
                                          (rule "add_zero_left" (formula "15") (term "0,0,0,0,0,0,1,1"))
                                          (rule "polySimp_pullOutFactor0" (formula "15") (term "0,0,0,0,0,1,1"))
                                          (rule "add_literals" (formula "15") (term "1,0,0,0,0,0,1,1"))
                                          (rule "times_zero_1" (formula "15") (term "0,0,0,0,0,1,1"))
                                          (rule "leq_literals" (formula "15") (term "0,0,0,0,1,1"))
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "elimGcdGeq" (formula "15") (term "0") (inst "elimGcdRightDiv=add(Z(1(#)), l_1)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                          (rule "sub_literals" (formula "15") (term "0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0,0"))
                                          (rule "mul_literals" (formula "15") (term "0,0,0,0,0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,0"))
                                          (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,1,0,0"))
                                          (rule "add_literals" (formula "15") (term "1,1,0,1,0,0"))
                                          (rule "times_zero_1" (formula "15") (term "1,0,1,0,0"))
                                          (rule "add_zero_right" (formula "15") (term "0,1,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "15") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "15") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "15") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "15") (term "0,0,1,0,0"))
                                          (rule "mul_literals" (formula "15") (term "0,0,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "15") (term "0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "15") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,1,0,0"))
                                          (rule "add_literals" (formula "15") (term "1,1,0,1,0,0"))
                                          (rule "times_zero_1" (formula "15") (term "1,0,1,0,0"))
                                          (rule "add_zero_right" (formula "15") (term "0,1,0,0"))
                                          (rule "leq_literals" (formula "15") (term "1,0,0"))
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "15") (term "0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "15") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "15") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "15") (term "0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "15") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "15") (term "0,0,0"))
                                          (rule "add_literals" (formula "15") (term "1,0,0,0"))
                                          (rule "times_zero_1" (formula "15") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "15") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "elimGcdLeq" (formula "14") (term "0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_1)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0,0"))
                                          (rule "mul_literals" (formula "14") (term "0,0,0,0,0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0"))
                                          (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0,0,0"))
                                          (rule "sub_literals" (formula "14") (term "0,0,0,0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,1,0,0"))
                                          (rule "add_literals" (formula "14") (term "1,1,0,1,0,0"))
                                          (rule "times_zero_1" (formula "14") (term "1,0,1,0,0"))
                                          (rule "add_zero_right" (formula "14") (term "0,1,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "14") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "14") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "14") (term "0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "0,0,1,0,0"))
                                          (rule "mul_literals" (formula "14") (term "0,0,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "14") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,1,0,0"))
                                          (rule "add_literals" (formula "14") (term "1,1,0,1,0,0"))
                                          (rule "times_zero_1" (formula "14") (term "1,0,1,0,0"))
                                          (rule "add_zero_right" (formula "14") (term "0,1,0,0"))
                                          (rule "qeq_literals" (formula "14") (term "1,0,0"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "14") (term "0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "14") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "14") (term "0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "14") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "14") (term "0,0,0"))
                                          (rule "add_literals" (formula "14") (term "1,0,0,0"))
                                          (rule "times_zero_1" (formula "14") (term "0,0,0"))
                                          (rule "leq_literals" (formula "14") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "18"))
                                          (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                          (rule "mul_literals" (formula "24") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "24") (term "0"))
                                          (rule "add_literals" (formula "24") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                          (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                          (rule "polySimp_elimOne" (formula "24") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "44") (ifseqformula "18"))
                                          (rule "polySimp_rightDist" (formula "44") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0"))
                                          (rule "mul_literals" (formula "44") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "44") (term "0"))
                                          (rule "add_literals" (formula "44") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "44"))
                                          (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                                          (rule "elimGcdLeq_antec" (formula "44") (inst "elimGcdRightDiv=Z(1(1(9(0(7(8(6(3(5(#))))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                          (rule "neg_literal" (formula "44") (term "0,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "44") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "44"))
                                          (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "44") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_addLiterals" (formula "44") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "44") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "44") (term "0,0"))
                                          (rule "add_literals" (formula "44") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "44") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "44") (term "0,0"))
                                          (rule "qeq_literals" (formula "44") (term "0"))
                                           (builtin "One Step Simplification" (formula "44"))
                                          (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "18"))
                                          (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                                          (rule "mul_literals" (formula "11") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "11") (term "0"))
                                          (rule "add_literals" (formula "11") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                          (rule "elimGcdLeq_antec" (formula "11") (inst "elimGcdRightDiv=Z(1(1(9(0(7(8(6(3(5(#))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                          (rule "neg_literal" (formula "11") (term "0,0,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "11") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "11"))
                                          (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                                          (rule "polySimp_addLiterals" (formula "11") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                                          (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "11") (term "0,0"))
                                          (rule "qeq_literals" (formula "11") (term "0"))
                                           (builtin "One Step Simplification" (formula "11"))
                                          (rule "boxToDiamond" (formula "7") (term "1"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "notLeft" (formula "7"))
                                          (rule "boxToDiamond" (formula "3") (term "1"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "notLeft" (formula "3"))
                                          (rule "boxToDiamond" (formula "1") (term "1"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "nnf_imp2or" (formula "17") (term "1,0"))
                                          (rule "nnf_imp2or" (formula "18") (term "1,0,1,0"))
                                          (rule "nnf_imp2or" (formula "28") (term "0"))
                                          (rule "nnf_imp2or" (formula "29") (term "0"))
                                          (rule "commute_and" (formula "18") (term "0,0"))
                                          (rule "jdiv_axiom" (formula "20") (term "1,0"))
                                          (rule "eqSymm" (formula "20"))
                                          (rule "inEqSimp_subsumption1" (formula "20") (term "0,0") (ifseqformula "15"))
                                          (rule "leq_literals" (formula "20") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "eqSymm" (formula "20"))
                                          (rule "applyEqRigid" (formula "21") (term "1,0") (ifseqformula "20"))
                                          (rule "applyEq" (formula "18") (term "1,1,0,0,0,1,0") (ifseqformula "20"))
                                          (rule "applyEqRigid" (formula "27") (term "0") (ifseqformula "20"))
                                          (rule "applyEq" (formula "4") (term "0") (ifseqformula "20"))
                                          (rule "applyEqRigid" (formula "18") (term "1,1,1,0,0") (ifseqformula "20"))
                                          (rule "applyEq" (formula "30") (term "1,1,0,0,0,0") (ifseqformula "20"))
                                          (rule "applyEqRigid" (formula "17") (term "1,1,0,0,0") (ifseqformula "20"))
                                          (rule "applyEqRigid" (formula "29") (term "1,1,0,0,0,0") (ifseqformula "20"))
                                          (rule "nnf_imp2or" (formula "13") (term "0,0,1"))
                                          (rule "nnf_imp2or" (formula "13") (term "0,1,1"))
                                          (rule "nnf_imp2or" (formula "12") (term "0,1"))
                                          (rule "nnf_imp2or" (formula "29") (term "1,0"))
                                          (rule "nnf_imp2or" (formula "30") (term "1,0"))
                                          (rule "nnf_imp2or" (formula "18") (term "0"))
                                          (rule "nnf_imp2or" (formula "17") (term "0"))
                                          (rule "nnf_notAnd" (formula "30") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "30") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "30") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "30") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
                                          (rule "mul_literals" (formula "30") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "30") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "30") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "30") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "30") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "30") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "29") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "29") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "29") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "29") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "29") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "29") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "29") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "29") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "29") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                                          (rule "mul_literals" (formula "29") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "18") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "18") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                          (rule "mul_literals" (formula "18") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "17") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "17") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "17") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                          (rule "mul_literals" (formula "17") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "17") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "17") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "12") (term "0,0,1"))
                                          (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,1"))
                                          (rule "mul_literals" (formula "12") (term "0,1,1,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,1"))
                                          (rule "inEqSimp_notLeq" (formula "12") (term "0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0,1"))
                                          (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0,1"))
                                          (rule "add_literals" (formula "12") (term "0,0,0,0,0,0,1"))
                                          (rule "add_zero_left" (formula "12") (term "0,0,0,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "12") (term "1,0,0,0,1"))
                                          (rule "nnf_notAnd" (formula "29") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "29"))
                                          (rule "inEqSimp_notLeq" (formula "29") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,1,0,1,0"))
                                          (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,1,0"))
                                          (rule "add_literals" (formula "29") (term "0,0,0,1,0,1,0"))
                                          (rule "add_zero_left" (formula "29") (term "0,0,1,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,1,0"))
                                          (rule "nnf_notAnd" (formula "30") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "30"))
                                          (rule "inEqSimp_notGeq" (formula "30") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,1,0,1,0"))
                                          (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,1,0"))
                                          (rule "add_literals" (formula "30") (term "0,0,0,1,0,1,0"))
                                          (rule "add_zero_left" (formula "30") (term "0,0,1,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,1,0"))
                                          (rule "nnf_imp2or" (formula "18") (term "0,1,0"))
                                          (rule "nnf_notAnd" (formula "13") (term "0,0,0,1"))
                                          (rule "inEqSimp_notLeq" (formula "13") (term "0,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0,0,1"))
                                          (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0,0,1"))
                                          (rule "add_literals" (formula "13") (term "0,0,0,0,0,0,0,1"))
                                          (rule "add_zero_left" (formula "13") (term "0,0,0,0,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "13") (term "1,0,0,0,0,1"))
                                          (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,0,1"))
                                          (rule "mul_literals" (formula "13") (term "0,1,1,0,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,0,1"))
                                          (rule "nnf_notAnd" (formula "13") (term "0,0,1,1"))
                                          (rule "inEqSimp_notLeq" (formula "13") (term "0,0,0,1,1"))
                                          (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0,1,1"))
                                          (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0,1,1"))
                                          (rule "add_literals" (formula "13") (term "0,0,0,0,0,0,1,1"))
                                          (rule "add_zero_left" (formula "13") (term "0,0,0,0,0,1,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,1,1"))
                                          (rule "polySimp_elimOne" (formula "13") (term "1,0,0,0,1,1"))
                                          (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0,1,1"))
                                          (rule "times_zero_1" (formula "13") (term "1,0,0,1,0,0,1,1"))
                                          (rule "add_zero_right" (formula "13") (term "0,0,1,0,0,1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,1,1"))
                                          (rule "mul_literals" (formula "13") (term "1,1,0,0,1,1"))
                                          (rule "nnf_imp2or" (formula "29") (term "0,1,1,0"))
                                          (rule "jdiv_axiom" (formula "41") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "41") (term "0,0,2,1"))
                                          (rule "eqSymm" (formula "41"))
                                          (rule "applyEqRigid" (formula "41") (term "1") (ifseqformula "42"))
                                          (rule "inEqSimp_subsumption6" (formula "41") (term "0,0") (ifseqformula "46"))
                                          (rule "mul_literals" (formula "41") (term "1,1,0,0,0"))
                                          (rule "greater_literals" (formula "41") (term "0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "41"))
                                          (rule "leq_literals" (formula "41") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "41"))
                                          (rule "polyDiv_pullOut" (formula "41") (term "0") (inst "polyDivCoeff=l_0"))
                                          (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,2,0"))
                                          (rule "equal_literals" (formula "41") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "41"))
                                          (rule "polySimp_pullOutFactor0" (formula "41") (term "0,0,0"))
                                          (rule "add_literals" (formula "41") (term "1,0,0,0"))
                                          (rule "times_zero_1" (formula "41") (term "0,0,0"))
                                          (rule "div_literals" (formula "41") (term "0,0"))
                                          (rule "add_zero_left" (formula "41") (term "0"))
                                           (builtin "One Step Simplification" (formula "41"))
                                          (rule "true_left" (formula "41"))
                                          (rule "nnf_imp2or" (formula "30") (term "0,1,1,0"))
                                          (rule "nnf_notAnd" (formula "18") (term "0,0,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "18") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "18") (term "0,1,1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "18") (term "0,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,0,1,0"))
                                          (rule "add_literals" (formula "18") (term "0,0,0,0,0,0,1,0"))
                                          (rule "add_zero_left" (formula "18") (term "0,0,0,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "18") (term "1,0,0,0,1,0"))
                                          (rule "nnf_notAnd" (formula "18") (term "0,1,0,1,0"))
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "nnf_notAnd" (formula "29") (term "0,0,1,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "29") (term "1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "29") (term "0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0,1,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "29") (term "0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "29") (term "0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "29") (term "0,0,0,0,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "29") (term "0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "29") (term "1,0,0,0,1,1,0"))
                                          (rule "nnf_notAnd" (formula "30") (term "0,0,1,1,0"))
                                          (rule "jdiv_axiom" (formula "10") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "0,0,2,1"))
                                          (rule "eqSymm" (formula "10"))
                                          (rule "applyEqRigid" (formula "10") (term "1") (ifseqformula "11"))
                                          (rule "inEqSimp_subsumption6" (formula "10") (term "0,0") (ifseqformula "7"))
                                          (rule "times_zero_1" (formula "10") (term "1,1,0,0,0"))
                                          (rule "greater_literals" (formula "10") (term "0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "leq_literals" (formula "10") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "polyDiv_pullOut" (formula "10") (term "0") (inst "polyDivCoeff=l_1"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,2,0"))
                                          (rule "equal_literals" (formula "10") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "polySimp_pullOutFactor0" (formula "10") (term "0,0,0"))
                                          (rule "add_literals" (formula "10") (term "1,0,0,0"))
                                          (rule "times_zero_1" (formula "10") (term "0,0,0"))
                                          (rule "div_literals" (formula "10") (term "0,0"))
                                          (rule "add_zero_left" (formula "10") (term "0"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "true_left" (formula "10"))
                                          (rule "nnf_notAnd" (formula "30") (term "0,0,0,1,1,0"))
                                          (rule "nnf_notOr" (formula "30") (term "1,0,0,1,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "30") (term "1,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "30") (term "1,0,0,1,1,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "30") (term "0,0,1,1,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "30") (term "1,1,1,0,0,1,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "30") (term "0,1,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "30") (term "0,1,0,0,0,1,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,1,0,0,1,1,0"))
                                          (rule "add_literals" (formula "30") (term "0,0,0,0,1,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "30") (term "0,0,0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "0,1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "30") (term "1,0,1,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "30") (term "1,0,1,0,0,1,1,0"))
                                          (rule "nnf_notOr" (formula "30") (term "1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "30") (term "0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "30") (term "0,1,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,1,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "30") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "30") (term "0,0,0,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "30") (term "1,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "30") (term "1,0,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "30") (term "1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "30") (term "1,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "30") (term "1,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "30") (term "0,1,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "30") (term "1,1,1,1,0,0,0,1,1,0"))
                                          (rule "nnf_notAnd" (formula "30") (term "0,0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "17") (term "0"))
                                          (rule "nnf_notOr" (formula "30") (term "1,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "30") (term "0,1,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "30") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "30") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,1,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "30") (term "1,0,1,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "30") (term "1,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,1,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "30") (term "1,1,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "30") (term "1,1,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,1,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "30") (term "0,1,1,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "30") (term "1,1,1,1,0,0,0,0,1,1,0"))
                                          (rule "nnf_notOr" (formula "30") (term "0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "30") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "30") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "30") (term "0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "30") (term "0,1,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "30") (term "0,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "30") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "30") (term "1,0,0,0,0,0,0,1,1,0"))
                                          (rule "methodBodyExpand" (formula "48") (term "1") (newnames "heapBefore_maskNull_0,savedHeapBefore_maskNull"))
                                           (builtin "One Step Simplification" (formula "48"))
                                          (rule "commute_or" (formula "29") (term "0,0"))
                                          (rule "methodBodyExpand" (formula "47") (term "1") (newnames "heapBefore_maskNull_1,savedHeapBefore_maskNull_0"))
                                           (builtin "One Step Simplification" (formula "47"))
                                          (rule "methodBodyExpand" (formula "46") (term "1") (newnames "heapBefore_maskNull_2,savedHeapBefore_maskNull_1"))
                                           (builtin "One Step Simplification" (formula "46"))
                                          (rule "commute_or" (formula "30") (term "0,0"))
                                          (rule "commute_or" (formula "12") (term "0,0,1"))
                                          (rule "commute_or" (formula "13") (term "0,0,0,1"))
                                          (rule "commute_or" (formula "13") (term "0,0,1,1"))
                                          (rule "div_axiom" (formula "20") (term "1") (inst "quotient=quotient_0"))
                                          (rule "qeq_literals" (formula "20") (term "0,1,1"))
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "mul_literals" (formula "20") (term "1,1,1,1"))
                                          (rule "equal_literals" (formula "20") (term "0"))
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "andLeft" (formula "20"))
                                          (rule "andLeft" (formula "20"))
                                          (rule "polySimp_addComm1" (formula "22") (term "1"))
                                          (rule "add_literals" (formula "22") (term "0,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "21"))
                                          (rule "inEqSimp_homoInEq1" (formula "22"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "22") (term "0"))
                                          (rule "applyEqRigid" (formula "33") (term "1,1,0,0") (ifseqformula "20"))
                                          (rule "applyEq" (formula "32") (term "1,1,0,0") (ifseqformula "20"))
                                          (rule "applyEq" (formula "30") (term "0") (ifseqformula "20"))
                                          (rule "inEqSimp_homoInEq1" (formula "30"))
                                          (rule "polySimp_addComm1" (formula "30") (term "0"))
                                          (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "20"))
                                          (rule "applyEq" (formula "18") (term "1,1,0,0") (ifseqformula "20"))
                                          (rule "applyEq" (formula "4") (term "0") (ifseqformula "20"))
                                          (rule "inEqSimp_homoInEq1" (formula "4"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0"))
                                          (rule "applyEq" (formula "18") (term "1,0,0,0,1,0") (ifseqformula "20"))
                                          (rule "applyEq" (formula "17") (term "1,0,0,0") (ifseqformula "20"))
                                          (rule "applyEqRigid" (formula "23") (term "1") (ifseqformula "20"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "22"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1"))
                                          (rule "polySimp_rightDist" (formula "22") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                                          (rule "mul_literals" (formula "22") (term "0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "30"))
                                          (rule "polySimp_mulComm0" (formula "30") (term "1"))
                                          (rule "polySimp_rightDist" (formula "30") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "30") (term "1,1"))
                                          (rule "mul_literals" (formula "30") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "30") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                          (rule "polySimp_rightDist" (formula "4") (term "1"))
                                          (rule "mul_literals" (formula "4") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "47") (ifseqformula "22"))
                                          (rule "polySimp_rightDist" (formula "47") (term "0,0"))
                                          (rule "mul_literals" (formula "47") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "47") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "47") (term "0,0"))
                                          (rule "add_literals" (formula "47") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "47") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "47"))
                                          (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                          (rule "elimGcdLeq_antec" (formula "47") (inst "elimGcdRightDiv=quotient_0") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                          (rule "mul_literals" (formula "47") (term "0,1,0,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "47") (term "1,0,1,0"))
                                          (rule "neg_literal" (formula "47") (term "0,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "47") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "47"))
                                          (rule "polySimp_pullOutFactor0b" (formula "47") (term "0,0"))
                                          (rule "add_literals" (formula "47") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "47") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "47") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "47") (term "0,0"))
                                          (rule "add_literals" (formula "47") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "47") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "47") (term "0,0"))
                                          (rule "qeq_literals" (formula "47") (term "0"))
                                           (builtin "One Step Simplification" (formula "47"))
                                          (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "22"))
                                          (rule "mul_literals" (formula "15") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                          (rule "add_literals" (formula "15") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                          (rule "mul_literals" (formula "15") (term "1"))
                                          (rule "elimGcdGeq_antec" (formula "15") (inst "elimGcdRightDiv=Z(4(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "15") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_addLiterals" (formula "15") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "15") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                                          (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "15") (term "0,0"))
                                          (rule "leq_literals" (formula "15") (term "0"))
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "17"))
                                          (rule "polySimp_mulAssoc" (formula "22") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "22") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                          (rule "elimGcdLeq_antec" (formula "22") (inst "elimGcdRightDiv=Z(2(1(9(0(7(8(6(3(5(#))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0,0,1,0"))
                                          (rule "neg_literal" (formula "22") (term "0,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "22") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "22"))
                                          (rule "mul_literals" (formula "22") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_addLiterals" (formula "22") (term "0,0,0,0"))
                                          (rule "add_zero_right" (formula "22") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,0"))
                                          (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "22") (term "0,0"))
                                          (rule "qeq_literals" (formula "22") (term "0"))
                                           (builtin "One Step Simplification" (formula "22"))
                                          (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "24"))
                                          (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                                          (rule "mul_literals" (formula "9") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "9") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                          (rule "add_literals" (formula "9") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "9") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                          (rule "elimGcdLeq_antec" (formula "9") (inst "elimGcdRightDiv=quotient_0") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                          (rule "neg_literal" (formula "9") (term "0,0,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "9") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "9"))
                                          (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                                          (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "9") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                                          (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "9") (term "0,0"))
                                          (rule "qeq_literals" (formula "9") (term "0"))
                                           (builtin "One Step Simplification" (formula "9"))
                                          (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "4"))
                                          (rule "times_zero_1" (formula "3") (term "0,0"))
                                          (rule "add_zero_left" (formula "3") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                          (rule "mul_literals" (formula "3") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "17"))
                                          (rule "leq_literals" (formula "3") (term "0"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "25"))
                                          (rule "polySimp_rightDist" (formula "30") (term "0,0"))
                                          (rule "mul_literals" (formula "30") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "30") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                                          (rule "add_literals" (formula "30") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "30") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "30"))
                                          (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                          (rule "polySimp_elimOne" (formula "30") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "34"))
                                          (rule "times_zero_1" (formula "33") (term "0,0"))
                                          (rule "add_zero_left" (formula "33") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "33"))
                                          (rule "mul_literals" (formula "33") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "33") (ifseqformula "16"))
                                          (rule "leq_literals" (formula "33") (term "0"))
                                           (builtin "One Step Simplification" (formula "33"))
                                          (rule "true_left" (formula "33"))
                                          (rule "inEqSimp_exactShadow3" (formula "53") (ifseqformula "51"))
                                          (rule "times_zero_1" (formula "53") (term "0,0"))
                                          (rule "add_zero_left" (formula "53") (term "0"))
                                          (rule "inEqSimp_subsumption1" (formula "53") (ifseqformula "16"))
                                          (rule "leq_literals" (formula "53") (term "0"))
                                           (builtin "One Step Simplification" (formula "53"))
                                          (rule "true_left" (formula "53"))
                                          (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "30"))
                                          (rule "mul_literals" (formula "28") (term "0,0"))
                                          (rule "add_zero_left" (formula "28") (term "0"))
                                          (rule "inEqSimp_subsumption6" (formula "28") (ifseqformula "16"))
                                          (rule "mul_literals" (formula "28") (term "1,1,0"))
                                          (rule "greater_literals" (formula "28") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "28"))
                                          (rule "leq_literals" (formula "28") (term "0"))
                                           (builtin "One Step Simplification" (formula "28"))
                                          (rule "true_left" (formula "28"))
                                          (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "9"))
                                          (rule "times_zero_1" (formula "7") (term "0,0"))
                                          (rule "add_zero_left" (formula "7") (term "0"))
                                          (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "17"))
                                          (rule "leq_literals" (formula "7") (term "0"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "true_left" (formula "7"))
                                          (rule "commute_or_2" (formula "36") (term "0,1,1,0"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "5") (term "0") (ifseqformula "39"))
                                          (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "6"))
                                          (rule "applyEq" (formula "5") (term "1,0,1") (ifseqformula "6"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "40"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "41"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "38") (term "0") (ifseqformula "42"))
                                          (rule "replace_known_left" (formula "38") (term "0") (ifseqformula "39"))
                                           (builtin "One Step Simplification" (formula "38"))
                                          (rule "true_left" (formula "38"))
                                          (rule "commute_or" (formula "22") (term "0,0"))
                                          (rule "cnf_rightDist" (formula "16") (term "0,1"))
                                          (rule "commute_and" (formula "40") (term "1,0,0,1,1,0"))
                                          (rule "shift_paren_or" (formula "23") (term "0,1,0"))
                                          (rule "cnf_rightDist" (formula "17") (term "0,0,1"))
                                          (rule "cnf_rightDist" (formula "17") (term "0,1,1"))
                                          (rule "returnUnfold" (formula "59") (term "1") (inst "#v0=o_2"))
                                          (rule "variableDeclarationAssign" (formula "59") (term "1"))
                                          (rule "variableDeclaration" (formula "59") (term "1") (newnames "o_2"))
                                          (rule "returnUnfold" (formula "58") (term "1") (inst "#v0=o_2"))
                                          (rule "variableDeclarationAssign" (formula "58") (term "1"))
                                          (rule "variableDeclaration" (formula "58") (term "1") (newnames "o_3"))
                                          (rule "returnUnfold" (formula "57") (term "1") (inst "#v0=o_2"))
                                          (rule "variableDeclarationAssign" (formula "57") (term "1"))
                                          (rule "variableDeclaration" (formula "57") (term "1") (newnames "o_4"))
                                          (rule "commute_and" (formula "40") (term "0,0,0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "22") (term "0"))
                                          (rule "commute_or_2" (formula "16") (term "0,0,1"))
                                          (rule "shift_paren_or" (formula "16") (term "1,0,1"))
                                          (rule "commute_or_2" (formula "23") (term "0,0,1,0"))
                                          (rule "inEqSimp_or_weaken2" (formula "23") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "1,0,1,0,1,0"))
                                          (rule "add_literals" (formula "23") (term "0,1,0,1,0,1,0"))
                                          (rule "add_zero_left" (formula "23") (term "1,0,1,0,1,0"))
                                           (builtin "One Step Simplification" (formula "23"))
                                          (rule "commute_or_2" (formula "17") (term "0,0,0,1"))
                                          (rule "commute_or_2" (formula "17") (term "0,0,1,1"))
                                          (rule "commute_or" (formula "39") (term "0,0,1,1,0"))
                                          (rule "commute_or" (formula "16") (term "0,0,0,1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "9") (term "0") (ifseqformula "42"))
                                          (rule "replace_known_left" (formula "9") (term "0") (ifseqformula "10"))
                                           (builtin "One Step Simplification" (formula "9"))
                                          (rule "true_left" (formula "9"))
                                          (rule "shift_paren_or" (formula "17") (term "1,0,0,1"))
                                          (rule "commute_or" (formula "23") (term "0,0,1,0"))
                                          (rule "shift_paren_or" (formula "17") (term "1,0,1,1"))
                                          (rule "commute_or" (formula "17") (term "0,0,0,0,1"))
                                          (rule "commute_or" (formula "17") (term "0,0,0,1,1"))
                                          (rule "remove_parentheses_right" (formula "59") (term "1"))
                                          (rule "remove_parentheses_right" (formula "58") (term "1"))
                                          (rule "remove_parentheses_right" (formula "57") (term "1"))
                                          (rule "cnf_rightDist" (formula "40") (term "0,0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "40") (term "0,0,0,0,0,1,1,0"))
                                          (rule "condition" (formula "59") (term "1"))
                                          (rule "condition" (formula "58") (term "1"))
                                          (rule "condition" (formula "57") (term "1"))
                                          (rule "cnf_rightDist" (formula "40") (term "1,0,0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "40") (term "0,1,0,0,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "40") (term "0,0,0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "40") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "all_pull_out3" (formula "39") (term "1,0"))
                                          (rule "shift_paren_or" (formula "39") (term "0,1,0"))
                                          (rule "shift_paren_or" (formula "39") (term "0,0,1,0"))
                                          (rule "commute_or_2" (formula "39") (term "0,0,0,1,0"))
                                          (rule "all_pull_out3" (formula "23") (term "0"))
                                          (rule "shift_paren_or" (formula "23") (term "0,0"))
                                          (rule "shift_paren_or" (formula "23") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "23") (term "0,0,0,0"))
                                          (rule "commute_or" (formula "23") (term "0,0,0,0,0"))
                                          (rule "shift_paren_and" (formula "40") (term "0,0,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "40") (term "0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "40") (term "0,0,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "40") (term "1,0,0,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "40"))
                                          (rule "cnf_rightDist" (formula "40") (term "0,0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "40") (term "1,0,0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "40") (term "0,1,0,0,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "40") (term "0,1,0,0,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "40"))
                                          (rule "cnf_rightDist" (formula "40") (term "0,0,0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "40") (term "1,0,0,0,0,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "40"))
                                          (rule "all_pull_out3" (formula "39") (term "0"))
                                          (rule "shift_paren_or" (formula "39") (term "0,0"))
                                          (rule "shift_paren_or" (formula "39") (term "0,0,0"))
                                          (rule "shift_paren_or" (formula "39") (term "0,0,0,0"))
                                          (rule "commute_or_2" (formula "39") (term "0,0,0,0,0"))
                                          (rule "commute_or" (formula "39") (term "0,0,0,0,0,0"))
                                          (rule "ifElseUnfold" (formula "59") (term "1") (inst "#boolv=x"))
                                          (rule "variableDeclaration" (formula "59") (term "1") (newnames "x"))
                                          (rule "equality_comparison_simple" (formula "59") (term "1"))
                                           (builtin "One Step Simplification" (formula "59"))
                                          (rule "replace_known_right" (formula "59") (term "0,0,1,0") (ifseqformula "63"))
                                           (builtin "One Step Simplification" (formula "59"))
                                          (rule "ifElseUnfold" (formula "58") (term "1") (inst "#boolv=x"))
                                          (rule "variableDeclaration" (formula "58") (term "1") (newnames "x_4"))
                                          (rule "equality_comparison_simple" (formula "58") (term "1"))
                                           (builtin "One Step Simplification" (formula "58"))
                                          (rule "replace_known_right" (formula "58") (term "0,0,1,0") (ifseqformula "63"))
                                           (builtin "One Step Simplification" (formula "58"))
                                          (rule "ifElseUnfold" (formula "57") (term "1") (inst "#boolv=x"))
                                          (rule "variableDeclaration" (formula "57") (term "1") (newnames "x_5"))
                                          (rule "equality_comparison_simple" (formula "57") (term "1"))
                                           (builtin "One Step Simplification" (formula "57"))
                                          (rule "replace_known_right" (formula "57") (term "0,0,1,0") (ifseqformula "63"))
                                           (builtin "One Step Simplification" (formula "57"))
                                          (rule "cnf_rightDist" (formula "40") (term "0,0,0,0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "40") (term "1,0,0,0,0,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "40") (term "0,0,1,0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "40") (term "0,0,0,1,0,0,0,1,1,0"))
                                          (rule "shift_paren_or" (formula "40") (term "0,0,0,0,0,0,0,1,1,0"))
                                          (rule "shift_paren_and" (formula "40") (term "0,0,0,1,1,0"))
                                          (rule "shift_paren_and" (formula "40") (term "0,0,0,0,1,1,0"))
                                          (rule "shift_paren_and" (formula "40") (term "0,0,0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "40") (term "0,1,1,0"))
                                          (rule "commute_or" (formula "40") (term "0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "40") (term "0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "40") (term "1,0,0,1,1,0"))
                                          (rule "commute_or" (formula "40") (term "0,1,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "40") (term "0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "40") (term "1,0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "40") (term "0,1,0,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "40") (term "0,0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "40") (term "1,0,0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "40") (term "0,1,0,0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "40") (term "0,0,1,0,0,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "40") (term "0,0,0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "40") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "40") (term "0,1,0,0,0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "40") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "40") (term "0,0,0,0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "40") (term "1,0,0,0,0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "40") (term "0,1,0,0,0,0,0,0,1,1,0"))
                                          (rule "allLeft" (formula "22") (inst "t=i_1_0"))
                                          (rule "replace_known_left" (formula "22") (term "0,0,0,0") (ifseqformula "39"))
                                           (builtin "One Step Simplification" (formula "22"))
                                          (rule "inEqSimp_contradInEq1" (formula "22") (term "1,0") (ifseqformula "37"))
                                          (rule "qeq_literals" (formula "22") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "22"))
                                          (rule "inEqSimp_contradInEq0" (formula "22") (term "1") (ifseqformula "38"))
                                          (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "22") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "22") (term "0,0,1"))
                                          (rule "polySimp_addComm0" (formula "22") (term "0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1"))
                                          (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "22") (term "0,0,1"))
                                          (rule "leq_literals" (formula "22") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "22"))
                                          (rule "commute_or" (formula "41") (term "0,0,1,0,0,0,0,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "41") (term "0,0,0,0,0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "41") (term "1,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "ifElseSplit" (formula "60"))
                                          (branch "if x true"
                                              (builtin "One Step Simplification" (formula "61"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                          (branch "if x false"
                                              (builtin "One Step Simplification" (formula "61"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "assignment" (formula "60") (term "1"))
                                              (builtin "One Step Simplification" (formula "60"))
                                             (rule "blockEmpty" (formula "60") (term "1"))
                                             (rule "methodCallReturn" (formula "60") (term "1"))
                                             (rule "assignment" (formula "60") (term "1"))
                                              (builtin "One Step Simplification" (formula "60"))
                                             (rule "methodCallEmpty" (formula "60") (term "1"))
                                             (rule "emptyModality" (formula "60") (term "1"))
                                              (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "64")) (ifInst ""  (formula "46")))
                                             (rule "notRight" (formula "60"))
                                             (rule "eqSymm" (formula "1"))
                                             (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "64"))
                                              (builtin "One Step Simplification" (formula "8"))
                                             (rule "applyEq" (formula "9") (term "1") (ifseqformula "1"))
                                             (rule "applyEq" (formula "8") (term "1,0") (ifseqformula "1"))
                                             (rule "commute_or" (formula "41") (term "0,1,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "ifElseSplit" (formula "59"))
                                             (branch "if x_4 true"
                                                 (builtin "One Step Simplification" (formula "60"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                             (branch "if x_4 false"
                                                 (builtin "One Step Simplification" (formula "60"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "true_left" (formula "1"))
                                                (rule "assignment" (formula "59") (term "1"))
                                                 (builtin "One Step Simplification" (formula "59"))
                                                (rule "blockEmpty" (formula "59") (term "1"))
                                                (rule "methodCallReturn" (formula "59") (term "1"))
                                                (rule "assignment" (formula "59") (term "1"))
                                                 (builtin "One Step Simplification" (formula "59"))
                                                (rule "methodCallEmpty" (formula "59") (term "1"))
                                                (rule "emptyModality" (formula "59") (term "1"))
                                                 (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "63")) (ifInst ""  (formula "46")))
                                                (rule "notRight" (formula "59"))
                                                (rule "eqSymm" (formula "1"))
                                                (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "6") (term "0") (ifseqformula "52"))
                                                (rule "inEqSimp_commuteGeq" (formula "6"))
                                                (rule "elimGcdLeq_antec" (formula "6") (inst "elimGcdRightDiv=l_0") (inst "elimGcdLeftDiv=j_0") (inst "elimGcd=Z(2(#))"))
                                                (rule "leq_literals" (formula "6") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                                (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,0"))
                                                (rule "neg_literal" (formula "6") (term "0,0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                                (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "6") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                                (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "6") (term "0,0"))
                                                (rule "qeq_literals" (formula "6") (term "0"))
                                                 (builtin "One Step Simplification" (formula "6"))
                                                (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "6"))
                                                (rule "times_zero_1" (formula "7") (term "0,0"))
                                                (rule "add_zero_left" (formula "7") (term "0"))
                                                (rule "ifElseSplit" (formula "59"))
                                                (branch "if x_5 true"
                                                    (builtin "One Step Simplification" (formula "60"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                                (branch "if x_5 false"
                                                    (builtin "One Step Simplification" (formula "60"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "assignment" (formula "59") (term "1"))
                                                    (builtin "One Step Simplification" (formula "59"))
                                                   (rule "blockEmpty" (formula "59") (term "1"))
                                                   (rule "methodCallReturn" (formula "59") (term "1"))
                                                   (rule "assignment" (formula "59") (term "1"))
                                                    (builtin "One Step Simplification" (formula "59"))
                                                   (rule "methodCallEmpty" (formula "59") (term "1"))
                                                   (rule "emptyModality" (formula "59") (term "1"))
                                                    (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "63")) (ifInst ""  (formula "47")))
                                                   (rule "notRight" (formula "59"))
                                                   (rule "eqSymm" (formula "1"))
                                                   (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "6") (term "0") (ifseqformula "53"))
                                                   (rule "inEqSimp_commuteLeq" (formula "6"))
                                                   (rule "elimGcdGeq_antec" (formula "6") (inst "elimGcdRightDiv=l_0") (inst "elimGcdLeftDiv=j_0") (inst "elimGcd=Z(2(#))"))
                                                   (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0"))
                                                   (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,1,0"))
                                                   (rule "leq_literals" (formula "6") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                                   (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "6") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                                   (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "6") (term "0,0"))
                                                   (rule "leq_literals" (formula "6") (term "0"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "inEqSimp_antiSymm" (formula "6") (ifseqformula "7"))
                                                   (rule "applyEq" (formula "11") (term "0,0,2,0") (ifseqformula "6"))
                                                   (rule "applyEqRigid" (formula "9") (term "0") (ifseqformula "6"))
                                                   (rule "applyEq" (formula "7") (term "0") (ifseqformula "6"))
                                                   (rule "inEqSimp_homoInEq1" (formula "7"))
                                                   (rule "polySimp_pullOutFactor1" (formula "7") (term "0"))
                                                   (rule "add_literals" (formula "7") (term "1,0"))
                                                   (rule "times_zero_1" (formula "7") (term "0"))
                                                   (rule "leq_literals" (formula "7"))
                                                   (rule "true_left" (formula "7"))
                                                   (rule "applyEq" (formula "8") (term "0") (ifseqformula "6"))
                                                   (rule "applyEq" (formula "7") (term "0") (ifseqformula "6"))
                                                   (rule "inEqSimp_homoInEq0" (formula "7"))
                                                   (rule "polySimp_pullOutFactor1" (formula "7") (term "0"))
                                                   (rule "add_literals" (formula "7") (term "1,0"))
                                                   (rule "times_zero_1" (formula "7") (term "0"))
                                                   (rule "qeq_literals" (formula "7"))
                                                   (rule "true_left" (formula "7"))
                                                   (rule "inEqSimp_subsumption0" (formula "55") (ifseqformula "7"))
                                                   (rule "inEqSimp_homoInEq0" (formula "55") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "55") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "55") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "55") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "55") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "55") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0"))
                                                   (rule "add_literals" (formula "55") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "55") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "55") (term "0,0"))
                                                   (rule "qeq_literals" (formula "55") (term "0"))
                                                    (builtin "One Step Simplification" (formula "55"))
                                                   (rule "true_left" (formula "55"))
                                                   (rule "inEqSimp_exactShadow3" (formula "56") (ifseqformula "7"))
                                                   (rule "times_zero_1" (formula "56") (term "0,0"))
                                                   (rule "add_zero_left" (formula "56") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "56"))
                                                   (rule "mul_literals" (formula "56") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "56") (ifseqformula "19"))
                                                   (rule "leq_literals" (formula "56") (term "0"))
                                                    (builtin "One Step Simplification" (formula "56"))
                                                   (rule "true_left" (formula "56"))
                                                   (rule "cnf_rightDist" (formula "41") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                                   (rule "cut_direct" (formula "16") (term "0"))
                                                   (branch "CUT: l_0 <= -1 + l_1 TRUE"
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "inEqSimp_contradInEq0" (formula "18") (term "0") (ifseqformula "16"))
                                                      (rule "inEqSimp_homoInEq1" (formula "18") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "18") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,0"))
                                                      (rule "add_literals" (formula "18") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "18") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "18") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "18") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "true_left" (formula "18"))
                                                      (rule "inEqSimp_exactShadow3" (formula "56") (ifseqformula "16"))
                                                      (rule "times_zero_1" (formula "56") (term "0,0"))
                                                      (rule "add_zero_left" (formula "56") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "56"))
                                                      (rule "mul_literals" (formula "56") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "56"))
                                                      (rule "leq_literals" (formula "10") (term "0"))
                                                       (builtin "One Step Simplification" (formula "10"))
                                                      (rule "true_left" (formula "10"))
                                                      (rule "inEqSimp_exactShadow3" (formula "55") (ifseqformula "11"))
                                                      (rule "mul_literals" (formula "55") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "55"))
                                                      (rule "mul_literals" (formula "55") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "55") (ifseqformula "18"))
                                                      (rule "leq_literals" (formula "55") (term "0"))
                                                       (builtin "One Step Simplification" (formula "55"))
                                                      (rule "true_left" (formula "55"))
                                                      (rule "distr_forallAnd" (formula "16"))
                                                      (rule "andLeft" (formula "16"))
                                                      (rule "commute_or_2" (formula "41") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                                      (rule "shift_paren_or" (formula "41") (term "0,0,0,0,0,0,0,0,0,1,1,0"))
                                                      (rule "allLeft" (formula "17") (inst "t=l_0"))
                                                      (rule "replace_known_left" (formula "17") (term "0,0,0") (ifseqformula "8"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "inEqSimp_homoInEq0" (formula "17") (term "0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0"))
                                                      (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "17") (term "0,0"))
                                                      (rule "qeq_literals" (formula "17") (term "0"))
                                                       (builtin "One Step Simplification" (formula "17"))
                                                      (rule "inEqSimp_contradInEq0" (formula "17") (ifseqformula "15"))
                                                      (rule "andLeft" (formula "17"))
                                                      (rule "inEqSimp_homoInEq1" (formula "17"))
                                                      (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                                                      (rule "mul_literals" (formula "17") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "17") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "17") (term "0"))
                                                      (rule "add_literals" (formula "17") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "17") (term "1,0"))
                                                      (rule "add_zero_right" (formula "17") (term "0"))
                                                      (rule "leq_literals" (formula "17"))
                                                      (rule "closeFalse" (formula "17"))
                                                   )
                                                   (branch "CUT: l_0 <= -1 + l_1 FALSE"
                                                       (builtin "One Step Simplification" (formula "16"))
                                                      (rule "true_left" (formula "16"))
                                                      (rule "inEqSimp_leqRight" (formula "56"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "54"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                      (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "8"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                      (rule "inEqSimp_subsumption0" (formula "14") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "14") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "14") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "14") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
                                                      (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "14") (term "0,0"))
                                                      (rule "qeq_literals" (formula "14") (term "0"))
                                                       (builtin "One Step Simplification" (formula "14"))
                                                      (rule "true_left" (formula "14"))
                                                      (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "1"))
                                                      (rule "times_zero_1" (formula "12") (term "0,0"))
                                                      (rule "add_zero_left" (formula "12") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                                      (rule "mul_literals" (formula "12") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "20"))
                                                      (rule "leq_literals" (formula "12") (term "0"))
                                                       (builtin "One Step Simplification" (formula "12"))
                                                      (rule "true_left" (formula "12"))
                                                      (rule "cut_direct" (formula "17") (term "0"))
                                                      (branch "CUT: l_0 >= 1 + l_1 TRUE"
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "andLeft" (formula "18"))
                                                         (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "17"))
                                                         (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                                         (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "2") (term "0,0"))
                                                         (rule "qeq_literals" (formula "2") (term "0"))
                                                          (builtin "One Step Simplification" (formula "2"))
                                                         (rule "true_left" (formula "2"))
                                                         (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "8"))
                                                         (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                                                         (rule "mul_literals" (formula "16") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "16") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                                                         (rule "add_literals" (formula "16") (term "0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                                                         (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "16") (term "0"))
                                                         (rule "inEqSimp_subsumption0" (formula "1") (ifseqformula "16"))
                                                         (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "1") (term "0,0"))
                                                         (rule "qeq_literals" (formula "1") (term "0"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "true_left" (formula "1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "55"))
                                                         (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                                                         (rule "mul_literals" (formula "16") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "16") (term "0"))
                                                         (rule "add_literals" (formula "16") (term "0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                                                         (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "16") (term "0"))
                                                         (rule "inEqSimp_subsumption0" (formula "11") (ifseqformula "16"))
                                                         (rule "leq_literals" (formula "11") (term "0"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "true_left" (formula "11"))
                                                         (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "14"))
                                                         (rule "times_zero_1" (formula "10") (term "0,0"))
                                                         (rule "add_zero_left" (formula "10") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                         (rule "mul_literals" (formula "10") (term "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "21"))
                                                         (rule "leq_literals" (formula "10") (term "0"))
                                                          (builtin "One Step Simplification" (formula "10"))
                                                         (rule "true_left" (formula "10"))
                                                         (rule "distr_forallAnd" (formula "18"))
                                                         (rule "andLeft" (formula "18"))
                                                         (rule "distr_forallAnd" (formula "17"))
                                                         (rule "andLeft" (formula "17"))
                                                         (rule "commute_or_2" (formula "44") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                                         (rule "shift_paren_or" (formula "44") (term "0,0,0,0,0,0,0,0,0,1,1,0"))
                                                         (rule "allLeft" (formula "18") (inst "t=l_0"))
                                                         (rule "replace_known_left" (formula "18") (term "0,0,0") (ifseqformula "8"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0"))
                                                         (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "18") (term "0,0"))
                                                         (rule "qeq_literals" (formula "18") (term "0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "inEqSimp_contradInEq0" (formula "59") (ifseqformula "18"))
                                                         (rule "andLeft" (formula "59"))
                                                         (rule "inEqSimp_homoInEq1" (formula "59"))
                                                         (rule "polySimp_mulLiterals" (formula "59") (term "1,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "59") (term "0"))
                                                         (rule "add_literals" (formula "59") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "59") (term "1,0"))
                                                         (rule "add_zero_right" (formula "59") (term "0"))
                                                         (rule "leq_literals" (formula "59"))
                                                         (rule "closeFalse" (formula "59"))
                                                      )
                                                      (branch "CUT: l_0 >= 1 + l_1 FALSE"
                                                          (builtin "One Step Simplification" (formula "17"))
                                                         (rule "true_left" (formula "17"))
                                                         (rule "inEqSimp_geqRight" (formula "56"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                         (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "11") (term "0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "55") (term "0,1,1") (ifseqformula "3"))
                                                         (rule "applyEqRigid" (formula "11") (term "0,0,2,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq0" (formula "1"))
                                                         (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                                         (rule "add_literals" (formula "1") (term "1,0"))
                                                         (rule "times_zero_1" (formula "1") (term "0"))
                                                         (rule "qeq_literals" (formula "1"))
                                                         (rule "true_left" (formula "1"))
                                                         (rule "applyEqRigid" (formula "51") (term "0,0,0") (ifseqformula "2"))
                                                         (rule "applyEq" (formula "54") (term "0") (ifseqformula "2"))
                                                         (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                                         (rule "inEqSimp_homoInEq1" (formula "3"))
                                                         (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                                                         (rule "add_literals" (formula "3") (term "1,0"))
                                                         (rule "times_zero_1" (formula "3") (term "0"))
                                                         (rule "leq_literals" (formula "3"))
                                                         (rule "true_left" (formula "3"))
                                                         (rule "applyEqRigid" (formula "52") (term "0") (ifseqformula "2"))
                                                         (rule "applyEq" (formula "9") (term "0") (ifseqformula "10"))
                                                         (rule "eqSymm" (formula "9"))
                                                         (rule "close" (formula "55") (ifseqformula "9"))
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                                 (branch "Case 2"
                                     (builtin "One Step Simplification" (formula "42"))
                                    (rule "insert_hidden_taclet_0" (userinteraction))
                                    (rule "close" (formula "43") (ifseqformula "1"))
                                 )
                              )
                              (branch ""
                                  (builtin "One Step Simplification" (formula "1"))
                                  (builtin "One Step Simplification" (formula "42"))
                                 (rule "closeTrue" (formula "42"))
                              )
                           )
                           (branch ""
                               (builtin "One Step Simplification" (formula "1"))
                               (builtin "One Step Simplification" (formula "42"))
                              (rule "closeTrue" (formula "42"))
                           )
                        )
                        (branch ""
                           (rule "impRight" (formula "41"))
                           (rule "andRight" (formula "42"))
                           (branch ""
                              (rule "andRight" (formula "42"))
                              (branch ""
                                 (rule "andRight" (formula "42"))
                                 (branch ""
                                    (rule "andRight" (formula "42"))
                                    (branch ""
                                       (rule "andRight" (formula "42"))
                                       (branch ""
                                          (rule "andRight" (formula "42"))
                                          (branch ""
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                          (branch ""
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                       )
                                       (branch ""
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                    )
                                    (branch ""
                                       (rule "impRight" (formula "42"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                 )
                                 (branch ""
                                    (rule "impRight" (formula "42"))
                                    (rule "andRight" (formula "43"))
                                    (branch ""
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                    (branch ""
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                 )
                              )
                              (branch ""
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                           )
                           (branch ""
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                     )
                     (branch "if x_3 false"
                         (builtin "One Step Simplification" (formula "1"))
                         (builtin "One Step Simplification" (formula "42"))
                        (rule "notLeft" (formula "1"))
                         (builtin "Use Operation Contract" (formula "42") (newnames "heapBefore_nextKeyIndex,result_2,exc_2") (contract "java.util.VerifiedIdentityHashMap[java.util.VerifiedIdentityHashMap::nextKeyIndex(int,int)].JML normal_behavior operation contract.0"))
                        (branch "Post (nextKeyIndex)"
                            (builtin "One Step Simplification" (formula "36"))
                           (rule "translateJavaAddInt" (formula "36") (term "1,1,0,0,0,1"))
                           (rule "translateJavaAddInt" (formula "36") (term "0,0,1,0,0,1"))
                           (rule "translateJavaAddInt" (formula "36") (term "0,0,0,0,0,1"))
                           (rule "andLeft" (formula "36"))
                           (rule "andLeft" (formula "37"))
                           (rule "andLeft" (formula "37"))
                           (rule "andLeft" (formula "37"))
                           (rule "polySimp_addComm0" (formula "37") (term "1,1"))
                           (rule "polySimp_addComm0" (formula "37") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "38") (term "0,0"))
                           (rule "inEqSimp_commuteGeq" (formula "38") (term "0"))
                           (rule "assignment" (formula "46") (term "1"))
                            (builtin "One Step Simplification" (formula "46"))
                           (rule "blockEmpty" (formula "46") (term "1"))
                           (rule "Static_class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "39"))
                           (rule "notLeft" (formula "39"))
                           (rule "lsContinue" (formula "45") (term "1"))
                            (builtin "One Step Simplification" (formula "45"))
                           (rule "andRight" (formula "45"))
                           (branch "Case 1"
                              (rule "andRight" (formula "45"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "45"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "45"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "45"))
                                       (branch "Case 1"
                                          (rule "inEqSimp_geqRight" (formula "45"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "23") (term "0,1,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulAssoc" (formula "23") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_gtToGeq" (formula "22") (term "1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "22") (term "0,1,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "38") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "38") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "38") (term "0,0,0"))
                                          (rule "add_literals" (formula "38") (term "0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "23") (term "0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulAssoc" (formula "23") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "0,1,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "3"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "15"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "15") (term "0"))
                                          (rule "inEqSimp_gtToGeq" (formula "5") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "5") (term "0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "6") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,0,1,1"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0,1,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0,0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "23") (term "0,1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "20"))
                                          (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "12"))
                                          (rule "mul_literals" (formula "12") (term "1,0,0"))
                                          (rule "add_literals" (formula "12") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "35"))
                                          (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "35") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,1,0"))
                                          (rule "jmod_axiom" (formula "34") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "34") (term "1,0"))
                                          (rule "jmod_axiom" (formula "4") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                          (rule "polySimp_sepNegMonomial" (formula "34"))
                                          (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                          (rule "polySimp_sepNegMonomial" (formula "4"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "0,1,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "23") (term "0,1,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "23") (term "0,1,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "22") (term "1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "22") (term "0,1,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "38") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "38") (term "0,0"))
                                          (rule "polySimp_elimOne" (formula "38") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,0,1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "23") (term "0,1,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                          (rule "polySimp_elimOne" (formula "3") (term "0"))
                                          (rule "applyEq" (formula "17") (term "0") (ifseqformula "18"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "15"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                          (rule "polySimp_elimOne" (formula "15") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "5") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "0,0"))
                                          (rule "polySimp_elimOne" (formula "5") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0,1"))
                                          (rule "mul_literals" (formula "5") (term "0,1,0,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,0,1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "6") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "6") (term "0,0"))
                                          (rule "polySimp_elimOne" (formula "6") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0,1,1"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,1,1"))
                                          (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0,1,1"))
                                          (rule "mul_literals" (formula "6") (term "0,1,0,0,0,1,1"))
                                          (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0,0,1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "21") (term "0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0,0,1"))
                                          (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1,0,1,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "22") (term "1,0,1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "22") (term "0,1,0,1,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "22") (term "1,1,0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "19"))
                                          (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                          (rule "polySimp_elimOne" (formula "19") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "12"))
                                          (rule "mul_literals" (formula "12") (term "1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "34"))
                                          (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                          (rule "polySimp_elimOne" (formula "34") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "10") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "11") (term "0,1,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0,1,0"))
                                          (rule "inEqSimp_contradEq3" (formula "38") (term "1") (ifseqformula "1"))
                                          (rule "times_zero_1" (formula "38") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "38") (term "0,0,1"))
                                          (rule "qeq_literals" (formula "38") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "38"))
                                          (rule "notLeft" (formula "38"))
                                          (rule "inEqSimp_leqRight" (formula "38"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "replace_known_left" (formula "38") (term "0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "38"))
                                          (rule "applyEq" (formula "2") (term "0") (ifseqformula "38"))
                                          (rule "inEqSimp_homoInEq0" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                          (rule "mul_literals" (formula "2") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                          (rule "add_literals" (formula "2") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "9"))
                                          (rule "leq_literals" (formula "17") (term "0"))
                                           (builtin "One Step Simplification" (formula "17"))
                                          (rule "true_left" (formula "17"))
                                          (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                          (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                          (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                                          (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "4") (term "0,0"))
                                          (rule "qeq_literals" (formula "4") (term "0"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "true_left" (formula "4"))
                                          (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "3") (term "0"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "closeFalse" (formula "3"))
                                       )
                                       (branch "Case 2"
                                          (rule "inEqSimp_ltRight" (formula "45"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "1") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "23") (term "0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulAssoc" (formula "23") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "0,1,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "3"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,0,1,1"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0,1,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "5") (term "0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "35"))
                                          (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "35") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "23") (term "0,1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "6") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "38") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "38") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "23") (term "0,1,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "20"))
                                          (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "12"))
                                          (rule "mul_literals" (formula "12") (term "1,0,0"))
                                          (rule "add_literals" (formula "12") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "15"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "15") (term "0"))
                                          (rule "inEqSimp_gtToGeq" (formula "22") (term "1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "22") (term "0,1,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulAssoc" (formula "23") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0,0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,1,0"))
                                          (rule "inEqSimp_gtToGeq" (formula "5") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "38") (term "0,0,0"))
                                          (rule "add_literals" (formula "38") (term "0,0,0,0"))
                                          (rule "jmod_axiom" (formula "4") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                          (rule "jmod_axiom" (formula "34") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "34") (term "1,0"))
                                          (rule "polySimp_sepNegMonomial" (formula "4"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                          (rule "polySimp_sepNegMonomial" (formula "34"))
                                          (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "23") (term "0,1,0,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                          (rule "polySimp_elimOne" (formula "3") (term "0"))
                                          (rule "applyEq" (formula "17") (term "0") (ifseqformula "18"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0,1,1"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,1,1"))
                                          (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,1,1"))
                                          (rule "mul_literals" (formula "6") (term "0,1,0,0,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0,1,1"))
                                          (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0,0,1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0,1"))
                                          (rule "mul_literals" (formula "5") (term "0,1,0,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "10") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "34"))
                                          (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                          (rule "polySimp_elimOne" (formula "34") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1,0,1,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "22") (term "1,0,1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "22") (term "0,1,0,1,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "22") (term "1,1,0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "6") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "6") (term "0,0"))
                                          (rule "polySimp_elimOne" (formula "6") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "22") (term "0,1,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "19"))
                                          (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                          (rule "polySimp_elimOne" (formula "19") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "21") (term "0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "12"))
                                          (rule "mul_literals" (formula "12") (term "1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "15"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                          (rule "polySimp_elimOne" (formula "15") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "21") (term "1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "21") (term "0,1,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "21") (term "0,1,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "22") (term "0,1,1,0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0,0,1"))
                                          (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "11") (term "0,1,0,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "5") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "0,0"))
                                          (rule "polySimp_elimOne" (formula "5") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "37") (term "0,0"))
                                          (rule "polySimp_elimOne" (formula "37") (term "0,0"))
                                          (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "8"))
                                          (rule "leq_literals" (formula "16") (term "0"))
                                           (builtin "One Step Simplification" (formula "16"))
                                          (rule "true_left" (formula "16"))
                                          (rule "elimGcdLeq" (formula "21") (term "1,0,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "21") (term "0,0,0,0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "sub_literals" (formula "21") (term "0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "21") (term "1,1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "21") (term "1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "21") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "21") (term "1,1,0,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "21") (term "1,0,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "21") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "21") (term "0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "21") (term "0,0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "21") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_addComm1" (formula "21") (term "0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "21") (term "0,0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "21") (term "1,1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "21") (term "1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "21") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "qeq_literals" (formula "21") (term "1,0,1,0,0,0,0,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "21"))
                                          (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "21") (term "0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_addComm1" (formula "21") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "21") (term "0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "21") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "21") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "21") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "21") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "leq_literals" (formula "21") (term "0,1,0,0,0,0,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "21"))
                                          (rule "elimGcdGeq" (formula "6") (term "1,0,0,1,1") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=m") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,1,0,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0,1,0,0,1,1"))
                                          (rule "add_zero_right" (formula "6") (term "0,0,0,1,0,1,0,0,1,1"))
                                          (rule "add_zero_right" (formula "6") (term "0,0,0,0,0,1,0,0,1,1"))
                                          (rule "times_zero_1" (formula "6") (term "0,0,0,1,0,1,0,0,1,1"))
                                          (rule "times_zero_1" (formula "6") (term "1,0,0,0,0,0,1,0,0,1,1"))
                                          (rule "sub_literals" (formula "6") (term "0,0,0,0,0,0,1,0,0,1,1"))
                                          (rule "add_zero_left" (formula "6") (term "0,0,1,0,1,0,0,1,1"))
                                          (rule "add_zero_right" (formula "6") (term "0,0,0,0,0,1,0,0,1,1"))
                                          (rule "polySimp_pullOutFactor0" (formula "6") (term "0,1,0,1,0,0,1,1"))
                                          (rule "add_literals" (formula "6") (term "1,0,1,0,1,0,0,1,1"))
                                          (rule "times_zero_1" (formula "6") (term "0,1,0,1,0,0,1,1"))
                                          (rule "leq_literals" (formula "6") (term "1,0,1,0,0,1,1"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0,1,0,0,1,1"))
                                          (rule "add_literals" (formula "6") (term "1,1,0,0,1,0,0,1,1"))
                                          (rule "times_zero_1" (formula "6") (term "1,0,0,1,0,0,1,1"))
                                          (rule "add_zero_right" (formula "6") (term "0,0,1,0,0,1,1"))
                                          (rule "qeq_literals" (formula "6") (term "0,1,0,0,1,1"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "elimGcdLeq" (formula "21") (term "0,1,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                                          (rule "sub_literals" (formula "21") (term "0,0,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "21") (term "0,0,0,0,0,1,0,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "21") (term "1,1,0,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "21") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "21") (term "1,1,0,1,0,0,1,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "21") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "21") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "21") (term "0,0,1,0,0,1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "21") (term "0,0,0,1,0,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "21") (term "0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "21") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_addComm1" (formula "21") (term "0,0,1,0,0,1,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "21") (term "0,0,0,1,0,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "21") (term "1,1,0,1,0,0,1,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "21") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "21") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                          (rule "qeq_literals" (formula "21") (term "1,0,0,1,0,0,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "21"))
                                          (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_addComm1" (formula "21") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "21") (term "0,0,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "21") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "21") (term "0,0,0,1,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "21") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "21") (term "0,0,0,1,0,0,0,1,1,0"))
                                          (rule "leq_literals" (formula "21") (term "0,0,1,0,0,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "21"))
                                          (rule "elimGcdGeq" (formula "21") (term "1,1,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,0,1,1,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "21") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0,1,1,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "21") (term "0,0,0,0,0,1,1,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "21") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                                          (rule "sub_literals" (formula "21") (term "0,0,0,0,0,0,1,1,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,0,1,1,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "21") (term "0,0,1,0,1,1,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "21") (term "0,0,0,0,0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "21") (term "0,1,0,1,1,0,0,1,1,0"))
                                          (rule "add_literals" (formula "21") (term "1,0,1,0,1,1,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "21") (term "0,1,0,1,1,0,0,1,1,0"))
                                          (rule "leq_literals" (formula "21") (term "1,0,1,1,0,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "21"))
                                          (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0,1,1,0,0,1,1,0"))
                                          (rule "add_literals" (formula "21") (term "1,1,0,0,1,1,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "21") (term "1,0,0,1,1,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "21") (term "0,0,1,1,0,0,1,1,0"))
                                          (rule "qeq_literals" (formula "21") (term "0,1,1,0,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "21"))
                                          (rule "elimGcdGeq" (formula "21") (term "0,1,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                          (rule "add_zero_right" (formula "21") (term "0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "21") (term "0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "sub_literals" (formula "21") (term "0,0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "21") (term "0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "21") (term "0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "21") (term "0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "21") (term "1,1,0,0,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "21") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "qeq_literals" (formula "21") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "21"))
                                          (rule "polySimp_pullOutFactor0" (formula "21") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "21") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "21") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "leq_literals" (formula "21") (term "0,0,1,0,0,0,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "21"))
                                          (rule "newSym_eq" (formula "32") (inst "l=l_0") (inst "newSymDef=mul(result_1, Z(0(#)))"))
                                          (rule "times_zero_1" (formula "32") (term "1,1"))
                                          (rule "add_zero_right" (formula "32") (term "1"))
                                          (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "32"))
                                          (rule "eqSymm" (formula "33"))
                                          (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "33"))
                                          (rule "inEqSimp_homoInEq1" (formula "6") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                          (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "33"))
                                          (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "33"))
                                          (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                          (rule "applyEq" (formula "35") (term "0") (ifseqformula "33"))
                                          (rule "applyEq" (formula "5") (term "1,1,0,0,1") (ifseqformula "33"))
                                          (rule "applyEq" (formula "34") (term "1,1") (ifseqformula "33"))
                                          (rule "applyEq" (formula "6") (term "1,1,0,0,0,1") (ifseqformula "33"))
                                          (rule "applyEq" (formula "31") (term "1") (ifseqformula "33"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0"))
                                          (rule "mul_literals" (formula "6") (term "0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0"))
                                          (rule "mul_literals" (formula "5") (term "0,1,0"))
                                          (rule "elimGcdGeq_antec" (formula "35") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,0"))
                                          (rule "add_zero_right" (formula "35") (term "0,0,0,1,0"))
                                          (rule "leq_literals" (formula "35") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "35"))
                                          (rule "times_zero_1" (formula "35") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "35") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0"))
                                          (rule "add_literals" (formula "35") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "35") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "35") (term "0,0"))
                                          (rule "leq_literals" (formula "35") (term "0"))
                                           (builtin "One Step Simplification" (formula "35"))
                                          (rule "elimGcdGeq" (formula "6") (term "1,0,0,0,1") (inst "elimGcdRightDiv=l_0") (inst "elimGcdLeftDiv=n") (inst "elimGcd=Z(2(#))"))
                                          (rule "sub_literals" (formula "6") (term "0,0,0,0,0,0,0,1,0,0,0,1"))
                                          (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,0,0,1,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0,1,0,0,0,1"))
                                          (rule "mul_literals" (formula "6") (term "0,0,0,0,0,1,0,1,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,1,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,1,0,1,0,0,0,1"))
                                          (rule "add_literals" (formula "6") (term "1,1,0,1,0,1,0,0,0,1"))
                                          (rule "times_zero_1" (formula "6") (term "1,0,1,0,1,0,0,0,1"))
                                          (rule "add_zero_right" (formula "6") (term "0,1,0,1,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0,0,1,0,0,0,1"))
                                          (rule "add_literals" (formula "6") (term "1,1,0,0,0,1,0,0,0,1"))
                                          (rule "times_zero_1" (formula "6") (term "1,0,0,0,1,0,0,0,1"))
                                          (rule "add_zero_right" (formula "6") (term "0,0,0,1,0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "0,0,1,0,1,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor0" (formula "6") (term "0,1,0,1,0,0,0,1"))
                                          (rule "add_literals" (formula "6") (term "1,0,1,0,1,0,0,0,1"))
                                          (rule "times_zero_1" (formula "6") (term "0,1,0,1,0,0,0,1"))
                                          (rule "leq_literals" (formula "6") (term "1,0,1,0,0,0,1"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,1,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0,1,0,0,0,1"))
                                          (rule "add_literals" (formula "6") (term "1,1,0,0,1,0,0,0,1"))
                                          (rule "times_zero_1" (formula "6") (term "1,0,0,1,0,0,0,1"))
                                          (rule "add_zero_right" (formula "6") (term "0,0,1,0,0,0,1"))
                                          (rule "qeq_literals" (formula "6") (term "0,1,0,0,0,1"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "elimGcdGeq" (formula "5") (term "1,0,0,1") (inst "elimGcdRightDiv=l_0") (inst "elimGcdLeftDiv=n") (inst "elimGcd=Z(2(#))"))
                                          (rule "sub_literals" (formula "5") (term "0,0,0,0,0,0,0,1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0,1,0,0,1"))
                                          (rule "mul_literals" (formula "5") (term "0,0,0,0,0,1,0,1,0,0,1"))
                                          (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,0,0,1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,1,0,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,1,0,1,0,0,1"))
                                          (rule "add_literals" (formula "5") (term "1,1,0,1,0,1,0,0,1"))
                                          (rule "times_zero_1" (formula "5") (term "1,0,1,0,1,0,0,1"))
                                          (rule "add_zero_right" (formula "5") (term "0,1,0,1,0,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0,0,1,0,0,1"))
                                          (rule "add_literals" (formula "5") (term "1,1,0,0,0,1,0,0,1"))
                                          (rule "times_zero_1" (formula "5") (term "1,0,0,0,1,0,0,1"))
                                          (rule "add_zero_right" (formula "5") (term "0,0,0,1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "0,0,1,0,1,0,0,1"))
                                          (rule "polySimp_pullOutFactor0" (formula "5") (term "0,1,0,1,0,0,1"))
                                          (rule "add_literals" (formula "5") (term "1,0,1,0,1,0,0,1"))
                                          (rule "times_zero_1" (formula "5") (term "0,1,0,1,0,0,1"))
                                          (rule "leq_literals" (formula "5") (term "1,0,1,0,0,1"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,1,0,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0,1,0,0,1"))
                                          (rule "add_literals" (formula "5") (term "1,1,0,0,1,0,0,1"))
                                          (rule "times_zero_1" (formula "5") (term "1,0,0,1,0,0,1"))
                                          (rule "add_zero_right" (formula "5") (term "0,0,1,0,0,1"))
                                          (rule "qeq_literals" (formula "5") (term "0,1,0,0,1"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "newSym_eq" (formula "4") (inst "l=l_1") (inst "newSymDef=mul(i_0, Z(0(#)))"))
                                          (rule "times_zero_1" (formula "4") (term "1,1"))
                                          (rule "add_zero_right" (formula "4") (term "1"))
                                          (rule "applyEqRigid" (formula "5") (term "0,0") (ifseqformula "4"))
                                          (rule "eqSymm" (formula "5"))
                                          (rule "applyEqRigid" (formula "4") (term "0,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "6") (term "1,1,0,0,0,1") (ifseqformula "5"))
                                          (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "5"))
                                          (rule "applyEqRigid" (formula "3") (term "1,1") (ifseqformula "5"))
                                          (rule "applyEqRigid" (formula "7") (term "0,0") (ifseqformula "5"))
                                          (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                          (rule "applyEq" (formula "41") (term "0,2,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "38") (term "1,1,0") (ifseqformula "5"))
                                          (rule "applyEqRigid" (formula "7") (term "1,1,0,0,0,1,1") (ifseqformula "5"))
                                          (rule "applyEqRigid" (formula "39") (term "1,1,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "40") (term "0,2,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "5"))
                                          (rule "inEqSimp_homoInEq1" (formula "6") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                          (rule "applyEq" (formula "38") (term "1,1,1") (ifseqformula "5"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0"))
                                          (rule "mul_literals" (formula "7") (term "0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0"))
                                          (rule "mul_literals" (formula "6") (term "0,1,0"))
                                          (rule "elimGcdGeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                          (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                          (rule "leq_literals" (formula "2") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "add_zero_right" (formula "2") (term "0,0,0,0"))
                                          (rule "add_zero_right" (formula "2") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                          (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "2") (term "0,0"))
                                          (rule "leq_literals" (formula "2") (term "0"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "elimGcdLeq" (formula "7") (term "0,0,0,1,1") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_1)") (inst "elimGcdLeftDiv=m") (inst "elimGcd=Z(2(#))"))
                                          (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0,0,0,0,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,0,0,0,1,1"))
                                          (rule "sub_literals" (formula "7") (term "0,0,0,0,0,0,0,0,0,0,1,1"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0,0,0,0,1,1"))
                                          (rule "mul_literals" (formula "7") (term "0,0,0,0,0,1,0,0,0,0,1,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0,0,0,0,0,1,1"))
                                          (rule "add_literals" (formula "7") (term "1,1,0,0,0,0,0,0,1,1"))
                                          (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0,0,1,1"))
                                          (rule "add_zero_right" (formula "7") (term "0,0,0,0,0,0,1,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,1,0,0,0,0,1,1"))
                                          (rule "add_literals" (formula "7") (term "1,1,0,1,0,0,0,0,1,1"))
                                          (rule "times_zero_1" (formula "7") (term "1,0,1,0,0,0,0,1,1"))
                                          (rule "add_zero_right" (formula "7") (term "0,1,0,0,0,0,1,1"))
                                          (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0,0,0,1,1"))
                                          (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0,0,0,1,1"))
                                          (rule "polySimp_rightDist" (formula "7") (term "0,0,1,0,0,0,0,1,1"))
                                          (rule "mul_literals" (formula "7") (term "0,0,0,1,0,0,0,0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0,0,0,1,1"))
                                          (rule "add_literals" (formula "7") (term "0,0,0,0,0,0,0,0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "7") (term "0,1,0,0,0,0,1,1"))
                                          (rule "polySimp_addComm1" (formula "7") (term "0,0,1,0,0,0,0,1,1"))
                                          (rule "add_literals" (formula "7") (term "0,0,0,1,0,0,0,0,1,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,1,0,0,0,0,1,1"))
                                          (rule "add_literals" (formula "7") (term "1,1,0,1,0,0,0,0,1,1"))
                                          (rule "times_zero_1" (formula "7") (term "1,0,1,0,0,0,0,1,1"))
                                          (rule "add_zero_right" (formula "7") (term "0,1,0,0,0,0,1,1"))
                                          (rule "qeq_literals" (formula "7") (term "1,0,0,0,0,1,1"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0,1,1"))
                                          (rule "polySimp_addComm1" (formula "7") (term "0,0,0,0,0,0,1,1"))
                                          (rule "add_literals" (formula "7") (term "0,0,0,0,0,0,0,1,1"))
                                          (rule "add_zero_left" (formula "7") (term "0,0,0,0,0,0,1,1"))
                                          (rule "polySimp_pullOutFactor0" (formula "7") (term "0,0,0,0,0,1,1"))
                                          (rule "add_literals" (formula "7") (term "1,0,0,0,0,0,1,1"))
                                          (rule "times_zero_1" (formula "7") (term "0,0,0,0,0,1,1"))
                                          (rule "leq_literals" (formula "7") (term "0,0,0,0,1,1"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "elimGcdLeq" (formula "6") (term "0,0,0,1") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_1)") (inst "elimGcdLeftDiv=n") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0,0,0,0,1"))
                                          (rule "mul_literals" (formula "6") (term "0,0,0,0,0,1,0,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,0,0,0,1"))
                                          (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,0,0,0,0,0,1"))
                                          (rule "sub_literals" (formula "6") (term "0,0,0,0,0,0,0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,1,0,0,0,0,1"))
                                          (rule "add_literals" (formula "6") (term "1,1,0,1,0,0,0,0,1"))
                                          (rule "times_zero_1" (formula "6") (term "1,0,1,0,0,0,0,1"))
                                          (rule "add_zero_right" (formula "6") (term "0,1,0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0,0,0,0,0,1"))
                                          (rule "add_literals" (formula "6") (term "1,1,0,0,0,0,0,0,1"))
                                          (rule "times_zero_1" (formula "6") (term "1,0,0,0,0,0,0,1"))
                                          (rule "add_zero_right" (formula "6") (term "0,0,0,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "6") (term "0,0,1,0,0,0,0,1"))
                                          (rule "mul_literals" (formula "6") (term "0,0,0,1,0,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,0,0,0,0,1"))
                                          (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,0,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "6") (term "0,1,0,0,0,0,1"))
                                          (rule "polySimp_addComm1" (formula "6") (term "0,0,1,0,0,0,0,1"))
                                          (rule "add_literals" (formula "6") (term "0,0,0,1,0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,1,0,0,0,0,1"))
                                          (rule "add_literals" (formula "6") (term "1,1,0,1,0,0,0,0,1"))
                                          (rule "times_zero_1" (formula "6") (term "1,0,1,0,0,0,0,1"))
                                          (rule "add_zero_right" (formula "6") (term "0,1,0,0,0,0,1"))
                                          (rule "qeq_literals" (formula "6") (term "1,0,0,0,0,1"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0,0,0,1"))
                                          (rule "add_literals" (formula "6") (term "0,0,0,0,0,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0,0,1"))
                                          (rule "polySimp_addComm1" (formula "6") (term "0,0,0,0,0,0,1"))
                                          (rule "add_literals" (formula "6") (term "0,0,0,0,0,0,0,1"))
                                          (rule "add_zero_left" (formula "6") (term "0,0,0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor0" (formula "6") (term "0,0,0,0,0,1"))
                                          (rule "add_literals" (formula "6") (term "1,0,0,0,0,0,1"))
                                          (rule "times_zero_1" (formula "6") (term "0,0,0,0,0,1"))
                                          (rule "leq_literals" (formula "6") (term "0,0,0,0,1"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "1"))
                                          (rule "mul_literals" (formula "9") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                          (rule "mul_literals" (formula "9") (term "1"))
                                          (rule "inEqSimp_contradEq7" (formula "40") (term "1") (ifseqformula "9"))
                                          (rule "times_zero_1" (formula "40") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "40") (term "0,0,1"))
                                          (rule "leq_literals" (formula "40") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "40"))
                                          (rule "notLeft" (formula "40"))
                                          (rule "inEqSimp_leqRight" (formula "40"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "replace_known_left" (formula "40") (term "0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "40"))
                                          (rule "applyEq" (formula "10") (term "0") (ifseqformula "40"))
                                          (rule "inEqSimp_homoInEq1" (formula "10"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0"))
                                          (rule "mul_literals" (formula "10") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                          (rule "add_literals" (formula "10") (term "0,0"))
                                          (rule "applyEq" (formula "2") (term "1") (ifseqformula "40"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                          (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                          (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                          (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                          (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "4") (term "0,0"))
                                          (rule "qeq_literals" (formula "4") (term "0"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "true_left" (formula "4"))
                                          (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "1"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                                          (rule "mul_literals" (formula "2") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "2") (term "0"))
                                          (rule "add_literals" (formula "2") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "2") (term "1,0"))
                                          (rule "add_zero_right" (formula "2") (term "0"))
                                          (rule "leq_literals" (formula "2"))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "inEqSimp_ltToLeq" (formula "11"))
                                       (rule "mul_literals" (formula "11") (term "1,0,0"))
                                       (rule "add_literals" (formula "11") (term "0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "5") (term "0,0,0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0,1,1"))
                                       (rule "inEqSimp_gtToGeq" (formula "21") (term "1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "21") (term "0,1,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "4") (term "0,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "5") (term "0,0,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0,0,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "22") (term "0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulAssoc" (formula "22") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "0,1,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "14"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "14") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "37") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "37") (term "0,0"))
                                       (rule "inEqSimp_gtToGeq" (formula "4") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "22") (term "0,1,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,1,0,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "5") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "19"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "34"))
                                       (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "34") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulAssoc" (formula "22") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "22") (term "0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "37") (term "0,0,0"))
                                       (rule "add_literals" (formula "37") (term "0,0,0,0"))
                                       (rule "applyEq" (formula "16") (term "0") (ifseqformula "17"))
                                       (rule "jmod_axiom" (formula "44") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "44") (term "1,0"))
                                       (rule "jmod_axiom" (formula "3") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                       (rule "jmod_axiom" (formula "32") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "1,0"))
                                       (rule "polySimp_sepNegMonomial" (formula "44"))
                                       (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                                       (rule "polySimp_sepNegMonomial" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                       (rule "polySimp_sepNegMonomial" (formula "32"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "11"))
                                       (rule "mul_literals" (formula "11") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "20") (term "0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,1,1"))
                                       (rule "mul_literals" (formula "5") (term "0,1,0,0,0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0,1,1"))
                                       (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,0,1,1"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "20") (term "1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "20") (term "0,1,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "10") (term "0,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,1"))
                                       (rule "mul_literals" (formula "4") (term "0,1,0,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,0,1"))
                                       (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0,0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0,1"))
                                       (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0,0,1"))
                                       (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,0,0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1,0,1,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "21") (term "0,1,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,1,0,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "9") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "14"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                       (rule "polySimp_elimOne" (formula "14") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "4") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "0,0"))
                                       (rule "polySimp_elimOne" (formula "4") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,1,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,0,1,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1,0,1,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "21") (term "0,1,0,1,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,1,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "21") (term "1,1,0,1,0,0,1,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "5") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "0,0"))
                                       (rule "polySimp_elimOne" (formula "5") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "10") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "18"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                       (rule "polySimp_elimOne" (formula "18") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "33"))
                                       (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                       (rule "polySimp_elimOne" (formula "33") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "21") (term "0,1,1,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "0,1,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "21") (term "0,1,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "36") (term "0,0"))
                                       (rule "polySimp_elimOne" (formula "36") (term "0,0"))
                                       (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "7"))
                                       (rule "leq_literals" (formula "15") (term "0"))
                                        (builtin "One Step Simplification" (formula "15"))
                                       (rule "true_left" (formula "15"))
                                       (rule "elimGcdLeq" (formula "20") (term "1,0,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                       (rule "sub_literals" (formula "20") (term "0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "20") (term "0,0,0,0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "20") (term "1,1,0,0,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "20") (term "1,0,0,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "20") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "20") (term "1,1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "20") (term "1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "20") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "20") (term "0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "20") (term "0,0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "20") (term "0,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "20") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_addComm1" (formula "20") (term "0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "20") (term "0,0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "20") (term "1,1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "20") (term "1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "20") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "qeq_literals" (formula "20") (term "1,0,1,0,0,0,0,0,1,1,0"))
                                        (builtin "One Step Simplification" (formula "20"))
                                       (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_addComm1" (formula "20") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "20") (term "0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "add_zero_left" (formula "20") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0" (formula "20") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "20") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "20") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "leq_literals" (formula "20") (term "0,1,0,0,0,0,0,1,1,0"))
                                        (builtin "One Step Simplification" (formula "20"))
                                       (rule "elimGcdGeq" (formula "5") (term "1,0,0,1,1") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=m") (inst "elimGcd=Z(2(#))"))
                                       (rule "add_zero_right" (formula "5") (term "0,0,0,1,0,1,0,0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0,1,0,0,1,1"))
                                       (rule "add_zero_right" (formula "5") (term "0,0,0,0,0,1,0,0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,1,0,0,1,1"))
                                       (rule "times_zero_1" (formula "5") (term "0,0,0,1,0,1,0,0,1,1"))
                                       (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,0,1,0,0,1,1"))
                                       (rule "sub_literals" (formula "5") (term "0,0,0,0,0,0,1,0,0,1,1"))
                                       (rule "add_zero_left" (formula "5") (term "0,0,1,0,1,0,0,1,1"))
                                       (rule "times_zero_1" (formula "5") (term "1,0,0,0,0,0,1,0,0,1,1"))
                                       (rule "add_zero_right" (formula "5") (term "0,0,0,0,0,1,0,0,1,1"))
                                       (rule "polySimp_pullOutFactor0" (formula "5") (term "0,1,0,1,0,0,1,1"))
                                       (rule "add_literals" (formula "5") (term "1,0,1,0,1,0,0,1,1"))
                                       (rule "times_zero_1" (formula "5") (term "0,1,0,1,0,0,1,1"))
                                       (rule "leq_literals" (formula "5") (term "1,0,1,0,0,1,1"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0,1,0,0,1,1"))
                                       (rule "add_literals" (formula "5") (term "1,1,0,0,1,0,0,1,1"))
                                       (rule "times_zero_1" (formula "5") (term "1,0,0,1,0,0,1,1"))
                                       (rule "add_zero_right" (formula "5") (term "0,0,1,0,0,1,1"))
                                       (rule "qeq_literals" (formula "5") (term "0,1,0,0,1,1"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "elimGcdGeq" (formula "20") (term "1,1,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                       (rule "add_zero_right" (formula "20") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "20") (term "0,0,0,0,0,1,1,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0,1,1,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0,1,1,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "20") (term "0,0,0,0,1,0,1,1,0,0,1,1,0"))
                                       (rule "sub_literals" (formula "20") (term "0,0,0,0,0,0,1,1,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0,1,1,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "20") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0,1,1,0,0,1,1,0"))
                                       (rule "add_zero_left" (formula "20") (term "0,0,1,0,1,1,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "20") (term "0,0,0,0,0,1,1,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0" (formula "20") (term "0,1,0,1,1,0,0,1,1,0"))
                                       (rule "add_literals" (formula "20") (term "1,0,1,0,1,1,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "20") (term "0,1,0,1,1,0,0,1,1,0"))
                                       (rule "leq_literals" (formula "20") (term "1,0,1,1,0,0,1,1,0"))
                                        (builtin "One Step Simplification" (formula "20"))
                                       (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0,1,1,0,0,1,1,0"))
                                       (rule "add_literals" (formula "20") (term "1,1,0,0,1,1,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "20") (term "1,0,0,1,1,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "20") (term "0,0,1,1,0,0,1,1,0"))
                                       (rule "qeq_literals" (formula "20") (term "0,1,1,0,0,1,1,0"))
                                        (builtin "One Step Simplification" (formula "20"))
                                       (rule "elimGcdGeq" (formula "20") (term "0,1,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                       (rule "add_zero_right" (formula "20") (term "0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "20") (term "0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "sub_literals" (formula "20") (term "0,0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "20") (term "0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "20") (term "0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "add_zero_left" (formula "20") (term "0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "20") (term "1,1,0,0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "20") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "qeq_literals" (formula "20") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                        (builtin "One Step Simplification" (formula "20"))
                                       (rule "polySimp_pullOutFactor0" (formula "20") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "20") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "20") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "leq_literals" (formula "20") (term "0,0,1,0,0,0,0,1,1,0"))
                                        (builtin "One Step Simplification" (formula "20"))
                                       (rule "elimGcdLeq" (formula "20") (term "0,1,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                                       (rule "sub_literals" (formula "20") (term "0,0,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "20") (term "0,0,0,0,0,1,0,0,1,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "20") (term "1,1,0,1,0,0,1,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "20") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "20") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "20") (term "1,1,0,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "20") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "20") (term "0,0,1,0,0,1,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "20") (term "0,0,0,1,0,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "20") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_addComm1" (formula "20") (term "0,0,1,0,0,1,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "20") (term "0,0,0,1,0,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "20") (term "1,1,0,1,0,0,1,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "20") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "20") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                       (rule "qeq_literals" (formula "20") (term "1,0,0,1,0,0,0,1,1,0"))
                                        (builtin "One Step Simplification" (formula "20"))
                                       (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "20") (term "0,0,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "20") (term "0,0,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "add_zero_left" (formula "20") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0" (formula "20") (term "0,0,0,1,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "20") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "20") (term "0,0,0,1,0,0,0,1,1,0"))
                                       (rule "leq_literals" (formula "20") (term "0,0,1,0,0,0,1,1,0"))
                                        (builtin "One Step Simplification" (formula "20"))
                                       (rule "newSym_eq" (formula "31") (inst "l=l_0") (inst "newSymDef=mul(result_1, Z(0(#)))"))
                                       (rule "times_zero_1" (formula "31") (term "1,1"))
                                       (rule "add_zero_right" (formula "31") (term "1"))
                                       (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "31"))
                                       (rule "eqSymm" (formula "32"))
                                       (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "32"))
                                       (rule "inEqSimp_homoInEq1" (formula "5") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                       (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "32"))
                                       (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                       (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "32"))
                                       (rule "applyEq" (formula "34") (term "0") (ifseqformula "32"))
                                       (rule "applyEq" (formula "33") (term "1,1") (ifseqformula "32"))
                                       (rule "applyEq" (formula "4") (term "1,1,0,0,1") (ifseqformula "32"))
                                       (rule "applyEq" (formula "5") (term "1,1,0,0,0,1") (ifseqformula "32"))
                                       (rule "applyEq" (formula "30") (term "1") (ifseqformula "32"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                       (rule "mul_literals" (formula "5") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                       (rule "mul_literals" (formula "4") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                                       (rule "elimGcdGeq_antec" (formula "34") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                       (rule "add_zero_right" (formula "34") (term "0,0,0,1,0"))
                                       (rule "leq_literals" (formula "34") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "34"))
                                       (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "34") (term "1,0,0,0,0"))
                                       (rule "add_literals" (formula "34") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "34") (term "0,0"))
                                       (rule "add_literals" (formula "34") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "34") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "34") (term "0,0"))
                                       (rule "leq_literals" (formula "34") (term "0"))
                                        (builtin "One Step Simplification" (formula "34"))
                                       (rule "elimGcdGeq" (formula "5") (term "1,0,0,0,1") (inst "elimGcdRightDiv=l_0") (inst "elimGcdLeftDiv=n") (inst "elimGcd=Z(2(#))"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0,1,0,0,0,1"))
                                       (rule "mul_literals" (formula "5") (term "0,0,0,0,0,1,0,1,0,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,1,0,0,0,1"))
                                       (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,0,0,1,0,0,0,1"))
                                       (rule "sub_literals" (formula "5") (term "0,0,0,0,0,0,0,1,0,0,0,1"))
                                       (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,1,0,1,0,0,0,1"))
                                       (rule "add_literals" (formula "5") (term "1,1,0,1,0,1,0,0,0,1"))
                                       (rule "times_zero_1" (formula "5") (term "1,0,1,0,1,0,0,0,1"))
                                       (rule "add_zero_right" (formula "5") (term "0,1,0,1,0,0,0,1"))
                                       (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0,0,1,0,0,0,1"))
                                       (rule "add_literals" (formula "5") (term "1,1,0,0,0,1,0,0,0,1"))
                                       (rule "times_zero_1" (formula "5") (term "1,0,0,0,1,0,0,0,1"))
                                       (rule "add_zero_right" (formula "5") (term "0,0,0,1,0,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "0,0,1,0,1,0,0,0,1"))
                                       (rule "polySimp_pullOutFactor0" (formula "5") (term "0,1,0,1,0,0,0,1"))
                                       (rule "add_literals" (formula "5") (term "1,0,1,0,1,0,0,0,1"))
                                       (rule "times_zero_1" (formula "5") (term "0,1,0,1,0,0,0,1"))
                                       (rule "leq_literals" (formula "5") (term "1,0,1,0,0,0,1"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,1,0,0,0,1"))
                                       (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0,1,0,0,0,1"))
                                       (rule "add_literals" (formula "5") (term "1,1,0,0,1,0,0,0,1"))
                                       (rule "times_zero_1" (formula "5") (term "1,0,0,1,0,0,0,1"))
                                       (rule "add_zero_right" (formula "5") (term "0,0,1,0,0,0,1"))
                                       (rule "qeq_literals" (formula "5") (term "0,1,0,0,0,1"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "elimGcdGeq" (formula "4") (term "1,0,0,1") (inst "elimGcdRightDiv=l_0") (inst "elimGcdLeftDiv=n") (inst "elimGcd=Z(2(#))"))
                                       (rule "sub_literals" (formula "4") (term "0,0,0,0,0,0,0,1,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0,1,0,0,1"))
                                       (rule "mul_literals" (formula "4") (term "0,0,0,0,0,1,0,1,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0,1,0,0,1"))
                                       (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0,0,0,1,0,0,1"))
                                       (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,1,0,1,0,0,1"))
                                       (rule "add_literals" (formula "4") (term "1,1,0,1,0,1,0,0,1"))
                                       (rule "times_zero_1" (formula "4") (term "1,0,1,0,1,0,0,1"))
                                       (rule "add_zero_right" (formula "4") (term "0,1,0,1,0,0,1"))
                                       (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0,0,1,0,0,1"))
                                       (rule "add_literals" (formula "4") (term "1,1,0,0,0,1,0,0,1"))
                                       (rule "times_zero_1" (formula "4") (term "1,0,0,0,1,0,0,1"))
                                       (rule "add_zero_right" (formula "4") (term "0,0,0,1,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "0,0,1,0,1,0,0,1"))
                                       (rule "polySimp_pullOutFactor0" (formula "4") (term "0,1,0,1,0,0,1"))
                                       (rule "add_literals" (formula "4") (term "1,0,1,0,1,0,0,1"))
                                       (rule "times_zero_1" (formula "4") (term "0,1,0,1,0,0,1"))
                                       (rule "leq_literals" (formula "4") (term "1,0,1,0,0,1"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,1,0,0,1"))
                                       (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0,1,0,0,1"))
                                       (rule "add_literals" (formula "4") (term "1,1,0,0,1,0,0,1"))
                                       (rule "times_zero_1" (formula "4") (term "1,0,0,1,0,0,1"))
                                       (rule "add_zero_right" (formula "4") (term "0,0,1,0,0,1"))
                                       (rule "qeq_literals" (formula "4") (term "0,1,0,0,1"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "newSym_eq" (formula "3") (inst "l=l_1") (inst "newSymDef=mul(i_0, Z(0(#)))"))
                                       (rule "times_zero_1" (formula "3") (term "1,1"))
                                       (rule "add_zero_right" (formula "3") (term "1"))
                                       (rule "applyEqRigid" (formula "4") (term "0,0") (ifseqformula "3"))
                                       (rule "eqSymm" (formula "4"))
                                       (rule "applyEq" (formula "40") (term "0,2,0") (ifseqformula "4"))
                                       (rule "applyEqRigid" (formula "6") (term "0,0") (ifseqformula "4"))
                                       (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                       (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "4"))
                                       (rule "applyEqRigid" (formula "5") (term "0,0") (ifseqformula "4"))
                                       (rule "inEqSimp_homoInEq1" (formula "5") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                       (rule "applyEq" (formula "1") (term "0") (ifseqformula "4"))
                                       (rule "applyEqRigid" (formula "5") (term "1,1,0,0,0,1") (ifseqformula "4"))
                                       (rule "applyEq" (formula "39") (term "0,2,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "37") (term "1,1,0") (ifseqformula "4"))
                                       (rule "applyEqRigid" (formula "6") (term "1,1,0,0,0,1,1") (ifseqformula "4"))
                                       (rule "applyEqRigid" (formula "38") (term "1,1,0") (ifseqformula "4"))
                                       (rule "applyEqRigid" (formula "2") (term "1,1") (ifseqformula "4"))
                                       (rule "applyEq" (formula "37") (term "1,1,1") (ifseqformula "4"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0"))
                                       (rule "mul_literals" (formula "6") (term "0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                       (rule "mul_literals" (formula "5") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0"))
                                       (rule "elimGcdGeq_antec" (formula "1") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                       (rule "leq_literals" (formula "1") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0,0,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0"))
                                       (rule "leq_literals" (formula "1") (term "0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "elimGcdLeq" (formula "6") (term "0,0,0,1,1") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_1)") (inst "elimGcdLeftDiv=m") (inst "elimGcd=Z(2(#))"))
                                       (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,0,0,0,0,0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,0,0,0,1,1"))
                                       (rule "sub_literals" (formula "6") (term "0,0,0,0,0,0,0,0,0,0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0,0,0,0,1,1"))
                                       (rule "mul_literals" (formula "6") (term "0,0,0,0,0,1,0,0,0,0,1,1"))
                                       (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0,0,0,0,0,1,1"))
                                       (rule "add_literals" (formula "6") (term "1,1,0,0,0,0,0,0,1,1"))
                                       (rule "times_zero_1" (formula "6") (term "1,0,0,0,0,0,0,1,1"))
                                       (rule "add_zero_right" (formula "6") (term "0,0,0,0,0,0,1,1"))
                                       (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,1,0,0,0,0,1,1"))
                                       (rule "add_literals" (formula "6") (term "1,1,0,1,0,0,0,0,1,1"))
                                       (rule "times_zero_1" (formula "6") (term "1,0,1,0,0,0,0,1,1"))
                                       (rule "add_zero_right" (formula "6") (term "0,1,0,0,0,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,0,0,0,0,1,1"))
                                       (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,0,0,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "6") (term "0,0,1,0,0,0,0,1,1"))
                                       (rule "mul_literals" (formula "6") (term "0,0,0,1,0,0,0,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0,0,0,0,1,1"))
                                       (rule "add_literals" (formula "6") (term "0,0,0,0,0,0,0,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,1,0,0,0,0,1,1"))
                                       (rule "polySimp_addComm1" (formula "6") (term "0,0,1,0,0,0,0,1,1"))
                                       (rule "add_literals" (formula "6") (term "0,0,0,1,0,0,0,0,1,1"))
                                       (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,1,0,0,0,0,1,1"))
                                       (rule "add_literals" (formula "6") (term "1,1,0,1,0,0,0,0,1,1"))
                                       (rule "times_zero_1" (formula "6") (term "1,0,1,0,0,0,0,1,1"))
                                       (rule "add_zero_right" (formula "6") (term "0,1,0,0,0,0,1,1"))
                                       (rule "qeq_literals" (formula "6") (term "1,0,0,0,0,1,1"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0,0,1,1"))
                                       (rule "polySimp_addComm1" (formula "6") (term "0,0,0,0,0,0,1,1"))
                                       (rule "add_literals" (formula "6") (term "0,0,0,0,0,0,0,1,1"))
                                       (rule "add_zero_left" (formula "6") (term "0,0,0,0,0,0,1,1"))
                                       (rule "polySimp_pullOutFactor0" (formula "6") (term "0,0,0,0,0,1,1"))
                                       (rule "add_literals" (formula "6") (term "1,0,0,0,0,0,1,1"))
                                       (rule "times_zero_1" (formula "6") (term "0,0,0,0,0,1,1"))
                                       (rule "leq_literals" (formula "6") (term "0,0,0,0,1,1"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "elimGcdLeq" (formula "5") (term "0,0,0,1") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_1)") (inst "elimGcdLeftDiv=n") (inst "elimGcd=Z(2(#))"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0,0,0,0,1"))
                                       (rule "mul_literals" (formula "5") (term "0,0,0,0,0,1,0,0,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,0,0,0,1"))
                                       (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,0,0,0,0,0,1"))
                                       (rule "sub_literals" (formula "5") (term "0,0,0,0,0,0,0,0,0,0,1"))
                                       (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,1,0,0,0,0,1"))
                                       (rule "add_literals" (formula "5") (term "1,1,0,1,0,0,0,0,1"))
                                       (rule "times_zero_1" (formula "5") (term "1,0,1,0,0,0,0,1"))
                                       (rule "add_zero_right" (formula "5") (term "0,1,0,0,0,0,1"))
                                       (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0,0,0,0,0,1"))
                                       (rule "add_literals" (formula "5") (term "1,1,0,0,0,0,0,0,1"))
                                       (rule "times_zero_1" (formula "5") (term "1,0,0,0,0,0,0,1"))
                                       (rule "add_zero_right" (formula "5") (term "0,0,0,0,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "5") (term "0,0,1,0,0,0,0,1"))
                                       (rule "mul_literals" (formula "5") (term "0,0,0,1,0,0,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0,0,0,0,1"))
                                       (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,0,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "5") (term "0,1,0,0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0,0,1,0,0,0,0,1"))
                                       (rule "add_literals" (formula "5") (term "0,0,0,1,0,0,0,0,1"))
                                       (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,1,0,0,0,0,1"))
                                       (rule "add_literals" (formula "5") (term "1,1,0,1,0,0,0,0,1"))
                                       (rule "times_zero_1" (formula "5") (term "1,0,1,0,0,0,0,1"))
                                       (rule "add_zero_right" (formula "5") (term "0,1,0,0,0,0,1"))
                                       (rule "qeq_literals" (formula "5") (term "1,0,0,0,0,1"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0,0,0,1"))
                                       (rule "add_literals" (formula "5") (term "0,0,0,0,0,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0,0,0,0,0,0,1"))
                                       (rule "add_literals" (formula "5") (term "0,0,0,0,0,0,0,1"))
                                       (rule "add_zero_left" (formula "5") (term "0,0,0,0,0,0,1"))
                                       (rule "polySimp_pullOutFactor0" (formula "5") (term "0,0,0,0,0,1"))
                                       (rule "add_literals" (formula "5") (term "1,0,0,0,0,0,1"))
                                       (rule "times_zero_1" (formula "5") (term "0,0,0,0,0,1"))
                                       (rule "leq_literals" (formula "5") (term "0,0,0,0,1"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "elimGcdLeq" (formula "5") (term "0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_1)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0,0"))
                                       (rule "mul_literals" (formula "5") (term "0,0,0,0,0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,0"))
                                       (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,0,0,0"))
                                       (rule "sub_literals" (formula "5") (term "0,0,0,0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,1,0,0"))
                                       (rule "add_literals" (formula "5") (term "1,1,0,1,0,0"))
                                       (rule "times_zero_1" (formula "5") (term "1,0,1,0,0"))
                                       (rule "add_zero_right" (formula "5") (term "0,1,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "5") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "5") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "5") (term "0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "5") (term "0,0,1,0,0"))
                                       (rule "mul_literals" (formula "5") (term "0,0,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "5") (term "0,1,0,0"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "5") (term "0,0,0,1,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,1,0,0"))
                                       (rule "add_literals" (formula "5") (term "1,1,0,1,0,0"))
                                       (rule "times_zero_1" (formula "5") (term "1,0,1,0,0"))
                                       (rule "add_zero_right" (formula "5") (term "0,1,0,0"))
                                       (rule "qeq_literals" (formula "5") (term "1,0,0"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "5") (term "0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "5") (term "0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "5") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0" (formula "5") (term "0,0,0"))
                                       (rule "add_literals" (formula "5") (term "1,0,0,0"))
                                       (rule "times_zero_1" (formula "5") (term "0,0,0"))
                                       (rule "leq_literals" (formula "5") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "elimGcdGeq" (formula "6") (term "0") (inst "elimGcdRightDiv=add(Z(1(#)), l_1)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0,0"))
                                       (rule "mul_literals" (formula "6") (term "0,0,0,0,0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,0"))
                                       (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,0,0,0"))
                                       (rule "sub_literals" (formula "6") (term "0,0,0,0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,1,0,0"))
                                       (rule "add_literals" (formula "6") (term "1,1,0,1,0,0"))
                                       (rule "times_zero_1" (formula "6") (term "1,0,1,0,0"))
                                       (rule "add_zero_right" (formula "6") (term "0,1,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "6") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "6") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "6") (term "0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "6") (term "0,0,1,0,0"))
                                       (rule "mul_literals" (formula "6") (term "0,0,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,1,0,0"))
                                       (rule "polySimp_addComm1" (formula "6") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "6") (term "0,0,0,1,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,1,0,0"))
                                       (rule "add_literals" (formula "6") (term "1,1,0,1,0,0"))
                                       (rule "times_zero_1" (formula "6") (term "1,0,1,0,0"))
                                       (rule "add_zero_right" (formula "6") (term "0,1,0,0"))
                                       (rule "leq_literals" (formula "6") (term "1,0,0"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "6") (term "0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "6") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "6") (term "0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "6") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0" (formula "6") (term "0,0,0"))
                                       (rule "add_literals" (formula "6") (term "1,0,0,0"))
                                       (rule "times_zero_1" (formula "6") (term "0,0,0"))
                                       (rule "qeq_literals" (formula "6") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "9"))
                                       (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                                       (rule "mul_literals" (formula "15") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "15") (term "0"))
                                       (rule "add_literals" (formula "15") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                       (rule "polySimp_elimOne" (formula "15") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "9"))
                                       (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                       (rule "mul_literals" (formula "2") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "add_literals" (formula "2") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(1(1(9(0(7(8(6(3(5(#))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                       (rule "leq_literals" (formula "2") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,0"))
                                       (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "2") (term "0,0"))
                                       (rule "qeq_literals" (formula "2") (term "0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "10"))
                                       (rule "polySimp_rightDist" (formula "36") (term "0,0"))
                                       (rule "mul_literals" (formula "36") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "36") (term "0"))
                                       (rule "add_literals" (formula "36") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "36"))
                                       (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "36") (inst "elimGcdRightDiv=Z(1(1(9(0(7(8(6(3(5(#))))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                       (rule "neg_literal" (formula "36") (term "0,0,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "36") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0"))
                                       (rule "mul_literals" (formula "36") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "36") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "36") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,0"))
                                       (rule "add_literals" (formula "36") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "36") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "36") (term "0,0"))
                                       (rule "qeq_literals" (formula "36") (term "0"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "nnf_imp2or" (formula "11") (term "1,0"))
                                       (rule "nnf_imp2or" (formula "12") (term "1,0,1,0"))
                                       (rule "nnf_imp2or" (formula "22") (term "1,0"))
                                       (rule "nnf_imp2or" (formula "23") (term "0"))
                                       (rule "commute_and" (formula "11") (term "0,0"))
                                       (rule "commute_and" (formula "22") (term "0,0"))
                                       (rule "commute_and" (formula "12") (term "0,0"))
                                       (rule "jdiv_axiom" (formula "14") (term "1,0"))
                                       (rule "eqSymm" (formula "14"))
                                       (rule "inEqSimp_subsumption1" (formula "14") (term "0,0") (ifseqformula "9"))
                                       (rule "leq_literals" (formula "14") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "14"))
                                       (rule "eqSymm" (formula "14"))
                                       (rule "applyEq" (formula "23") (term "1,1,1,0,0") (ifseqformula "14"))
                                       (rule "applyEqRigid" (formula "15") (term "1,0") (ifseqformula "14"))
                                       (rule "applyEq" (formula "11") (term "1,1,1,0,0") (ifseqformula "14"))
                                       (rule "applyEq" (formula "24") (term "1,1,0,0,0,0") (ifseqformula "14"))
                                       (rule "applyEq" (formula "12") (term "1,1,0,0,0,1,0") (ifseqformula "14"))
                                       (rule "applyEq" (formula "21") (term "0") (ifseqformula "14"))
                                       (rule "applyEqRigid" (formula "12") (term "1,1,1,0,0") (ifseqformula "14"))
                                       (rule "jdiv_axiom" (formula "49") (term "0,0"))
                                       (rule "eqSymm" (formula "1"))
                                       (rule "polyDiv_pullOut" (formula "1") (term "0,2,0") (inst "polyDivCoeff=mul(result_2, Z(neglit(1(#))))"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,2,0"))
                                       (rule "equal_literals" (formula "1") (term "0,0,2,0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,2,0"))
                                       (rule "polySimp_pullOutFactor0" (formula "1") (term "0,0,0,2,0"))
                                       (rule "add_literals" (formula "1") (term "1,0,0,0,2,0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0,0,0,2,0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "2,0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "1,2,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "2,0"))
                                       (rule "polySimp_mulAssoc" (formula "1") (term "0,2,0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "0,0,2,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0,2,0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0,2,0"))
                                       (rule "nnf_imp2or" (formula "7") (term "0,1"))
                                       (rule "nnf_imp2or" (formula "8") (term "0,1,1"))
                                       (rule "nnf_imp2or" (formula "8") (term "0,0,1"))
                                       (rule "nnf_imp2or" (formula "25") (term "1,0"))
                                       (rule "nnf_imp2or" (formula "24") (term "0"))
                                       (rule "nnf_imp2or" (formula "12") (term "0"))
                                       (rule "nnf_imp2or" (formula "13") (term "0"))
                                       (rule "nnf_notAnd" (formula "25") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "25") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "25") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "25") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "25") (term "1,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "25") (term "1,0,0"))
                                       (rule "mul_literals" (formula "25") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "25") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                                       (rule "mul_literals" (formula "25") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "24") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0"))
                                       (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0"))
                                       (rule "add_literals" (formula "24") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                                       (rule "mul_literals" (formula "24") (term "1,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "24") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "12") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
                                       (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "12") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                       (rule "mul_literals" (formula "12") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "13") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
                                       (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0"))
                                       (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                       (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "7") (term "0,0,1"))
                                       (rule "inEqSimp_notLeq" (formula "7") (term "0,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0,1"))
                                       (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0,1"))
                                       (rule "add_literals" (formula "7") (term "0,0,0,0,0,0,1"))
                                       (rule "add_zero_left" (formula "7") (term "0,0,0,0,0,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "0,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,1"))
                                       (rule "polySimp_elimOne" (formula "7") (term "1,0,0,0,1"))
                                       (rule "inEqSimp_notGeq" (formula "7") (term "1,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0,1"))
                                       (rule "mul_literals" (formula "7") (term "0,1,1,0,0,1"))
                                       (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0,1"))
                                       (rule "nnf_notAnd" (formula "25") (term "0,1,0"))
                                        (builtin "One Step Simplification" (formula "25"))
                                       (rule "inEqSimp_notGeq" (formula "25") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,1,0,1,0"))
                                       (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,1,0"))
                                       (rule "add_literals" (formula "25") (term "0,0,0,1,0,1,0"))
                                       (rule "add_zero_left" (formula "25") (term "0,0,1,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,1,0"))
                                       (rule "nnf_notAnd" (formula "24") (term "0,1,0"))
                                        (builtin "One Step Simplification" (formula "24"))
                                       (rule "inEqSimp_notLeq" (formula "24") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,1,0,1,0"))
                                       (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,1,0"))
                                       (rule "add_literals" (formula "24") (term "0,0,0,1,0,1,0"))
                                       (rule "add_zero_left" (formula "24") (term "0,0,1,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,1,0"))
                                       (rule "nnf_imp2or" (formula "13") (term "0,1,0"))
                                       (rule "nnf_notAnd" (formula "8") (term "0,0,1,1"))
                                       (rule "inEqSimp_notGeq" (formula "8") (term "1,0,0,1,1"))
                                       (rule "times_zero_1" (formula "8") (term "1,0,0,1,0,0,1,1"))
                                       (rule "add_zero_right" (formula "8") (term "0,0,1,0,0,1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,1,1"))
                                       (rule "mul_literals" (formula "8") (term "1,1,0,0,1,1"))
                                       (rule "inEqSimp_notLeq" (formula "8") (term "0,0,0,1,1"))
                                       (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0,1,1"))
                                       (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0,1,1"))
                                       (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0,1,1"))
                                       (rule "add_literals" (formula "8") (term "0,0,0,0,0,0,1,1"))
                                       (rule "add_zero_left" (formula "8") (term "0,0,0,0,0,1,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "0,0,0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,1,1"))
                                       (rule "polySimp_elimOne" (formula "8") (term "1,0,0,0,1,1"))
                                       (rule "nnf_notAnd" (formula "8") (term "0,0,0,1"))
                                       (rule "inEqSimp_notGeq" (formula "8") (term "1,0,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0,0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0,0,1"))
                                       (rule "mul_literals" (formula "8") (term "0,1,1,0,0,0,1"))
                                       (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0,0,1"))
                                       (rule "inEqSimp_notLeq" (formula "8") (term "0,0,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0,0,1"))
                                       (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0,0,1"))
                                       (rule "add_literals" (formula "8") (term "0,0,0,0,0,0,0,1"))
                                       (rule "add_zero_left" (formula "8") (term "0,0,0,0,0,0,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "0,0,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,0,1"))
                                       (rule "polySimp_elimOne" (formula "8") (term "1,0,0,0,0,1"))
                                       (rule "nnf_imp2or" (formula "25") (term "0,1,1,0"))
                                       (rule "jdiv_axiom" (formula "36") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "36") (term "0,0,2,1"))
                                       (rule "eqSymm" (formula "36"))
                                       (rule "applyEq" (formula "36") (term "1") (ifseqformula "37"))
                                       (rule "inEqSimp_subsumption6" (formula "36") (term "0,0") (ifseqformula "41"))
                                       (rule "greater_literals" (formula "36") (term "0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "mul_literals" (formula "36") (term "1,0,0,0"))
                                       (rule "leq_literals" (formula "36") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "polyDiv_pullOut" (formula "36") (term "0") (inst "polyDivCoeff=l_0"))
                                       (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0,2,0"))
                                       (rule "equal_literals" (formula "36") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "polySimp_pullOutFactor0" (formula "36") (term "0,0,0"))
                                       (rule "add_literals" (formula "36") (term "1,0,0,0"))
                                       (rule "times_zero_1" (formula "36") (term "0,0,0"))
                                       (rule "div_literals" (formula "36") (term "0,0"))
                                       (rule "add_zero_left" (formula "36") (term "0"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "true_left" (formula "36"))
                                       (rule "nnf_imp2or" (formula "24") (term "0,1,1,0"))
                                       (rule "nnf_notAnd" (formula "13") (term "0,0,1,0"))
                                       (rule "inEqSimp_notLeq" (formula "13") (term "0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0,1,0"))
                                       (rule "add_literals" (formula "13") (term "0,0,0,0,0,0,1,0"))
                                       (rule "add_zero_left" (formula "13") (term "0,0,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "13") (term "1,0,0,0,1,0"))
                                       (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "13") (term "0,1,1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,1,0"))
                                       (rule "nnf_notAnd" (formula "13") (term "0,1,0,1,0"))
                                        (builtin "One Step Simplification" (formula "13"))
                                       (rule "nnf_notAnd" (formula "25") (term "0,0,1,1,0"))
                                       (rule "nnf_notAnd" (formula "24") (term "0,0,1,1,0"))
                                       (rule "inEqSimp_notGeq" (formula "24") (term "1,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "24") (term "0,1,1,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1,1,0"))
                                       (rule "inEqSimp_notLeq" (formula "24") (term "0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "24") (term "0,0,0,0,0,0,1,1,0"))
                                       (rule "add_zero_left" (formula "24") (term "0,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "24") (term "1,0,0,0,1,1,0"))
                                       (rule "jdiv_axiom" (formula "5") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "0,0,2,1"))
                                       (rule "eqSymm" (formula "5"))
                                       (rule "applyEq" (formula "5") (term "1") (ifseqformula "6"))
                                       (rule "inEqSimp_subsumption6" (formula "5") (term "0,0") (ifseqformula "2"))
                                       (rule "times_zero_1" (formula "5") (term "1,1,0,0,0"))
                                       (rule "greater_literals" (formula "5") (term "0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "leq_literals" (formula "5") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "polyDiv_pullOut" (formula "5") (term "0") (inst "polyDivCoeff=l_1"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,2,0"))
                                       (rule "equal_literals" (formula "5") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "polySimp_pullOutFactor0" (formula "5") (term "0,0,0"))
                                       (rule "add_literals" (formula "5") (term "1,0,0,0"))
                                       (rule "times_zero_1" (formula "5") (term "0,0,0"))
                                       (rule "div_literals" (formula "5") (term "0,0"))
                                       (rule "add_zero_left" (formula "5") (term "0"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "true_left" (formula "5"))
                                       (rule "nnf_notOr" (formula "25") (term "1,0,0,1,1,0"))
                                       (rule "inEqSimp_notLeq" (formula "25") (term "0,1,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,1,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "25") (term "0,1,0,0,0,1,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,1,0,0,1,1,0"))
                                       (rule "add_literals" (formula "25") (term "0,0,0,0,1,0,0,1,1,0"))
                                       (rule "add_zero_left" (formula "25") (term "0,0,0,1,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0,1,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "25") (term "1,0,1,0,0,1,1,0"))
                                       (rule "inEqSimp_notGeq" (formula "25") (term "1,1,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "25") (term "1,0,0,1,1,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "25") (term "0,0,1,1,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,1,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "25") (term "1,1,1,0,0,1,1,0"))
                                       (rule "nnf_notAnd" (formula "25") (term "0,0,0,1,1,0"))
                                       (rule "nnf_notAnd" (formula "25") (term "0,0,0,0,1,1,0"))
                                       (rule "nnf_notOr" (formula "25") (term "1,0,0,0,1,1,0"))
                                       (rule "inEqSimp_notLeq" (formula "25") (term "0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "25") (term "0,1,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,1,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "25") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "add_zero_left" (formula "25") (term "0,0,0,1,0,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "25") (term "1,0,1,0,0,0,1,1,0"))
                                       (rule "inEqSimp_notGeq" (formula "25") (term "1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "25") (term "1,1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "25") (term "1,1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,1,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "25") (term "0,1,1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "25") (term "1,1,1,1,0,0,0,1,1,0"))
                                       (rule "nnf_notOr" (formula "25") (term "0,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_notLeq" (formula "25") (term "0,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "25") (term "0,0,0,0,0,0,0,0,0,1,1,0"))
                                       (rule "add_zero_left" (formula "25") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "25") (term "1,0,0,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "25") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "add_zero_left" (formula "25") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0,0,0,1,1,0"))
                                       (rule "nnf_notOr" (formula "25") (term "1,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_notGeq" (formula "25") (term "0,1,0,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "25") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "25") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,1,0,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "25") (term "1,0,1,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_notGeq" (formula "25") (term "1,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,1,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "25") (term "1,1,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "25") (term "1,1,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,1,0,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "25") (term "0,1,1,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "25") (term "1,1,1,1,0,0,0,0,1,1,0"))
                                       (rule "commute_or_2" (formula "12") (term "0"))
                                       (rule "cut_direct" (formula "42") (term "0"))
                                       (branch "CUT: pow(2, i_2_0) >= 3 + l_1 * 2 TRUE"
                                           (builtin "One Step Simplification" (formula "43"))
                                          (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "43"))
                                          (rule "applyEq" (formula "1") (term "0,0,0") (ifseqformula "43"))
                                          (rule "applyEq" (formula "1") (term "0,0,1,2,0") (ifseqformula "43"))
                                          (rule "polySimp_addComm0" (formula "1") (term "2,0"))
                                          (rule "applyEq" (formula "51") (term "0,0,0") (ifseqformula "43"))
                                          (rule "eqSymm" (formula "51"))
                                          (rule "applyEq" (formula "44") (term "0,1") (ifseqformula "43"))
                                          (rule "applyEq" (formula "51") (term "0") (ifseqformula "43"))
                                          (rule "eqSymm" (formula "51"))
                                          (rule "applyEq" (formula "1") (term "1,2,0") (ifseqformula "43"))
                                          (rule "polySimp_addComm0" (formula "1") (term "2,0"))
                                          (rule "applyEq" (formula "1") (term "0,1") (ifseqformula "43"))
                                          (rule "polySimp_sepPosMonomial" (formula "44") (term "1"))
                                          (rule "mul_literals" (formula "44") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "42"))
                                          (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                          (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                          (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                          (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "4") (term "0,0"))
                                          (rule "qeq_literals" (formula "4") (term "0"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "true_left" (formula "4"))
                                          (rule "inEqSimp_contradInEq1" (formula "43") (term "0") (ifseqformula "41"))
                                          (rule "inEqSimp_homoInEq1" (formula "43") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "43") (term "0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "43") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "43") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "43") (term "0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "43") (term "0,0,0"))
                                          (rule "add_literals" (formula "43") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "43") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "43") (term "0,0,0"))
                                          (rule "leq_literals" (formula "43") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "43"))
                                          (rule "true_left" (formula "43"))
                                          (rule "inEqSimp_subsumption6" (formula "1") (term "0,0") (ifseqformula "2"))
                                          (rule "times_zero_1" (formula "1") (term "1,1,0,0,0"))
                                          (rule "greater_literals" (formula "1") (term "0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "leq_literals" (formula "1") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "eqSymm" (formula "1"))
                                          (rule "applyEqRigid" (formula "49") (term "0,0") (ifseqformula "1"))
                                          (rule "elimGcdEq" (formula "49") (inst "elimGcdRightDiv=add(Z(1(#)), l_1)") (inst "elimGcdLeftDiv=div(add(Z(2(#)), mul(l_1, Z(2(#)))), Z(2(#)))") (inst "elimGcd=Z(2(#))"))
                                           (builtin "One Step Simplification" (formula "49"))
                                          (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                                          (rule "mul_literals" (formula "49") (term "0,1,0,0,1"))
                                          (rule "mul_literals" (formula "49") (term "0,1,0,1,0"))
                                          (rule "add_literals" (formula "49") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "49") (term "0,1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "49") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "49") (term "0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "49") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "49") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "49") (term "0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "49") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "49") (term "0,0,0"))
                                          (rule "add_literals" (formula "49") (term "1,0,0,0"))
                                          (rule "times_zero_1" (formula "49") (term "0,0,0"))
                                          (rule "leq_literals" (formula "49") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "49"))
                                          (rule "polySimp_addAssoc" (formula "49") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "49") (term "0,0,0,1"))
                                          (rule "add_literals" (formula "49") (term "0,0,0,0,1"))
                                          (rule "add_zero_left" (formula "49") (term "0,0,0,1"))
                                          (rule "polySimp_pullOutFactor0" (formula "49") (term "0,0,1"))
                                          (rule "add_literals" (formula "49") (term "1,0,0,1"))
                                          (rule "times_zero_1" (formula "49") (term "0,0,1"))
                                           (builtin "One Step Simplification" (formula "49"))
                                          (rule "polySimp_addAssoc" (formula "49") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "49") (term "0,0,0"))
                                          (rule "add_literals" (formula "49") (term "0,0,0,0"))
                                          (rule "add_zero_left" (formula "49") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "49") (term "0,0"))
                                          (rule "add_literals" (formula "49") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "49") (term "0,0"))
                                          (rule "qeq_literals" (formula "49") (term "0"))
                                           (builtin "One Step Simplification" (formula "49"))
                                          (rule "polyDiv_pullOut" (formula "49") (term "0") (inst "polyDivCoeff=l_1"))
                                          (rule "equal_literals" (formula "49") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "49"))
                                          (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "49") (term "0,0,0"))
                                          (rule "add_literals" (formula "49") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "49") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "49") (term "0,0,0"))
                                          (rule "div_literals" (formula "49") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "49"))
                                          (rule "closeTrue" (formula "49"))
                                       )
                                       (branch "CUT: pow(2, i_2_0) >= 3 + l_1 * 2 FALSE"
                                           (builtin "One Step Simplification" (formula "42"))
                                          (rule "true_left" (formula "42"))
                                          (rule "inEqSimp_geqRight" (formula "43"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "replace_known_left" (formula "43") (term "0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "43"))
                                          (rule "applyEq" (formula "2") (term "0,0,1,2,0") (ifseqformula "43"))
                                          (rule "div_literals" (formula "2") (term "0,1,2,0"))
                                          (rule "times_zero_2" (formula "2") (term "1,2,0"))
                                          (rule "add_zero_right" (formula "2") (term "2,0"))
                                          (rule "applyEq" (formula "50") (term "0,0,0") (ifseqformula "43"))
                                          (rule "eqSymm" (formula "50"))
                                          (rule "jdiv_axiom_inline" (formula "50") (term "0,1"))
                                          (rule "times_zero_2" (formula "50") (term "0,0,2,0,1"))
                                          (rule "qeq_literals" (formula "50") (term "0,0,1"))
                                           (builtin "One Step Simplification" (formula "50"))
                                          (rule "div_literals" (formula "50") (term "0,1"))
                                          (rule "times_zero_2" (formula "50") (term "1"))
                                          (rule "close" (formula "50") (ifseqformula "43"))
                                       )
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "impRight" (formula "45"))
                                    (rule "allRight" (formula "46") (inst "sk=n_0"))
                                    (rule "impRight" (formula "46"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "inEqSimp_ltToLeq" (formula "22"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "22") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "14"))
                                    (rule "mul_literals" (formula "14") (term "1,0,0"))
                                    (rule "add_literals" (formula "14") (term "0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "37"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "37") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "17"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulAssoc" (formula "25") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "8") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_gtToGeq" (formula "24") (term "1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "24") (term "0,1,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "5"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0"))
                                    (rule "inEqSimp_gtToGeq" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "25") (term "0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulAssoc" (formula "25") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "0,1,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0,1,1"))
                                    (rule "inEqSimp_gtToGeq" (formula "7") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "25") (term "0,1,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "25") (term "0,1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "40") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "40") (term "0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "40") (term "0,0,0"))
                                    (rule "add_literals" (formula "40") (term "0,0,0,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "1"))
                                    (rule "jmod_axiom" (formula "36") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "1,0"))
                                    (rule "jmod_axiom" (formula "6") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                                    (rule "polySimp_sepNegMonomial" (formula "36"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                    (rule "polySimp_sepNegMonomial" (formula "6"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "22"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                    (rule "polySimp_elimOne" (formula "22") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,0,1"))
                                    (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "14"))
                                    (rule "mul_literals" (formula "14") (term "1"))
                                    (rule "applyEq" (formula "19") (term "0") (ifseqformula "20"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "36"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                    (rule "polySimp_elimOne" (formula "36") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "13") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "17"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                    (rule "polySimp_elimOne" (formula "17") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,1"))
                                    (rule "mul_literals" (formula "7") (term "0,1,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "24") (term "0,1,1,0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "8") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "0,0"))
                                    (rule "polySimp_elimOne" (formula "8") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "23") (term "0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "23") (term "1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "0,1,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "23") (term "0,1,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                    (rule "polySimp_elimOne" (formula "5") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1"))
                                    (rule "mul_literals" (formula "3") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,0,1,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "24") (term "0,1,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,1,1"))
                                    (rule "mul_literals" (formula "8") (term "0,1,0,0,0,1,1"))
                                    (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,1,1"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "7") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "0,0"))
                                    (rule "polySimp_elimOne" (formula "7") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "0,1,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "24") (term "0,1,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,1,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,0,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "24") (term "0,1,0,1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,1,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "24") (term "1,1,0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "39") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "0,0"))
                                    (rule "polySimp_elimOne" (formula "39") (term "0,0"))
                                    (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "10"))
                                    (rule "leq_literals" (formula "18") (term "0"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "true_left" (formula "18"))
                                    (rule "elimGcdLeq" (formula "23") (term "0,1,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "23") (term "0,0,0,0,0,1,0,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "sub_literals" (formula "23") (term "0,0,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,1,0,0,1,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "0,0,1,0,0,1,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "23") (term "0,0,0,1,0,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,0,1,0,0,1,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "23") (term "0,0,0,1,0,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,1,0,0,1,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                    (rule "qeq_literals" (formula "23") (term "1,0,0,1,0,0,0,1,1,0"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "23") (term "0,0,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "23") (term "0,0,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "23") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0" (formula "23") (term "0,0,0,1,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "23") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "23") (term "0,0,0,1,0,0,0,1,1,0"))
                                    (rule "leq_literals" (formula "23") (term "0,0,1,0,0,0,1,1,0"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "elimGcdGeq" (formula "8") (term "1,0,0,1,1") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=m") (inst "elimGcd=Z(2(#))"))
                                    (rule "sub_literals" (formula "8") (term "0,0,0,0,0,0,0,1,0,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0,1,0,0,1,1"))
                                    (rule "add_zero_right" (formula "8") (term "0,0,0,1,0,1,0,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,1,0,0,1,1"))
                                    (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0,0,1,0,0,1,1"))
                                    (rule "times_zero_1" (formula "8") (term "0,0,0,1,0,1,0,0,1,1"))
                                    (rule "add_zero_right" (formula "8") (term "0,0,0,0,0,1,0,0,1,1"))
                                    (rule "add_zero_left" (formula "8") (term "0,0,1,0,1,0,0,1,1"))
                                    (rule "add_zero_right" (formula "8") (term "0,0,0,0,0,1,0,0,1,1"))
                                    (rule "polySimp_pullOutFactor0" (formula "8") (term "0,1,0,1,0,0,1,1"))
                                    (rule "add_literals" (formula "8") (term "1,0,1,0,1,0,0,1,1"))
                                    (rule "times_zero_1" (formula "8") (term "0,1,0,1,0,0,1,1"))
                                    (rule "leq_literals" (formula "8") (term "1,0,1,0,0,1,1"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0,1,0,0,1,1"))
                                    (rule "add_literals" (formula "8") (term "1,1,0,0,1,0,0,1,1"))
                                    (rule "times_zero_1" (formula "8") (term "1,0,0,1,0,0,1,1"))
                                    (rule "add_zero_right" (formula "8") (term "0,0,1,0,0,1,1"))
                                    (rule "qeq_literals" (formula "8") (term "0,1,0,0,1,1"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "elimGcdLeq" (formula "23") (term "1,0,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                    (rule "sub_literals" (formula "23") (term "0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "23") (term "0,0,0,0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "23") (term "0,0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "23") (term "0,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "23") (term "0,0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "qeq_literals" (formula "23") (term "1,0,1,0,0,0,0,0,1,1,0"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "23") (term "0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "23") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0" (formula "23") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "23") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "23") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "leq_literals" (formula "23") (term "0,1,0,0,0,0,0,1,1,0"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "elimGcdGeq" (formula "23") (term "0,1,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                    (rule "sub_literals" (formula "23") (term "0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "23") (term "0,0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "23") (term "0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "23") (term "0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "qeq_literals" (formula "23") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "polySimp_pullOutFactor0" (formula "23") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "23") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "23") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "leq_literals" (formula "23") (term "0,0,1,0,0,0,0,1,1,0"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "elimGcdGeq" (formula "23") (term "1,1,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                    (rule "add_zero_right" (formula "23") (term "0,0,0,0,0,1,1,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0,1,1,0,0,1,1,0"))
                                    (rule "sub_literals" (formula "23") (term "0,0,0,0,0,0,1,1,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0,1,1,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "23") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                                    (rule "add_literals" (formula "23") (term "0,0,0,0,0,1,1,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "23") (term "0,0,1,0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0,0,1,1,0,0,1,1,0"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,0,0,1,1,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,0,0,1,1,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,0,0,1,1,0,0,1,1,0"))
                                    (rule "qeq_literals" (formula "23") (term "0,0,1,1,0,0,1,1,0"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "polySimp_pullOutFactor0" (formula "23") (term "0,0,1,1,0,0,1,1,0"))
                                    (rule "add_literals" (formula "23") (term "1,0,0,1,1,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "23") (term "0,0,1,1,0,0,1,1,0"))
                                    (rule "leq_literals" (formula "23") (term "0,1,1,0,0,1,1,0"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "newSym_eq" (formula "34") (inst "l=l_0") (inst "newSymDef=mul(result_1, Z(0(#)))"))
                                    (rule "times_zero_1" (formula "34") (term "1,1"))
                                    (rule "add_zero_right" (formula "34") (term "1"))
                                    (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "34"))
                                    (rule "eqSymm" (formula "35"))
                                    (rule "applyEq" (formula "8") (term "1,1,0,0,0,1") (ifseqformula "35"))
                                    (rule "applyEq" (formula "1") (term "0") (ifseqformula "35"))
                                    (rule "inEqSimp_commuteLeq" (formula "1"))
                                    (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "35"))
                                    (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "35"))
                                    (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                    (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "35"))
                                    (rule "inEqSimp_homoInEq1" (formula "8") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                    (rule "applyEq" (formula "37") (term "0") (ifseqformula "35"))
                                    (rule "applyEq" (formula "36") (term "1,1") (ifseqformula "35"))
                                    (rule "applyEq" (formula "7") (term "1,1,0,0,1") (ifseqformula "35"))
                                    (rule "applyEq" (formula "3") (term "1,1") (ifseqformula "35"))
                                    (rule "applyEq" (formula "33") (term "1") (ifseqformula "35"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                    (rule "mul_literals" (formula "7") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                    (rule "mul_literals" (formula "8") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0"))
                                    (rule "elimGcdGeq_antec" (formula "37") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                    (rule "add_zero_right" (formula "37") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,0"))
                                    (rule "leq_literals" (formula "37") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "times_zero_1" (formula "37") (term "1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "37") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "37") (term "0,0"))
                                    (rule "add_literals" (formula "37") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "37") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "37") (term "0,0"))
                                    (rule "leq_literals" (formula "37") (term "0"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "elimGcdGeq_antec" (formula "1") (inst "elimGcdRightDiv=l_0") (inst "elimGcdLeftDiv=n_0") (inst "elimGcd=Z(2(#))"))
                                    (rule "leq_literals" (formula "1") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0"))
                                    (rule "leq_literals" (formula "1") (term "0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "elimGcdGeq" (formula "8") (term "1,0,0,0,1") (inst "elimGcdRightDiv=l_0") (inst "elimGcdLeftDiv=n") (inst "elimGcd=Z(2(#))"))
                                    (rule "mul_literals" (formula "8") (term "0,0,0,0,0,1,0,1,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0,1,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,1,0,0,0,1"))
                                    (rule "sub_literals" (formula "8") (term "0,0,0,0,0,0,0,1,0,0,0,1"))
                                    (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0,0,1,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,1,0,1,0,0,0,1"))
                                    (rule "add_literals" (formula "8") (term "1,1,0,1,0,1,0,0,0,1"))
                                    (rule "times_zero_1" (formula "8") (term "1,0,1,0,1,0,0,0,1"))
                                    (rule "add_zero_right" (formula "8") (term "0,1,0,1,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0,0,1,0,0,0,1"))
                                    (rule "add_literals" (formula "8") (term "1,1,0,0,0,1,0,0,0,1"))
                                    (rule "times_zero_1" (formula "8") (term "1,0,0,0,1,0,0,0,1"))
                                    (rule "add_zero_right" (formula "8") (term "0,0,0,1,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "0,0,1,0,1,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor0" (formula "8") (term "0,1,0,1,0,0,0,1"))
                                    (rule "add_literals" (formula "8") (term "1,0,1,0,1,0,0,0,1"))
                                    (rule "times_zero_1" (formula "8") (term "0,1,0,1,0,0,0,1"))
                                    (rule "leq_literals" (formula "8") (term "1,0,1,0,0,0,1"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,1,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0,1,0,0,0,1"))
                                    (rule "add_literals" (formula "8") (term "1,1,0,0,1,0,0,0,1"))
                                    (rule "times_zero_1" (formula "8") (term "1,0,0,1,0,0,0,1"))
                                    (rule "add_zero_right" (formula "8") (term "0,0,1,0,0,0,1"))
                                    (rule "qeq_literals" (formula "8") (term "0,1,0,0,0,1"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "elimGcdGeq" (formula "7") (term "1,0,0,1") (inst "elimGcdRightDiv=l_0") (inst "elimGcdLeftDiv=n") (inst "elimGcd=Z(2(#))"))
                                    (rule "mul_literals" (formula "7") (term "0,0,0,0,0,1,0,1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0,1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,1,0,0,1"))
                                    (rule "sub_literals" (formula "7") (term "0,0,0,0,0,0,0,1,0,0,1"))
                                    (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0,0,1,0,0,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,1,0,1,0,0,1"))
                                    (rule "add_literals" (formula "7") (term "1,1,0,1,0,1,0,0,1"))
                                    (rule "times_zero_1" (formula "7") (term "1,0,1,0,1,0,0,1"))
                                    (rule "add_zero_right" (formula "7") (term "0,1,0,1,0,0,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0,0,1,0,0,1"))
                                    (rule "add_literals" (formula "7") (term "1,1,0,0,0,1,0,0,1"))
                                    (rule "times_zero_1" (formula "7") (term "1,0,0,0,1,0,0,1"))
                                    (rule "add_zero_right" (formula "7") (term "0,0,0,1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0,1,0,0,1"))
                                    (rule "polySimp_pullOutFactor0" (formula "7") (term "0,1,0,1,0,0,1"))
                                    (rule "add_literals" (formula "7") (term "1,0,1,0,1,0,0,1"))
                                    (rule "times_zero_1" (formula "7") (term "0,1,0,1,0,0,1"))
                                    (rule "leq_literals" (formula "7") (term "1,0,1,0,0,1"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,1,0,0,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0,1,0,0,1"))
                                    (rule "add_literals" (formula "7") (term "1,1,0,0,1,0,0,1"))
                                    (rule "times_zero_1" (formula "7") (term "1,0,0,1,0,0,1"))
                                    (rule "add_zero_right" (formula "7") (term "0,0,1,0,0,1"))
                                    (rule "qeq_literals" (formula "7") (term "0,1,0,0,1"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "newSym_eq" (formula "6") (inst "l=l_1") (inst "newSymDef=mul(i_0, Z(0(#)))"))
                                    (rule "times_zero_1" (formula "6") (term "1,1"))
                                    (rule "add_zero_right" (formula "6") (term "1"))
                                    (rule "applyEqRigid" (formula "7") (term "0,0") (ifseqformula "6"))
                                    (rule "eqSymm" (formula "7"))
                                    (rule "applyEq" (formula "5") (term "1,1") (ifseqformula "7"))
                                    (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "7"))
                                    (rule "applyEqRigid" (formula "8") (term "0,0") (ifseqformula "7"))
                                    (rule "inEqSimp_homoInEq1" (formula "8") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                    (rule "applyEq" (formula "4") (term "0") (ifseqformula "7"))
                                    (rule "applyEq" (formula "8") (term "1,1,0,0,0,1") (ifseqformula "7"))
                                    (rule "applyEqRigid" (formula "42") (term "0,2,0") (ifseqformula "7"))
                                    (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "7"))
                                    (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                                    (rule "applyEqRigid" (formula "41") (term "1,1,0") (ifseqformula "7"))
                                    (rule "applyEqRigid" (formula "40") (term "1,1,0") (ifseqformula "7"))
                                    (rule "applyEq" (formula "43") (term "0,2,0") (ifseqformula "7"))
                                    (rule "applyEq" (formula "9") (term "1,1,0,0,0,1,1") (ifseqformula "7"))
                                    (rule "applyEq" (formula "40") (term "1,1,1") (ifseqformula "7"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0"))
                                    (rule "mul_literals" (formula "8") (term "0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0"))
                                    (rule "mul_literals" (formula "9") (term "0,1,0"))
                                    (rule "elimGcdGeq_antec" (formula "4") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                    (rule "times_zero_1" (formula "4") (term "1,0,0,0,0,1,0"))
                                    (rule "leq_literals" (formula "4") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "4") (term "0,0,0,0"))
                                    (rule "add_zero_right" (formula "4") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                    (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "4") (term "0,0"))
                                    (rule "leq_literals" (formula "4") (term "0"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "elimGcdLeq" (formula "9") (term "0,0,0,1,1") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_1)") (inst "elimGcdLeftDiv=m") (inst "elimGcd=Z(2(#))"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0,0,0,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,0,0,0,1,1"))
                                    (rule "sub_literals" (formula "9") (term "0,0,0,0,0,0,0,0,0,0,1,1"))
                                    (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0,0,0,0,0,1,1"))
                                    (rule "mul_literals" (formula "9") (term "0,0,0,0,0,1,0,0,0,0,1,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0,0,0,0,0,1,1"))
                                    (rule "add_literals" (formula "9") (term "1,1,0,0,0,0,0,0,1,1"))
                                    (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0,0,1,1"))
                                    (rule "add_zero_right" (formula "9") (term "0,0,0,0,0,0,1,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,1,0,0,0,0,1,1"))
                                    (rule "add_literals" (formula "9") (term "1,1,0,1,0,0,0,0,1,1"))
                                    (rule "times_zero_1" (formula "9") (term "1,0,1,0,0,0,0,1,1"))
                                    (rule "add_zero_right" (formula "9") (term "0,1,0,0,0,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0,0,0,1,1"))
                                    (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0,0,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "9") (term "0,0,1,0,0,0,0,1,1"))
                                    (rule "mul_literals" (formula "9") (term "0,0,0,1,0,0,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0,0,0,1,1"))
                                    (rule "add_literals" (formula "9") (term "0,0,0,0,0,0,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "9") (term "0,1,0,0,0,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "9") (term "0,0,1,0,0,0,0,1,1"))
                                    (rule "add_literals" (formula "9") (term "0,0,0,1,0,0,0,0,1,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,1,0,0,0,0,1,1"))
                                    (rule "add_literals" (formula "9") (term "1,1,0,1,0,0,0,0,1,1"))
                                    (rule "times_zero_1" (formula "9") (term "1,0,1,0,0,0,0,1,1"))
                                    (rule "add_zero_right" (formula "9") (term "0,1,0,0,0,0,1,1"))
                                    (rule "qeq_literals" (formula "9") (term "1,0,0,0,0,1,1"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "9") (term "0,0,0,0,0,0,1,1"))
                                    (rule "add_literals" (formula "9") (term "0,0,0,0,0,0,0,1,1"))
                                    (rule "add_zero_left" (formula "9") (term "0,0,0,0,0,0,1,1"))
                                    (rule "polySimp_pullOutFactor0" (formula "9") (term "0,0,0,0,0,1,1"))
                                    (rule "add_literals" (formula "9") (term "1,0,0,0,0,0,1,1"))
                                    (rule "times_zero_1" (formula "9") (term "0,0,0,0,0,1,1"))
                                    (rule "leq_literals" (formula "9") (term "0,0,0,0,1,1"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "elimGcdLeq" (formula "8") (term "0,0,0,1") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_1)") (inst "elimGcdLeftDiv=n") (inst "elimGcd=Z(2(#))"))
                                    (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0,0,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0,0,0,0,1"))
                                    (rule "sub_literals" (formula "8") (term "0,0,0,0,0,0,0,0,0,0,1"))
                                    (rule "mul_literals" (formula "8") (term "0,0,0,0,0,1,0,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0,0,0,0,0,1"))
                                    (rule "add_literals" (formula "8") (term "1,1,0,0,0,0,0,0,1"))
                                    (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0,0,1"))
                                    (rule "add_zero_right" (formula "8") (term "0,0,0,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,1,0,0,0,0,1"))
                                    (rule "add_literals" (formula "8") (term "1,1,0,1,0,0,0,0,1"))
                                    (rule "times_zero_1" (formula "8") (term "1,0,1,0,0,0,0,1"))
                                    (rule "add_zero_right" (formula "8") (term "0,1,0,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0,0,0,1"))
                                    (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "8") (term "0,0,1,0,0,0,0,1"))
                                    (rule "mul_literals" (formula "8") (term "0,0,0,1,0,0,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0,0,0,1"))
                                    (rule "add_literals" (formula "8") (term "0,0,0,0,0,0,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "8") (term "0,1,0,0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0,0,1,0,0,0,0,1"))
                                    (rule "add_literals" (formula "8") (term "0,0,0,1,0,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,1,0,0,0,0,1"))
                                    (rule "add_literals" (formula "8") (term "1,1,0,1,0,0,0,0,1"))
                                    (rule "times_zero_1" (formula "8") (term "1,0,1,0,0,0,0,1"))
                                    (rule "add_zero_right" (formula "8") (term "0,1,0,0,0,0,1"))
                                    (rule "qeq_literals" (formula "8") (term "1,0,0,0,0,1"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0,0,0,0,0,0,1"))
                                    (rule "add_literals" (formula "8") (term "0,0,0,0,0,0,0,1"))
                                    (rule "add_zero_left" (formula "8") (term "0,0,0,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor0" (formula "8") (term "0,0,0,0,0,1"))
                                    (rule "add_literals" (formula "8") (term "1,0,0,0,0,0,1"))
                                    (rule "times_zero_1" (formula "8") (term "0,0,0,0,0,1"))
                                    (rule "leq_literals" (formula "8") (term "0,0,0,0,1"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "elimGcdLeq" (formula "8") (term "0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_1)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                    (rule "sub_literals" (formula "8") (term "0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0,0"))
                                    (rule "mul_literals" (formula "8") (term "0,0,0,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,1,0,0"))
                                    (rule "add_literals" (formula "8") (term "1,1,0,1,0,0"))
                                    (rule "times_zero_1" (formula "8") (term "1,0,1,0,0"))
                                    (rule "add_zero_right" (formula "8") (term "0,1,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "8") (term "1,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "8") (term "1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "8") (term "0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "8") (term "0,0,1,0,0"))
                                    (rule "mul_literals" (formula "8") (term "0,0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "8") (term "0,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,1,0,0"))
                                    (rule "add_literals" (formula "8") (term "1,1,0,1,0,0"))
                                    (rule "times_zero_1" (formula "8") (term "1,0,1,0,0"))
                                    (rule "add_zero_right" (formula "8") (term "0,1,0,0"))
                                    (rule "qeq_literals" (formula "8") (term "1,0,0"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "8") (term "0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "8") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "8") (term "0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "8") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0" (formula "8") (term "0,0,0"))
                                    (rule "add_literals" (formula "8") (term "1,0,0,0"))
                                    (rule "times_zero_1" (formula "8") (term "0,0,0"))
                                    (rule "leq_literals" (formula "8") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "elimGcdGeq" (formula "9") (term "0") (inst "elimGcdRightDiv=add(Z(1(#)), l_1)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,0"))
                                    (rule "sub_literals" (formula "9") (term "0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0,0"))
                                    (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "9") (term "0,0,0,0,0,1,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "9") (term "1,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "9") (term "1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "9") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,1,0,0"))
                                    (rule "add_literals" (formula "9") (term "1,1,0,1,0,0"))
                                    (rule "times_zero_1" (formula "9") (term "1,0,1,0,0"))
                                    (rule "add_zero_right" (formula "9") (term "0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "9") (term "0,0,1,0,0"))
                                    (rule "mul_literals" (formula "9") (term "0,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "9") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "9") (term "0,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "9") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,1,0,0"))
                                    (rule "add_literals" (formula "9") (term "1,1,0,1,0,0"))
                                    (rule "times_zero_1" (formula "9") (term "1,0,1,0,0"))
                                    (rule "add_zero_right" (formula "9") (term "0,1,0,0"))
                                    (rule "leq_literals" (formula "9") (term "1,0,0"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "polySimp_addAssoc" (formula "9") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "9") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "9") (term "0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "9") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0" (formula "9") (term "0,0,0"))
                                    (rule "add_literals" (formula "9") (term "1,0,0,0"))
                                    (rule "times_zero_1" (formula "9") (term "0,0,0"))
                                    (rule "qeq_literals" (formula "9") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "12"))
                                    (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                                    (rule "mul_literals" (formula "18") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0"))
                                    (rule "add_literals" (formula "18") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                    (rule "polySimp_elimOne" (formula "18") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "12"))
                                    (rule "polySimp_rightDist" (formula "38") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0"))
                                    (rule "mul_literals" (formula "38") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "38") (term "0"))
                                    (rule "add_literals" (formula "38") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "38"))
                                    (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                                    (rule "elimGcdLeq_antec" (formula "38") (inst "elimGcdRightDiv=Z(1(1(9(0(7(8(6(3(5(#))))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                    (rule "polySimp_mulLiterals" (formula "38") (term "1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,0,0,1,0"))
                                    (rule "neg_literal" (formula "38") (term "0,0,0,0,0,1,0"))
                                    (rule "leq_literals" (formula "38") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "38"))
                                    (rule "mul_literals" (formula "38") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "38") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "38") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "38") (term "0,0"))
                                    (rule "add_literals" (formula "38") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "38") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "38") (term "0,0"))
                                    (rule "qeq_literals" (formula "38") (term "0"))
                                     (builtin "One Step Simplification" (formula "38"))
                                    (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "12"))
                                    (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                    (rule "mul_literals" (formula "5") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0"))
                                    (rule "add_literals" (formula "5") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                    (rule "elimGcdLeq_antec" (formula "5") (inst "elimGcdRightDiv=Z(1(1(9(0(7(8(6(3(5(#))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0"))
                                    (rule "leq_literals" (formula "5") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "neg_literal" (formula "5") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "5") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "5") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                    (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "5") (term "0,0"))
                                    (rule "qeq_literals" (formula "5") (term "0"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "nnf_imp2or" (formula "14") (term "1,0"))
                                    (rule "nnf_imp2or" (formula "15") (term "1,0,1,0"))
                                    (rule "nnf_imp2or" (formula "25") (term "0"))
                                    (rule "commute_and" (formula "51"))
                                    (rule "nnf_imp2or" (formula "26") (term "0"))
                                    (rule "commute_and" (formula "15") (term "0,0"))
                                    (rule "jdiv_axiom" (formula "17") (term "1,0"))
                                    (rule "eqSymm" (formula "17"))
                                    (rule "inEqSimp_subsumption1" (formula "17") (term "0,0") (ifseqformula "12"))
                                    (rule "leq_literals" (formula "17") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "17"))
                                    (rule "eqSymm" (formula "17"))
                                    (rule "applyEqRigid" (formula "15") (term "1,1,0,0,0,1,0") (ifseqformula "17"))
                                    (rule "applyEqRigid" (formula "26") (term "1,1,0,0,0,0") (ifseqformula "17"))
                                    (rule "applyEq" (formula "15") (term "1,1,1,0,0") (ifseqformula "17"))
                                    (rule "applyEqRigid" (formula "18") (term "1,0") (ifseqformula "17"))
                                    (rule "applyEqRigid" (formula "14") (term "1,1,0,0,0") (ifseqformula "17"))
                                    (rule "applyEqRigid" (formula "24") (term "0") (ifseqformula "17"))
                                    (rule "applyEq" (formula "27") (term "1,1,0,0,0,0") (ifseqformula "17"))
                                    (rule "nnf_imp2or" (formula "9") (term "0,1"))
                                    (rule "nnf_imp2or" (formula "10") (term "0,0,1"))
                                    (rule "nnf_imp2or" (formula "10") (term "0,1,1"))
                                    (rule "nnf_imp2or" (formula "26") (term "1,0"))
                                    (rule "nnf_imp2or" (formula "27") (term "1,0"))
                                    (rule "nnf_imp2or" (formula "15") (term "0"))
                                    (rule "nnf_imp2or" (formula "14") (term "0"))
                                    (rule "nnf_notAnd" (formula "26") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "26") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "26") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "26") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                                    (rule "mul_literals" (formula "26") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "26") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "26") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "26") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "26") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "27") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "27") (term "1,0,0"))
                                    (rule "mul_literals" (formula "27") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "27") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                                    (rule "mul_literals" (formula "27") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "27") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "27") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "27") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "27") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "15") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "15") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                    (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "14") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "14") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "14") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "14") (term "1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "14") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "14") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "14") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                    (rule "mul_literals" (formula "14") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "9") (term "0,0,1"))
                                    (rule "inEqSimp_notLeq" (formula "9") (term "0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0,1"))
                                    (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0,1"))
                                    (rule "add_literals" (formula "9") (term "0,0,0,0,0,0,1"))
                                    (rule "add_zero_left" (formula "9") (term "0,0,0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "9") (term "1,0,0,0,1"))
                                    (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,1"))
                                    (rule "mul_literals" (formula "9") (term "0,1,1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,1"))
                                    (rule "nnf_notAnd" (formula "26") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "26"))
                                    (rule "inEqSimp_notLeq" (formula "26") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,1,0,1,0"))
                                    (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,1,0"))
                                    (rule "add_literals" (formula "26") (term "0,0,0,1,0,1,0"))
                                    (rule "add_zero_left" (formula "26") (term "0,0,1,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,1,0"))
                                    (rule "nnf_notAnd" (formula "27") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "27"))
                                    (rule "inEqSimp_notGeq" (formula "27") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,1,0,1,0"))
                                    (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,1,0"))
                                    (rule "add_literals" (formula "27") (term "0,0,0,1,0,1,0"))
                                    (rule "add_zero_left" (formula "27") (term "0,0,1,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,1,0"))
                                    (rule "nnf_imp2or" (formula "15") (term "0,1,0"))
                                    (rule "nnf_notAnd" (formula "10") (term "0,0,0,1"))
                                    (rule "inEqSimp_notLeq" (formula "10") (term "0,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0,0,1"))
                                    (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0,0,1"))
                                    (rule "add_literals" (formula "10") (term "0,0,0,0,0,0,0,1"))
                                    (rule "add_zero_left" (formula "10") (term "0,0,0,0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "10") (term "1,0,0,0,0,1"))
                                    (rule "inEqSimp_notGeq" (formula "10") (term "1,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,0,1"))
                                    (rule "mul_literals" (formula "10") (term "0,1,1,0,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,0,1"))
                                    (rule "nnf_notAnd" (formula "10") (term "0,0,1,1"))
                                    (rule "inEqSimp_notGeq" (formula "10") (term "1,0,0,1,1"))
                                    (rule "times_zero_1" (formula "10") (term "1,0,0,1,0,0,1,1"))
                                    (rule "add_zero_right" (formula "10") (term "0,0,1,0,0,1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,1,1"))
                                    (rule "mul_literals" (formula "10") (term "1,1,0,0,1,1"))
                                    (rule "inEqSimp_notLeq" (formula "10") (term "0,0,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0,1,1"))
                                    (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0,1,1"))
                                    (rule "add_literals" (formula "10") (term "0,0,0,0,0,0,1,1"))
                                    (rule "add_zero_left" (formula "10") (term "0,0,0,0,0,1,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,0,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,1,1"))
                                    (rule "polySimp_elimOne" (formula "10") (term "1,0,0,0,1,1"))
                                    (rule "jdiv_axiom" (formula "38") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "38") (term "0,0,2,1"))
                                    (rule "eqSymm" (formula "38"))
                                    (rule "applyEq" (formula "38") (term "1") (ifseqformula "39"))
                                    (rule "inEqSimp_subsumption6" (formula "38") (term "0,0") (ifseqformula "43"))
                                    (rule "greater_literals" (formula "38") (term "0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "38"))
                                    (rule "mul_literals" (formula "38") (term "1,0,0,0"))
                                    (rule "leq_literals" (formula "38") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "38"))
                                    (rule "polyDiv_pullOut" (formula "38") (term "0") (inst "polyDivCoeff=l_0"))
                                    (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,2,0"))
                                    (rule "equal_literals" (formula "38") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "38"))
                                    (rule "polySimp_homoEq" (formula "38"))
                                    (rule "polySimp_pullOutFactor0" (formula "38") (term "0,0,0,1,0"))
                                    (rule "add_literals" (formula "38") (term "1,0,0,0,1,0"))
                                    (rule "times_zero_1" (formula "38") (term "0,0,0,1,0"))
                                    (rule "div_literals" (formula "38") (term "0,0,1,0"))
                                    (rule "add_zero_left" (formula "38") (term "0,1,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "38") (term "0"))
                                    (rule "add_literals" (formula "38") (term "1,0"))
                                    (rule "times_zero_1" (formula "38") (term "0"))
                                     (builtin "One Step Simplification" (formula "38"))
                                    (rule "true_left" (formula "38"))
                                    (rule "nnf_imp2or" (formula "26") (term "0,1,1,0"))
                                    (rule "nnf_imp2or" (formula "27") (term "0,1,1,0"))
                                    (rule "nnf_notAnd" (formula "15") (term "0,0,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,1,0"))
                                    (rule "inEqSimp_notLeq" (formula "15") (term "0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0,1,0"))
                                    (rule "add_literals" (formula "15") (term "0,0,0,0,0,0,1,0"))
                                    (rule "add_zero_left" (formula "15") (term "0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "15") (term "1,0,0,0,1,0"))
                                    (rule "nnf_notAnd" (formula "15") (term "0,1,0,1,0"))
                                     (builtin "One Step Simplification" (formula "15"))
                                    (rule "nnf_notAnd" (formula "26") (term "0,0,1,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "26") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "26") (term "0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0,1,1,0"))
                                    (rule "inEqSimp_notLeq" (formula "26") (term "0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "26") (term "0,0,0,0,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "26") (term "0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "26") (term "1,0,0,0,1,1,0"))
                                    (rule "nnf_notAnd" (formula "27") (term "0,0,1,1,0"))
                                    (rule "jdiv_axiom" (formula "7") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "0,0,2,1"))
                                    (rule "eqSymm" (formula "7"))
                                    (rule "applyEq" (formula "7") (term "1") (ifseqformula "8"))
                                    (rule "inEqSimp_subsumption6" (formula "7") (term "0,0") (ifseqformula "4"))
                                    (rule "times_zero_1" (formula "7") (term "1,1,0,0,0"))
                                    (rule "greater_literals" (formula "7") (term "0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "leq_literals" (formula "7") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "polyDiv_pullOut" (formula "7") (term "0") (inst "polyDivCoeff=l_1"))
                                    (rule "equal_literals" (formula "7") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0"))
                                    (rule "polySimp_pullOutFactor0" (formula "7") (term "0,0,0"))
                                    (rule "add_literals" (formula "7") (term "1,0,0,0"))
                                    (rule "times_zero_1" (formula "7") (term "0,0,0"))
                                    (rule "div_literals" (formula "7") (term "0,0"))
                                    (rule "add_zero_left" (formula "7") (term "0"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "true_left" (formula "7"))
                                    (rule "nnf_notOr" (formula "27") (term "1,0,0,1,1,0"))
                                    (rule "inEqSimp_notLeq" (formula "27") (term "0,1,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "27") (term "0,1,0,0,0,1,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,1,0,0,1,1,0"))
                                    (rule "add_literals" (formula "27") (term "0,0,0,0,1,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "27") (term "0,0,0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "27") (term "1,0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "27") (term "1,1,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "27") (term "1,0,0,1,1,0,0,1,1,0"))
                                    (rule "add_literals" (formula "27") (term "0,0,1,1,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "27") (term "1,1,1,0,0,1,1,0"))
                                    (rule "nnf_notAnd" (formula "27") (term "0,0,0,1,1,0"))
                                    (rule "nnf_notOr" (formula "27") (term "1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "27") (term "1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "27") (term "1,1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "27") (term "1,1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,1,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "27") (term "0,1,1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "27") (term "1,1,1,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_notLeq" (formula "27") (term "0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "27") (term "0,1,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,1,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "27") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "27") (term "0,0,0,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "27") (term "1,0,1,0,0,0,1,1,0"))
                                    (rule "nnf_notAnd" (formula "27") (term "0,0,0,0,1,1,0"))
                                    (rule "commute_or_2" (formula "14") (term "0"))
                                    (rule "nnf_notOr" (formula "27") (term "1,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "27") (term "1,1,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,1,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,1,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "27") (term "1,1,1,0,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "27") (term "1,1,1,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "27") (term "0,1,1,1,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,1,0,0,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "27") (term "1,1,1,1,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "27") (term "0,1,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "27") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "27") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,1,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "27") (term "1,0,1,0,0,0,0,1,1,0"))
                                    (rule "nnf_notOr" (formula "27") (term "0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_notLeq" (formula "27") (term "0,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "27") (term "0,0,0,0,0,0,0,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "27") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "27") (term "1,0,0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "27") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "27") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0,0,0,1,1,0"))
                                    (rule "cut_direct" (formula "45") (term "0"))
                                    (branch "CUT: pow(2, i_2_0) <= 2 + l_1 * 2 TRUE"
                                        (builtin "One Step Simplification" (formula "46"))
                                       (rule "applyEq" (formula "3") (term "0") (ifseqformula "46"))
                                       (rule "inEqSimp_homoInEq1" (formula "3"))
                                       (rule "times_zero_2" (formula "3") (term "1,0"))
                                       (rule "add_zero_right" (formula "3") (term "0"))
                                       (rule "applyEq" (formula "2") (term "0") (ifseqformula "46"))
                                       (rule "inEqSimp_homoInEq1" (formula "2"))
                                       (rule "times_zero_2" (formula "2") (term "1,0"))
                                       (rule "add_zero_right" (formula "2") (term "0"))
                                       (rule "applyEq" (formula "44") (term "0,1") (ifseqformula "46"))
                                       (rule "polySimp_homoEq" (formula "44") (term "1"))
                                       (rule "times_zero_2" (formula "44") (term "1,0,1"))
                                       (rule "add_zero_right" (formula "44") (term "0,1"))
                                       (rule "polySimp_sepPosMonomial" (formula "44") (term "1"))
                                       (rule "mul_literals" (formula "44") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                       (rule "mul_literals" (formula "3") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                       (rule "mul_literals" (formula "2") (term "1"))
                                       (rule "inEqSimp_contradInEq5" (formula "3") (ifseqformula "42"))
                                       (rule "times_zero_1" (formula "3") (term "1,1,0"))
                                       (rule "greater_literals" (formula "3") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "qeq_literals" (formula "3") (term "0"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "closeFalse" (formula "3"))
                                    )
                                    (branch "CUT: pow(2, i_2_0) <= 2 + l_1 * 2 FALSE"
                                        (builtin "One Step Simplification" (formula "45"))
                                       (rule "true_left" (formula "45"))
                                       (rule "inEqSimp_leqRight" (formula "45"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "replace_known_left" (formula "45") (term "0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "45"))
                                       (rule "applyEq" (formula "3") (term "0") (ifseqformula "45"))
                                       (rule "inEqSimp_homoInEq1" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                       (rule "mul_literals" (formula "3") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                       (rule "add_literals" (formula "3") (term "0,0,0"))
                                       (rule "applyEq" (formula "4") (term "0") (ifseqformula "45"))
                                       (rule "inEqSimp_homoInEq1" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                       (rule "mul_literals" (formula "4") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                       (rule "add_literals" (formula "4") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                       (rule "mul_literals" (formula "3") (term "0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                       (rule "mul_literals" (formula "4") (term "0,1"))
                                       (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                       (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                                       (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                       (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "7") (term "0,0"))
                                       (rule "qeq_literals" (formula "7") (term "0"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "true_left" (formula "7"))
                                       (rule "elimGcdLeq_antec" (formula "4") (inst "elimGcdRightDiv=add(Z(0(#)), l_1)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0"))
                                       (rule "neg_literal" (formula "4") (term "0,0,0,0,0,1,0"))
                                       (rule "add_zero_left" (formula "4") (term "1,1,0,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0,1,0"))
                                       (rule "add_zero_left" (formula "4") (term "1,1"))
                                       (rule "leq_literals" (formula "4") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                       (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "4") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                       (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                       (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "4") (term "0,0"))
                                       (rule "qeq_literals" (formula "4") (term "0"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "inEqSimp_contradInEq0" (formula "10") (term "0") (ifseqformula "4"))
                                       (rule "inEqSimp_homoInEq1" (formula "10") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,0"))
                                       (rule "add_literals" (formula "10") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "10") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "10") (term "0,0,0"))
                                       (rule "leq_literals" (formula "10") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "10"))
                                       (rule "true_left" (formula "10"))
                                       (rule "elimGcdLeq_antec" (formula "3") (inst "elimGcdRightDiv=add(Z(0(#)), l_1)") (inst "elimGcdLeftDiv=n_0") (inst "elimGcd=Z(2(#))"))
                                       (rule "leq_literals" (formula "3") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "neg_literal" (formula "3") (term "0,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "3") (term "1,1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                       (rule "add_zero_left" (formula "3") (term "1,1"))
                                       (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "3") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                       (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "3") (term "0,0"))
                                       (rule "qeq_literals" (formula "3") (term "0"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "inEqSimp_exactShadow3" (formula "41") (ifseqformula "4"))
                                       (rule "times_zero_1" (formula "41") (term "0,0"))
                                       (rule "add_zero_left" (formula "41") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "12"))
                                       (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "1") (inst "elimGcdRightDiv=Z(0(1(9(0(7(8(6(3(5(#))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                       (rule "neg_literal" (formula "1") (term "0,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "1") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "1") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0"))
                                       (rule "qeq_literals" (formula "1") (term "0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "1"))
                                       (rule "leq_literals" (formula "7") (term "0"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "true_left" (formula "7"))
                                       (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "4"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "3") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                       (rule "polySimp_elimOne" (formula "3") (term "0"))
                                       (rule "commute_or" (formula "25") (term "0,0"))
                                       (rule "commute_or" (formula "26") (term "0,0"))
                                       (rule "commute_or" (formula "9") (term "0,0,1"))
                                       (rule "cut_direct" (formula "9") (term "0"))
                                       (branch "CUT: l_0 <= -1 + l_1 TRUE"
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "9"))
                                          (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                          (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "5") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
                                          (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "5") (term "0,0"))
                                          (rule "qeq_literals" (formula "5") (term "0"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "true_left" (formula "5"))
                                          (rule "inEqSimp_exactShadow3" (formula "41") (ifseqformula "8"))
                                          (rule "times_zero_1" (formula "41") (term "0,0"))
                                          (rule "add_zero_left" (formula "41") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "41"))
                                          (rule "mul_literals" (formula "41") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "41"))
                                          (rule "leq_literals" (formula "5") (term "0"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "true_left" (formula "5"))
                                          (rule "div_axiom" (formula "15") (term "1") (inst "quotient=quotient_0"))
                                          (rule "mul_literals" (formula "15") (term "1,1,1,1,1"))
                                          (rule "qeq_literals" (formula "15") (term "0,1,1"))
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "equal_literals" (formula "15") (term "0"))
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "andLeft" (formula "15"))
                                          (rule "andLeft" (formula "15"))
                                          (rule "polySimp_addComm1" (formula "17") (term "1"))
                                          (rule "add_literals" (formula "17") (term "0,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "16"))
                                          (rule "inEqSimp_homoInEq1" (formula "17"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "17") (term "0"))
                                          (rule "applyEqRigid" (formula "12") (term "1,0,0,0") (ifseqformula "15"))
                                          (rule "applyEq" (formula "28") (term "1,1,0,0") (ifseqformula "15"))
                                          (rule "applyEq" (formula "13") (term "1,0,0,0,1,0") (ifseqformula "15"))
                                          (rule "applyEq" (formula "25") (term "0") (ifseqformula "15"))
                                          (rule "inEqSimp_homoInEq1" (formula "25"))
                                          (rule "polySimp_addComm1" (formula "25") (term "0"))
                                          (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "15"))
                                          (rule "applyEq" (formula "27") (term "1,1,0,0") (ifseqformula "15"))
                                          (rule "applyEqRigid" (formula "13") (term "1,1,0,0") (ifseqformula "15"))
                                          (rule "applyEqRigid" (formula "18") (term "1") (ifseqformula "15"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "17"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "1,1"))
                                          (rule "mul_literals" (formula "17") (term "0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "25"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                          (rule "polySimp_rightDist" (formula "25") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                          (rule "mul_literals" (formula "25") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "42") (ifseqformula "17"))
                                          (rule "polySimp_rightDist" (formula "42") (term "0,0"))
                                          (rule "mul_literals" (formula "42") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "42") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "42") (term "0,0"))
                                          (rule "add_literals" (formula "42") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "42") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "42"))
                                          (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                          (rule "elimGcdLeq_antec" (formula "42") (inst "elimGcdRightDiv=quotient_0") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                          (rule "leq_literals" (formula "42") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "42"))
                                          (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0"))
                                          (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0"))
                                          (rule "neg_literal" (formula "42") (term "0,0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "42") (term "0,0"))
                                          (rule "add_literals" (formula "42") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "42") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "42") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "42") (term "0,0"))
                                          (rule "add_literals" (formula "42") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "42") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "42") (term "0,0"))
                                          (rule "qeq_literals" (formula "42") (term "0"))
                                           (builtin "One Step Simplification" (formula "42"))
                                          (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "11"))
                                          (rule "polySimp_mulAssoc" (formula "16") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "16") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                          (rule "elimGcdLeq_antec" (formula "16") (inst "elimGcdRightDiv=Z(2(1(9(0(7(8(6(3(5(#))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0"))
                                          (rule "leq_literals" (formula "16") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "16"))
                                          (rule "neg_literal" (formula "16") (term "0,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_addLiterals" (formula "16") (term "0,0,0,0"))
                                          (rule "add_zero_right" (formula "16") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                                          (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "16") (term "0,0"))
                                          (rule "qeq_literals" (formula "16") (term "0"))
                                           (builtin "One Step Simplification" (formula "16"))
                                          (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "18"))
                                          (rule "mul_literals" (formula "10") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                          (rule "add_literals" (formula "10") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                          (rule "mul_literals" (formula "10") (term "1"))
                                          (rule "elimGcdGeq_antec" (formula "10") (inst "elimGcdRightDiv=Z(4(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "10") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_addLiterals" (formula "10") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "10") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                                          (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "10") (term "0,0"))
                                          (rule "leq_literals" (formula "10") (term "0"))
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "19"))
                                          (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                          (rule "mul_literals" (formula "24") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "24") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                                          (rule "add_literals" (formula "24") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "24") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                          (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                          (rule "polySimp_elimOne" (formula "24") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "19"))
                                          (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                          (rule "mul_literals" (formula "2") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), quotient_0)") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "2") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                          (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "2") (term "0,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                          (rule "add_zero_left" (formula "2") (term "0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "2") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                          (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "2") (term "0,0"))
                                          (rule "qeq_literals" (formula "2") (term "0"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "29"))
                                          (rule "times_zero_1" (formula "28") (term "0,0"))
                                          (rule "add_zero_left" (formula "28") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "28"))
                                          (rule "mul_literals" (formula "28") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "11"))
                                          (rule "leq_literals" (formula "28") (term "0"))
                                           (builtin "One Step Simplification" (formula "28"))
                                          (rule "true_left" (formula "28"))
                                          (rule "inEqSimp_exactShadow3" (formula "49") (ifseqformula "46"))
                                          (rule "times_zero_1" (formula "49") (term "0,0"))
                                          (rule "add_zero_left" (formula "49") (term "0"))
                                          (rule "inEqSimp_subsumption1" (formula "49") (ifseqformula "11"))
                                          (rule "leq_literals" (formula "49") (term "0"))
                                           (builtin "One Step Simplification" (formula "49"))
                                          (rule "true_left" (formula "49"))
                                          (rule "inEqSimp_exactShadow3" (formula "48") (ifseqformula "2"))
                                          (rule "mul_literals" (formula "48") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "48") (term "0"))
                                          (rule "add_literals" (formula "48") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "48"))
                                          (rule "mul_literals" (formula "48") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "48") (ifseqformula "11"))
                                          (rule "leq_literals" (formula "48") (term "0"))
                                           (builtin "One Step Simplification" (formula "48"))
                                          (rule "true_left" (formula "48"))
                                          (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "25"))
                                          (rule "times_zero_1" (formula "23") (term "0,0"))
                                          (rule "add_zero_left" (formula "23") (term "0"))
                                          (rule "inEqSimp_subsumption6" (formula "23") (ifseqformula "11"))
                                          (rule "greater_literals" (formula "23") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "23"))
                                          (rule "mul_literals" (formula "23") (term "1,0"))
                                          (rule "leq_literals" (formula "23") (term "0"))
                                           (builtin "One Step Simplification" (formula "23"))
                                          (rule "true_left" (formula "23"))
                                          (rule "commute_or_2" (formula "31") (term "0,1,1,0"))
                                          (rule "cut_direct" (formula "58") (term "0,0"))
                                          (branch "CUT: self.table[n_0 * 2] = null TRUE"
                                              (builtin "One Step Simplification" (formula "59"))
                                             (rule "false_right" (formula "59"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "23") (term "1,0,0,2,0") (ifseqformula "35"))
                                             (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "56"))
                                              (builtin "One Step Simplification" (formula "23"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "36"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "33") (term "0") (ifseqformula "37"))
                                             (rule "replace_known_left" (formula "33") (term "0") (ifseqformula "34"))
                                              (builtin "One Step Simplification" (formula "33"))
                                             (rule "true_left" (formula "33"))
                                             (rule "commute_and" (formula "35") (term "1,0,0,1,1,0"))
                                             (rule "commute_and" (formula "35") (term "0,0,0,0,0,1,1,0"))
                                             (rule "cnf_rightDist" (formula "11") (term "0"))
                                             (rule "commute_or" (formula "16") (term "0,0"))
                                             (rule "shift_paren_or" (formula "17") (term "0,1,0"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "37"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "distr_forallAnd" (formula "12"))
                                             (rule "andLeft" (formula "12"))
                                             (rule "commute_or_2" (formula "18") (term "0"))
                                             (rule "commute_or_2" (formula "12") (term "0"))
                                             (rule "shift_paren_or" (formula "13") (term "0"))
                                             (rule "commute_or" (formula "12") (term "0,0"))
                                             (rule "commute_or_2" (formula "19") (term "0,0,1,0"))
                                             (rule "inEqSimp_or_weaken2" (formula "19") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "19") (term "1,0,1,0,1,0"))
                                             (rule "add_literals" (formula "19") (term "0,1,0,1,0,1,0"))
                                             (rule "add_zero_left" (formula "19") (term "1,0,1,0,1,0"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "commute_or" (formula "36") (term "0,0,1,1,0"))
                                             (rule "commute_or" (formula "19") (term "0,0,1,0"))
                                             (rule "cnf_rightDist" (formula "37") (term "0,0,0,0,1,1,0"))
                                             (rule "commute_or" (formula "37") (term "0,0,0,0,0,1,1,0"))
                                             (rule "cnf_rightDist" (formula "37") (term "1,0,0,0,0,1,1,0"))
                                             (rule "commute_or" (formula "37") (term "0,1,0,0,0,0,1,1,0"))
                                             (rule "cnf_rightDist" (formula "37") (term "0,0,0,0,0,1,1,0"))
                                             (rule "commute_or" (formula "37") (term "1,0,0,0,0,0,1,1,0"))
                                             (rule "all_pull_out3" (formula "36") (term "1,0"))
                                             (rule "shift_paren_or" (formula "36") (term "0,1,0"))
                                             (rule "shift_paren_or" (formula "36") (term "0,0,1,0"))
                                             (rule "commute_or_2" (formula "36") (term "0,0,0,1,0"))
                                             (rule "all_pull_out3" (formula "19") (term "0"))
                                             (rule "shift_paren_or" (formula "19") (term "0,0"))
                                             (rule "shift_paren_or" (formula "19") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "19") (term "0,0,0,0"))
                                             (rule "commute_or" (formula "19") (term "0,0,0,0,0"))
                                             (rule "shift_paren_and" (formula "37") (term "0,0,0,0,1,1,0"))
                                             (rule "cnf_rightDist" (formula "37") (term "0,0,0,1,1,0"))
                                             (rule "commute_or" (formula "37") (term "0,0,0,0,1,1,0"))
                                             (rule "cnf_rightDist" (formula "37") (term "1,0,0,0,1,1,0"))
                                              (builtin "One Step Simplification" (formula "37"))
                                             (rule "cnf_rightDist" (formula "37") (term "0,0,0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "37") (term "1,0,0,0,0,1,1,0"))
                                             (rule "commute_or" (formula "37") (term "0,1,0,0,0,0,1,1,0"))
                                             (rule "cnf_rightDist" (formula "37") (term "0,1,0,0,0,1,1,0"))
                                              (builtin "One Step Simplification" (formula "37"))
                                             (rule "cnf_rightDist" (formula "37") (term "0,0,0,0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "37") (term "1,0,0,0,0,0,1,1,0"))
                                              (builtin "One Step Simplification" (formula "37"))
                                             (rule "all_pull_out3" (formula "36") (term "0"))
                                             (rule "shift_paren_or" (formula "36") (term "0,0"))
                                             (rule "shift_paren_or" (formula "36") (term "0,0,0"))
                                             (rule "shift_paren_or" (formula "36") (term "0,0,0,0"))
                                             (rule "commute_or_2" (formula "36") (term "0,0,0,0,0"))
                                             (rule "commute_or" (formula "36") (term "0,0,0,0,0,0"))
                                             (rule "cnf_rightDist" (formula "37") (term "0,0,1,0,0,0,1,1,0"))
                                             (rule "commute_or" (formula "37") (term "0,0,0,1,0,0,0,1,1,0"))
                                             (rule "cnf_rightDist" (formula "37") (term "0,0,0,0,0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "37") (term "1,0,0,0,0,0,0,1,1,0"))
                                             (rule "shift_paren_or" (formula "37") (term "0,0,0,0,0,0,0,1,1,0"))
                                             (rule "shift_paren_and" (formula "37") (term "0,0,0,1,1,0"))
                                             (rule "shift_paren_and" (formula "37") (term "0,0,0,0,1,1,0"))
                                             (rule "allLeft" (formula "18") (inst "t=i_1_0"))
                                             (rule "replace_known_left" (formula "18") (term "0,0,0,0") (ifseqformula "36"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "inEqSimp_contradInEq0" (formula "18") (term "1") (ifseqformula "35"))
                                             (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                             (rule "polySimp_addComm0" (formula "18") (term "0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                             (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "18") (term "0,0,1"))
                                             (rule "leq_literals" (formula "18") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "34"))
                                             (rule "qeq_literals" (formula "18") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "shift_paren_and" (formula "38") (term "0,0,0,0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "38") (term "0,1,1,0"))
                                             (rule "commute_or" (formula "38") (term "0,0,1,1,0"))
                                             (rule "cnf_rightDist" (formula "38") (term "0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "38") (term "1,0,0,1,1,0"))
                                             (rule "commute_or" (formula "38") (term "0,1,0,0,1,1,0"))
                                             (rule "cnf_rightDist" (formula "38") (term "0,0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "38") (term "1,0,0,0,1,1,0"))
                                             (rule "commute_or" (formula "38") (term "0,1,0,0,0,1,1,0"))
                                             (rule "cnf_rightDist" (formula "38") (term "0,0,0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "38") (term "1,0,0,0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "38") (term "0,1,0,0,0,0,1,1,0"))
                                             (rule "commute_or" (formula "38") (term "0,0,1,0,0,0,0,1,1,0"))
                                             (rule "cnf_rightDist" (formula "38") (term "0,0,0,0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "38") (term "1,0,0,0,0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "38") (term "0,1,0,0,0,0,0,1,1,0"))
                                             (rule "allLeft" (formula "13") (inst "t=l_0"))
                                             (rule "inEqSimp_homoInEq0" (formula "13") (term "1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,1,0"))
                                             (rule "add_literals" (formula "13") (term "1,1,0,1,0"))
                                             (rule "times_zero_1" (formula "13") (term "1,0,1,0"))
                                             (rule "add_zero_right" (formula "13") (term "0,1,0"))
                                             (rule "qeq_literals" (formula "13") (term "1,0"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "inEqSimp_contradInEq0" (formula "13") (term "1") (ifseqformula "11"))
                                             (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "13") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "13") (term "0,0,1"))
                                             (rule "polySimp_addComm0" (formula "13") (term "0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1"))
                                             (rule "add_literals" (formula "13") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "13") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "13") (term "0,0,1"))
                                             (rule "leq_literals" (formula "13") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "notLeft" (formula "13"))
                                             (rule "allLeft" (formula "12") (inst "t=l_0"))
                                             (rule "inEqSimp_homoInEq0" (formula "12") (term "1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,1,0"))
                                             (rule "add_literals" (formula "12") (term "1,1,0,1,0"))
                                             (rule "times_zero_1" (formula "12") (term "1,0,1,0"))
                                             (rule "add_zero_right" (formula "12") (term "0,1,0"))
                                             (rule "qeq_literals" (formula "12") (term "1,0"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "inEqSimp_contradInEq0" (formula "12") (term "1") (ifseqformula "11"))
                                             (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "12") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "12") (term "0,0,1"))
                                             (rule "polySimp_addComm0" (formula "12") (term "0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1"))
                                             (rule "add_literals" (formula "12") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "12") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "12") (term "0,0,1"))
                                             (rule "leq_literals" (formula "12") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "notLeft" (formula "12"))
                                             (rule "allLeft" (formula "12") (inst "t=n_0"))
                                             (rule "replace_known_left" (formula "12") (term "0,0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "inEqSimp_contradInEq1" (formula "12") (term "0") (ifseqformula "7"))
                                             (rule "inEqSimp_homoInEq1" (formula "12") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "12") (term "0,0,0"))
                                             (rule "polySimp_addComm0" (formula "12") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,0"))
                                             (rule "add_literals" (formula "12") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "12") (term "1,0,0,0"))
                                             (rule "add_literals" (formula "12") (term "0,0,0"))
                                             (rule "leq_literals" (formula "12") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "inEqSimp_antiSymm" (formula "12") (ifseqformula "8"))
                                             (rule "applyEqRigid" (formula "13") (term "0") (ifseqformula "12"))
                                             (rule "inEqSimp_homoInEq1" (formula "13"))
                                             (rule "polySimp_pullOutFactor1" (formula "13") (term "0"))
                                             (rule "add_literals" (formula "13") (term "1,0"))
                                             (rule "times_zero_1" (formula "13") (term "0"))
                                             (rule "leq_literals" (formula "13"))
                                             (rule "true_left" (formula "13"))
                                             (rule "applyEq" (formula "8") (term "0") (ifseqformula "12"))
                                             (rule "inEqSimp_homoInEq0" (formula "8"))
                                             (rule "polySimp_pullOutFactor1" (formula "8") (term "0"))
                                             (rule "add_literals" (formula "8") (term "1,0"))
                                             (rule "times_zero_1" (formula "8") (term "0"))
                                             (rule "qeq_literals" (formula "8"))
                                             (rule "true_left" (formula "8"))
                                             (rule "applyEq" (formula "7") (term "0") (ifseqformula "11"))
                                             (rule "inEqSimp_commuteGeq" (formula "7"))
                                             (rule "applyEqRigid" (formula "3") (term "0,0,2,0") (ifseqformula "11"))
                                             (rule "close" (formula "60") (ifseqformula "3"))
                                          )
                                          (branch "CUT: self.table[n_0 * 2] = null FALSE"
                                              (builtin "One Step Simplification" (formula "59"))
                                             (rule "notRight" (formula "59"))
                                             (rule "applyEq" (formula "59") (term "0") (ifseqformula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "23") (term "1,0,0,2,0") (ifseqformula "35"))
                                             (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "56"))
                                              (builtin "One Step Simplification" (formula "23"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "36"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "33") (term "0") (ifseqformula "37"))
                                             (rule "replace_known_left" (formula "33") (term "0") (ifseqformula "34"))
                                              (builtin "One Step Simplification" (formula "33"))
                                             (rule "true_left" (formula "33"))
                                             (rule "commute_and" (formula "35") (term "1,0,0,1,1,0"))
                                             (rule "commute_and" (formula "35") (term "0,0,0,0,0,1,1,0"))
                                             (rule "cnf_rightDist" (formula "11") (term "0"))
                                             (rule "commute_or" (formula "16") (term "0,0"))
                                             (rule "shift_paren_or" (formula "17") (term "0,1,0"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "37"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "distr_forallAnd" (formula "12"))
                                             (rule "andLeft" (formula "12"))
                                             (rule "commute_or_2" (formula "18") (term "0"))
                                             (rule "commute_or_2" (formula "12") (term "0"))
                                             (rule "shift_paren_or" (formula "13") (term "0"))
                                             (rule "commute_or" (formula "12") (term "0,0"))
                                             (rule "commute_or_2" (formula "19") (term "0,0,1,0"))
                                             (rule "inEqSimp_or_weaken2" (formula "19") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "19") (term "1,0,1,0,1,0"))
                                             (rule "add_literals" (formula "19") (term "0,1,0,1,0,1,0"))
                                             (rule "add_zero_left" (formula "19") (term "1,0,1,0,1,0"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "commute_or" (formula "36") (term "0,0,1,1,0"))
                                             (rule "commute_or" (formula "19") (term "0,0,1,0"))
                                             (rule "cnf_rightDist" (formula "37") (term "0,0,0,0,1,1,0"))
                                             (rule "commute_or" (formula "37") (term "0,0,0,0,0,1,1,0"))
                                             (rule "cnf_rightDist" (formula "37") (term "1,0,0,0,0,1,1,0"))
                                             (rule "commute_or" (formula "37") (term "0,1,0,0,0,0,1,1,0"))
                                             (rule "cnf_rightDist" (formula "37") (term "0,0,0,0,0,1,1,0"))
                                             (rule "commute_or" (formula "37") (term "1,0,0,0,0,0,1,1,0"))
                                             (rule "all_pull_out3" (formula "36") (term "1,0"))
                                             (rule "shift_paren_or" (formula "36") (term "0,1,0"))
                                             (rule "shift_paren_or" (formula "36") (term "0,0,1,0"))
                                             (rule "commute_or_2" (formula "36") (term "0,0,0,1,0"))
                                             (rule "all_pull_out3" (formula "19") (term "0"))
                                             (rule "shift_paren_or" (formula "19") (term "0,0"))
                                             (rule "shift_paren_or" (formula "19") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "19") (term "0,0,0,0"))
                                             (rule "commute_or" (formula "19") (term "0,0,0,0,0"))
                                             (rule "shift_paren_and" (formula "37") (term "0,0,0,0,1,1,0"))
                                             (rule "cnf_rightDist" (formula "37") (term "0,0,0,1,1,0"))
                                             (rule "commute_or" (formula "37") (term "0,0,0,0,1,1,0"))
                                             (rule "cnf_rightDist" (formula "37") (term "1,0,0,0,1,1,0"))
                                              (builtin "One Step Simplification" (formula "37"))
                                             (rule "cnf_rightDist" (formula "37") (term "0,0,0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "37") (term "1,0,0,0,0,1,1,0"))
                                             (rule "commute_or" (formula "37") (term "0,1,0,0,0,0,1,1,0"))
                                             (rule "cnf_rightDist" (formula "37") (term "0,1,0,0,0,1,1,0"))
                                              (builtin "One Step Simplification" (formula "37"))
                                             (rule "cnf_rightDist" (formula "37") (term "0,0,0,0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "37") (term "1,0,0,0,0,0,1,1,0"))
                                              (builtin "One Step Simplification" (formula "37"))
                                             (rule "all_pull_out3" (formula "36") (term "0"))
                                             (rule "shift_paren_or" (formula "36") (term "0,0"))
                                             (rule "shift_paren_or" (formula "36") (term "0,0,0"))
                                             (rule "shift_paren_or" (formula "36") (term "0,0,0,0"))
                                             (rule "commute_or_2" (formula "36") (term "0,0,0,0,0"))
                                             (rule "commute_or" (formula "36") (term "0,0,0,0,0,0"))
                                             (rule "cnf_rightDist" (formula "37") (term "0,0,1,0,0,0,1,1,0"))
                                             (rule "commute_or" (formula "37") (term "0,0,0,1,0,0,0,1,1,0"))
                                             (rule "cnf_rightDist" (formula "37") (term "0,0,0,0,0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "37") (term "1,0,0,0,0,0,0,1,1,0"))
                                             (rule "shift_paren_or" (formula "37") (term "0,0,0,0,0,0,0,1,1,0"))
                                             (rule "shift_paren_and" (formula "37") (term "0,0,0,1,1,0"))
                                             (rule "shift_paren_and" (formula "37") (term "0,0,0,0,1,1,0"))
                                             (rule "allLeft" (formula "18") (inst "t=i_1_0"))
                                             (rule "replace_known_left" (formula "18") (term "0,0,0,0") (ifseqformula "36"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0") (ifseqformula "34"))
                                             (rule "qeq_literals" (formula "18") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "inEqSimp_contradInEq0" (formula "18") (term "1") (ifseqformula "35"))
                                             (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                             (rule "polySimp_addComm0" (formula "18") (term "0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                             (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "18") (term "0,0,1"))
                                             (rule "leq_literals" (formula "18") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "shift_paren_and" (formula "38") (term "0,0,0,0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "38") (term "0,1,1,0"))
                                             (rule "commute_or" (formula "38") (term "0,0,1,1,0"))
                                             (rule "cnf_rightDist" (formula "38") (term "0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "38") (term "1,0,0,1,1,0"))
                                             (rule "commute_or" (formula "38") (term "0,1,0,0,1,1,0"))
                                             (rule "cnf_rightDist" (formula "38") (term "0,0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "38") (term "1,0,0,0,1,1,0"))
                                             (rule "commute_or" (formula "38") (term "0,1,0,0,0,1,1,0"))
                                             (rule "cnf_rightDist" (formula "38") (term "0,0,0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "38") (term "1,0,0,0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "38") (term "0,1,0,0,0,0,1,1,0"))
                                             (rule "commute_or" (formula "38") (term "0,0,1,0,0,0,0,1,1,0"))
                                             (rule "cnf_rightDist" (formula "38") (term "0,0,0,0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "38") (term "1,0,0,0,0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "38") (term "0,1,0,0,0,0,0,1,1,0"))
                                             (rule "allLeft" (formula "12") (inst "t=l_0"))
                                             (rule "inEqSimp_homoInEq0" (formula "12") (term "1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,1,0"))
                                             (rule "add_literals" (formula "12") (term "1,1,0,1,0"))
                                             (rule "times_zero_1" (formula "12") (term "1,0,1,0"))
                                             (rule "add_zero_right" (formula "12") (term "0,1,0"))
                                             (rule "qeq_literals" (formula "12") (term "1,0"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "inEqSimp_contradInEq0" (formula "12") (term "1") (ifseqformula "11"))
                                             (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "12") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "12") (term "0,0,1"))
                                             (rule "polySimp_addComm0" (formula "12") (term "0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1"))
                                             (rule "add_literals" (formula "12") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "12") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "12") (term "0,0,1"))
                                             (rule "leq_literals" (formula "12") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "notLeft" (formula "12"))
                                             (rule "allLeft" (formula "13") (inst "t=l_0"))
                                             (rule "inEqSimp_homoInEq0" (formula "13") (term "1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,1,0"))
                                             (rule "add_literals" (formula "13") (term "1,1,0,1,0"))
                                             (rule "times_zero_1" (formula "13") (term "1,0,1,0"))
                                             (rule "add_zero_right" (formula "13") (term "0,1,0"))
                                             (rule "qeq_literals" (formula "13") (term "1,0"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "inEqSimp_contradInEq0" (formula "13") (term "1") (ifseqformula "11"))
                                             (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "13") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "13") (term "0,0,1"))
                                             (rule "polySimp_addComm0" (formula "13") (term "0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1"))
                                             (rule "add_literals" (formula "13") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "13") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "13") (term "0,0,1"))
                                             (rule "leq_literals" (formula "13") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "notLeft" (formula "13"))
                                             (rule "allLeft" (formula "13") (inst "t=n_0"))
                                             (rule "replace_known_left" (formula "13") (term "0,0,0") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "inEqSimp_contradInEq1" (formula "13") (term "0") (ifseqformula "7"))
                                             (rule "inEqSimp_homoInEq1" (formula "13") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
                                             (rule "polySimp_addComm0" (formula "13") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,0"))
                                             (rule "add_literals" (formula "13") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "13") (term "1,0,0,0"))
                                             (rule "add_literals" (formula "13") (term "0,0,0"))
                                             (rule "leq_literals" (formula "13") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "inEqSimp_antiSymm" (formula "13") (ifseqformula "8"))
                                             (rule "applyEq" (formula "7") (term "0") (ifseqformula "13"))
                                             (rule "inEqSimp_commuteGeq" (formula "7"))
                                             (rule "applyEqRigid" (formula "3") (term "0,0,2,0") (ifseqformula "13"))
                                             (rule "close" (formula "63") (ifseqformula "3"))
                                          )
                                       )
                                       (branch "CUT: l_0 <= -1 + l_1 FALSE"
                                           (builtin "One Step Simplification" (formula "9"))
                                          (rule "true_left" (formula "9"))
                                          (rule "inEqSimp_leqRight" (formula "43"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1"))
                                          (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "6"))
                                          (rule "applyEqRigid" (formula "41") (term "0,1,1") (ifseqformula "1"))
                                          (rule "applyEq" (formula "40") (term "0") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "2"))
                                          (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                          (rule "add_literals" (formula "2") (term "1,0"))
                                          (rule "times_zero_1" (formula "2") (term "0"))
                                          (rule "leq_literals" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "applyEqRigid" (formula "41") (term "0") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "4") (term "1") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "6") (term "0") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq0" (formula "6"))
                                          (rule "polySimp_pullOutFactor1" (formula "6") (term "0"))
                                          (rule "add_literals" (formula "6") (term "1,0"))
                                          (rule "times_zero_1" (formula "6") (term "0"))
                                          (rule "qeq_literals" (formula "6"))
                                          (rule "true_left" (formula "6"))
                                          (rule "applyEqRigid" (formula "36") (term "0,0,0") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "36") (term "0") (ifseqformula "7"))
                                          (rule "eqSymm" (formula "36"))
                                          (rule "applyEqRigid" (formula "36") (term "0,1") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "35") (term "0,1") (ifseqformula "1"))
                                          (rule "inEqSimp_subsumption0" (formula "37") (ifseqformula "2"))
                                          (rule "leq_literals" (formula "37") (term "0"))
                                           (builtin "One Step Simplification" (formula "37"))
                                          (rule "true_left" (formula "37"))
                                          (rule "inEqSimp_subsumption1" (formula "37") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq0" (formula "37") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "37") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "37") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "37") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "37") (term "0,0,0"))
                                          (rule "add_literals" (formula "37") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "37") (term "0,0"))
                                          (rule "add_literals" (formula "37") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "37") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "37") (term "0,0"))
                                          (rule "qeq_literals" (formula "37") (term "0"))
                                           (builtin "One Step Simplification" (formula "37"))
                                          (rule "true_left" (formula "37"))
                                          (rule "inEqSimp_antiSymm" (formula "4") (ifseqformula "5"))
                                          (rule "applyEq" (formula "46") (term "0,0,2,0,0,1") (ifseqformula "4"))
                                          (rule "replace_known_right" (formula "46") (term "0,1") (ifseqformula "41"))
                                           (builtin "One Step Simplification" (formula "46"))
                                          (rule "notRight" (formula "46"))
                                          (rule "applyEq" (formula "7") (term "0") (ifseqformula "5"))
                                          (rule "inEqSimp_homoInEq0" (formula "7"))
                                          (rule "polySimp_pullOutFactor1" (formula "7") (term "0"))
                                          (rule "add_literals" (formula "7") (term "1,0"))
                                          (rule "times_zero_1" (formula "7") (term "0"))
                                          (rule "qeq_literals" (formula "7"))
                                          (rule "true_left" (formula "7"))
                                          (rule "applyEqRigid" (formula "6") (term "0") (ifseqformula "5"))
                                          (rule "inEqSimp_homoInEq1" (formula "6"))
                                          (rule "polySimp_pullOutFactor1" (formula "6") (term "0"))
                                          (rule "add_literals" (formula "6") (term "1,0"))
                                          (rule "times_zero_1" (formula "6") (term "0"))
                                          (rule "leq_literals" (formula "6"))
                                          (rule "true_left" (formula "6"))
                                          (rule "applyEq" (formula "1") (term "0,0,2,0") (ifseqformula "5"))
                                          (rule "close" (formula "39") (ifseqformula "1"))
                                       )
                                    )
                                 )
                              )
                              (branch "Case 2"
                                 (rule "impRight" (formula "45"))
                                 (rule "andRight" (formula "46"))
                                 (branch "Case 1"
                                    (rule "allRight" (formula "46") (inst "sk=n_0"))
                                    (rule "impRight" (formula "46"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "5"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "22"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "22") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "8") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "25") (term "0,1,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_gtToGeq" (formula "7") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                    (rule "inEqSimp_gtToGeq" (formula "24") (term "1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "24") (term "0,1,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "37"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "37") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0,1,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "40") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "40") (term "0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulAssoc" (formula "25") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "17"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "14"))
                                    (rule "mul_literals" (formula "14") (term "1,0,0"))
                                    (rule "add_literals" (formula "14") (term "0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "25") (term "0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulAssoc" (formula "25") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "0,1,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "25") (term "0,1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "40") (term "0,0,0"))
                                    (rule "add_literals" (formula "40") (term "0,0,0,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "1"))
                                    (rule "jmod_axiom" (formula "6") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                                    (rule "jmod_axiom" (formula "36") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "1,0"))
                                    (rule "polySimp_sepNegMonomial" (formula "6"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                    (rule "polySimp_sepNegMonomial" (formula "36"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0,1"))
                                    (rule "mul_literals" (formula "7") (term "0,1,0,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                    (rule "polySimp_elimOne" (formula "5") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                                    (rule "applyEq" (formula "19") (term "0") (ifseqformula "20"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "21"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                    (rule "polySimp_elimOne" (formula "21") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "8") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "0,0"))
                                    (rule "polySimp_elimOne" (formula "8") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "13") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "0,1,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "24") (term "0,1,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "23") (term "0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "7") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "0,0"))
                                    (rule "polySimp_elimOne" (formula "7") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "23") (term "1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "0,1,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "23") (term "0,1,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,1"))
                                    (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,0,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "36"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                    (rule "polySimp_elimOne" (formula "36") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,1,1"))
                                    (rule "mul_literals" (formula "8") (term "0,1,0,0,0,1,1"))
                                    (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1"))
                                    (rule "mul_literals" (formula "3") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "24") (term "0,1,1,0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "17"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                    (rule "polySimp_elimOne" (formula "17") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "14"))
                                    (rule "mul_literals" (formula "14") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,0,1,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "24") (term "0,1,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,1,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,0,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "24") (term "0,1,0,1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,1,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "24") (term "1,1,0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "39") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "0,0"))
                                    (rule "polySimp_elimOne" (formula "39") (term "0,0"))
                                    (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "10"))
                                    (rule "leq_literals" (formula "18") (term "0"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "true_left" (formula "18"))
                                    (rule "elimGcdLeq" (formula "23") (term "0,1,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                                    (rule "sub_literals" (formula "23") (term "0,0,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "23") (term "0,0,0,0,0,1,0,0,1,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,1,0,0,1,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "0,0,1,0,0,1,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "23") (term "0,0,0,1,0,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,0,1,0,0,1,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "23") (term "0,0,0,1,0,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,1,0,0,1,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                    (rule "qeq_literals" (formula "23") (term "1,0,0,1,0,0,0,1,1,0"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "23") (term "0,0,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "23") (term "0,0,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "23") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0" (formula "23") (term "0,0,0,1,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "23") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "23") (term "0,0,0,1,0,0,0,1,1,0"))
                                    (rule "leq_literals" (formula "23") (term "0,0,1,0,0,0,1,1,0"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "elimGcdGeq" (formula "8") (term "1,0,0,1,1") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=m") (inst "elimGcd=Z(2(#))"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,1,0,0,1,1"))
                                    (rule "add_zero_right" (formula "8") (term "0,0,0,0,0,1,0,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0,1,0,0,1,1"))
                                    (rule "add_zero_right" (formula "8") (term "0,0,0,1,0,1,0,0,1,1"))
                                    (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0,1,0,0,1,1"))
                                    (rule "sub_literals" (formula "8") (term "0,0,0,0,0,0,1,0,0,1,1"))
                                    (rule "times_zero_1" (formula "8") (term "0,0,0,1,0,1,0,0,1,1"))
                                    (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0,1,0,0,1,1"))
                                    (rule "add_zero_left" (formula "8") (term "0,0,1,0,1,0,0,1,1"))
                                    (rule "add_zero_right" (formula "8") (term "0,0,0,0,0,1,0,0,1,1"))
                                    (rule "polySimp_pullOutFactor0" (formula "8") (term "0,1,0,1,0,0,1,1"))
                                    (rule "add_literals" (formula "8") (term "1,0,1,0,1,0,0,1,1"))
                                    (rule "times_zero_1" (formula "8") (term "0,1,0,1,0,0,1,1"))
                                    (rule "leq_literals" (formula "8") (term "1,0,1,0,0,1,1"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0,1,0,0,1,1"))
                                    (rule "add_literals" (formula "8") (term "1,1,0,0,1,0,0,1,1"))
                                    (rule "times_zero_1" (formula "8") (term "1,0,0,1,0,0,1,1"))
                                    (rule "add_zero_right" (formula "8") (term "0,0,1,0,0,1,1"))
                                    (rule "qeq_literals" (formula "8") (term "0,1,0,0,1,1"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "elimGcdGeq" (formula "23") (term "1,1,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0,1,1,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,1,1,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,0,0,0,0,1,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "23") (term "0,0,0,0,1,0,1,1,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0,1,1,0,0,1,1,0"))
                                    (rule "sub_literals" (formula "23") (term "0,0,0,0,0,0,1,1,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "23") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                                    (rule "add_literals" (formula "23") (term "0,0,0,0,0,1,1,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "23") (term "0,0,1,0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0,0,1,1,0,0,1,1,0"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,0,0,1,1,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,0,0,1,1,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,0,0,1,1,0,0,1,1,0"))
                                    (rule "qeq_literals" (formula "23") (term "0,0,1,1,0,0,1,1,0"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "polySimp_pullOutFactor0" (formula "23") (term "0,0,1,1,0,0,1,1,0"))
                                    (rule "add_literals" (formula "23") (term "1,0,0,1,1,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "23") (term "0,0,1,1,0,0,1,1,0"))
                                    (rule "leq_literals" (formula "23") (term "0,1,1,0,0,1,1,0"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "elimGcdLeq" (formula "23") (term "1,0,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                    (rule "sub_literals" (formula "23") (term "0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "23") (term "0,0,0,0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "23") (term "0,0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "23") (term "0,0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "qeq_literals" (formula "23") (term "1,0,1,0,0,0,0,0,1,1,0"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "23") (term "0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "23") (term "0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "23") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0" (formula "23") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "23") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "23") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "leq_literals" (formula "23") (term "0,1,0,0,0,0,0,1,1,0"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "elimGcdGeq" (formula "23") (term "0,1,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                    (rule "add_zero_right" (formula "23") (term "0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "sub_literals" (formula "23") (term "0,0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "23") (term "0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "23") (term "0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "qeq_literals" (formula "23") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "polySimp_pullOutFactor0" (formula "23") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "23") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "23") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "leq_literals" (formula "23") (term "0,0,1,0,0,0,0,1,1,0"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "newSym_eq" (formula "34") (inst "l=l_0") (inst "newSymDef=mul(result_1, Z(0(#)))"))
                                    (rule "times_zero_1" (formula "34") (term "1,1"))
                                    (rule "add_zero_right" (formula "34") (term "1"))
                                    (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "34"))
                                    (rule "eqSymm" (formula "35"))
                                    (rule "applyEq" (formula "3") (term "1,1") (ifseqformula "35"))
                                    (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "35"))
                                    (rule "inEqSimp_homoInEq1" (formula "8") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                    (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "35"))
                                    (rule "applyEq" (formula "7") (term "1,1,0,0,1") (ifseqformula "35"))
                                    (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "35"))
                                    (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                    (rule "applyEq" (formula "36") (term "1,1") (ifseqformula "35"))
                                    (rule "applyEq" (formula "1") (term "0") (ifseqformula "35"))
                                    (rule "inEqSimp_commuteLeq" (formula "1"))
                                    (rule "applyEq" (formula "8") (term "1,1,0,0,0,1") (ifseqformula "35"))
                                    (rule "applyEq" (formula "37") (term "0") (ifseqformula "35"))
                                    (rule "applyEq" (formula "33") (term "1") (ifseqformula "35"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                    (rule "mul_literals" (formula "8") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                    (rule "mul_literals" (formula "7") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0"))
                                    (rule "elimGcdGeq_antec" (formula "37") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                    (rule "times_zero_1" (formula "37") (term "1,0,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,0"))
                                    (rule "leq_literals" (formula "37") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "add_zero_right" (formula "37") (term "0,0,0,0"))
                                    (rule "add_zero_right" (formula "37") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "37") (term "0,0"))
                                    (rule "add_literals" (formula "37") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "37") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "37") (term "0,0"))
                                    (rule "leq_literals" (formula "37") (term "0"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "elimGcdGeq_antec" (formula "1") (inst "elimGcdRightDiv=l_0") (inst "elimGcdLeftDiv=n_0") (inst "elimGcd=Z(2(#))"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                    (rule "leq_literals" (formula "1") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0"))
                                    (rule "leq_literals" (formula "1") (term "0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "elimGcdGeq" (formula "8") (term "1,0,0,0,1") (inst "elimGcdRightDiv=l_0") (inst "elimGcdLeftDiv=n") (inst "elimGcd=Z(2(#))"))
                                    (rule "mul_literals" (formula "8") (term "0,0,0,0,0,1,0,1,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0,1,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,1,0,0,0,1"))
                                    (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0,0,1,0,0,0,1"))
                                    (rule "sub_literals" (formula "8") (term "0,0,0,0,0,0,0,1,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,1,0,1,0,0,0,1"))
                                    (rule "add_literals" (formula "8") (term "1,1,0,1,0,1,0,0,0,1"))
                                    (rule "times_zero_1" (formula "8") (term "1,0,1,0,1,0,0,0,1"))
                                    (rule "add_zero_right" (formula "8") (term "0,1,0,1,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0,0,1,0,0,0,1"))
                                    (rule "add_literals" (formula "8") (term "1,1,0,0,0,1,0,0,0,1"))
                                    (rule "times_zero_1" (formula "8") (term "1,0,0,0,1,0,0,0,1"))
                                    (rule "add_zero_right" (formula "8") (term "0,0,0,1,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "0,0,1,0,1,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor0" (formula "8") (term "0,1,0,1,0,0,0,1"))
                                    (rule "add_literals" (formula "8") (term "1,0,1,0,1,0,0,0,1"))
                                    (rule "times_zero_1" (formula "8") (term "0,1,0,1,0,0,0,1"))
                                    (rule "leq_literals" (formula "8") (term "1,0,1,0,0,0,1"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,1,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0,1,0,0,0,1"))
                                    (rule "add_literals" (formula "8") (term "1,1,0,0,1,0,0,0,1"))
                                    (rule "times_zero_1" (formula "8") (term "1,0,0,1,0,0,0,1"))
                                    (rule "add_zero_right" (formula "8") (term "0,0,1,0,0,0,1"))
                                    (rule "qeq_literals" (formula "8") (term "0,1,0,0,0,1"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "elimGcdGeq" (formula "7") (term "1,0,0,1") (inst "elimGcdRightDiv=l_0") (inst "elimGcdLeftDiv=n") (inst "elimGcd=Z(2(#))"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0,1,0,0,1"))
                                    (rule "mul_literals" (formula "7") (term "0,0,0,0,0,1,0,1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,1,0,0,1"))
                                    (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0,0,1,0,0,1"))
                                    (rule "sub_literals" (formula "7") (term "0,0,0,0,0,0,0,1,0,0,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,1,0,1,0,0,1"))
                                    (rule "add_literals" (formula "7") (term "1,1,0,1,0,1,0,0,1"))
                                    (rule "times_zero_1" (formula "7") (term "1,0,1,0,1,0,0,1"))
                                    (rule "add_zero_right" (formula "7") (term "0,1,0,1,0,0,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0,0,1,0,0,1"))
                                    (rule "add_literals" (formula "7") (term "1,1,0,0,0,1,0,0,1"))
                                    (rule "times_zero_1" (formula "7") (term "1,0,0,0,1,0,0,1"))
                                    (rule "add_zero_right" (formula "7") (term "0,0,0,1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0,1,0,0,1"))
                                    (rule "polySimp_pullOutFactor0" (formula "7") (term "0,1,0,1,0,0,1"))
                                    (rule "add_literals" (formula "7") (term "1,0,1,0,1,0,0,1"))
                                    (rule "times_zero_1" (formula "7") (term "0,1,0,1,0,0,1"))
                                    (rule "leq_literals" (formula "7") (term "1,0,1,0,0,1"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,1,0,0,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0,1,0,0,1"))
                                    (rule "add_literals" (formula "7") (term "1,1,0,0,1,0,0,1"))
                                    (rule "times_zero_1" (formula "7") (term "1,0,0,1,0,0,1"))
                                    (rule "add_zero_right" (formula "7") (term "0,0,1,0,0,1"))
                                    (rule "qeq_literals" (formula "7") (term "0,1,0,0,1"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "newSym_eq" (formula "6") (inst "l=l_1") (inst "newSymDef=mul(i_0, Z(0(#)))"))
                                    (rule "times_zero_1" (formula "6") (term "1,1"))
                                    (rule "add_zero_right" (formula "6") (term "1"))
                                    (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "6"))
                                    (rule "eqSymm" (formula "7"))
                                    (rule "applyEqRigid" (formula "41") (term "1,1,0") (ifseqformula "7"))
                                    (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "7"))
                                    (rule "applyEqRigid" (formula "9") (term "0,0") (ifseqformula "7"))
                                    (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                                    (rule "applyEq" (formula "8") (term "1,1,0,0,0,1") (ifseqformula "7"))
                                    (rule "applyEqRigid" (formula "9") (term "1,1,0,0,0,1,1") (ifseqformula "7"))
                                    (rule "applyEq" (formula "42") (term "0,2,0") (ifseqformula "7"))
                                    (rule "applyEqRigid" (formula "43") (term "0,2,0") (ifseqformula "7"))
                                    (rule "applyEqRigid" (formula "5") (term "1,1") (ifseqformula "7"))
                                    (rule "applyEqRigid" (formula "40") (term "1,1,0") (ifseqformula "7"))
                                    (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "7"))
                                    (rule "inEqSimp_homoInEq1" (formula "8") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                    (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "7"))
                                    (rule "applyEq" (formula "40") (term "1,1,1") (ifseqformula "7"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0"))
                                    (rule "mul_literals" (formula "9") (term "0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0"))
                                    (rule "mul_literals" (formula "8") (term "0,1,0"))
                                    (rule "elimGcdGeq_antec" (formula "4") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0"))
                                    (rule "add_zero_right" (formula "4") (term "0,0,0,1,0"))
                                    (rule "leq_literals" (formula "4") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "times_zero_1" (formula "4") (term "1,0,0,0,0"))
                                    (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                    (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "4") (term "0,0"))
                                    (rule "leq_literals" (formula "4") (term "0"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "elimGcdLeq" (formula "9") (term "0,0,0,1,1") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_1)") (inst "elimGcdLeftDiv=m") (inst "elimGcd=Z(2(#))"))
                                    (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0,0,0,0,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0,0,0,0,1,1"))
                                    (rule "mul_literals" (formula "9") (term "0,0,0,0,0,1,0,0,0,0,1,1"))
                                    (rule "sub_literals" (formula "9") (term "0,0,0,0,0,0,0,0,0,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,0,0,0,1,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,1,0,0,0,0,1,1"))
                                    (rule "add_literals" (formula "9") (term "1,1,0,1,0,0,0,0,1,1"))
                                    (rule "times_zero_1" (formula "9") (term "1,0,1,0,0,0,0,1,1"))
                                    (rule "add_zero_right" (formula "9") (term "0,1,0,0,0,0,1,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0,0,0,0,0,1,1"))
                                    (rule "add_literals" (formula "9") (term "1,1,0,0,0,0,0,0,1,1"))
                                    (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0,0,1,1"))
                                    (rule "add_zero_right" (formula "9") (term "0,0,0,0,0,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "9") (term "0,0,1,0,0,0,0,1,1"))
                                    (rule "mul_literals" (formula "9") (term "0,0,0,1,0,0,0,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0,0,0,1,1"))
                                    (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "9") (term "0,1,0,0,0,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "9") (term "0,0,1,0,0,0,0,1,1"))
                                    (rule "add_literals" (formula "9") (term "0,0,0,1,0,0,0,0,1,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,1,0,0,0,0,1,1"))
                                    (rule "add_literals" (formula "9") (term "1,1,0,1,0,0,0,0,1,1"))
                                    (rule "times_zero_1" (formula "9") (term "1,0,1,0,0,0,0,1,1"))
                                    (rule "add_zero_right" (formula "9") (term "0,1,0,0,0,0,1,1"))
                                    (rule "qeq_literals" (formula "9") (term "1,0,0,0,0,1,1"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0,0,1,1"))
                                    (rule "add_literals" (formula "9") (term "0,0,0,0,0,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "9") (term "0,0,0,0,0,0,1,1"))
                                    (rule "add_literals" (formula "9") (term "0,0,0,0,0,0,0,1,1"))
                                    (rule "add_zero_left" (formula "9") (term "0,0,0,0,0,0,1,1"))
                                    (rule "polySimp_pullOutFactor0" (formula "9") (term "0,0,0,0,0,1,1"))
                                    (rule "add_literals" (formula "9") (term "1,0,0,0,0,0,1,1"))
                                    (rule "times_zero_1" (formula "9") (term "0,0,0,0,0,1,1"))
                                    (rule "leq_literals" (formula "9") (term "0,0,0,0,1,1"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "elimGcdLeq" (formula "8") (term "0,0,0,1") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_1)") (inst "elimGcdLeftDiv=n") (inst "elimGcd=Z(2(#))"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0,0,0,0,1"))
                                    (rule "mul_literals" (formula "8") (term "0,0,0,0,0,1,0,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,0,0,0,1"))
                                    (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0,0,0,0,0,1"))
                                    (rule "sub_literals" (formula "8") (term "0,0,0,0,0,0,0,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,1,0,0,0,0,1"))
                                    (rule "add_literals" (formula "8") (term "1,1,0,1,0,0,0,0,1"))
                                    (rule "times_zero_1" (formula "8") (term "1,0,1,0,0,0,0,1"))
                                    (rule "add_zero_right" (formula "8") (term "0,1,0,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0,0,0,0,0,1"))
                                    (rule "add_literals" (formula "8") (term "1,1,0,0,0,0,0,0,1"))
                                    (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0,0,1"))
                                    (rule "add_zero_right" (formula "8") (term "0,0,0,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "8") (term "0,0,1,0,0,0,0,1"))
                                    (rule "mul_literals" (formula "8") (term "0,0,0,1,0,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0,0,0,1"))
                                    (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "8") (term "0,1,0,0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0,0,1,0,0,0,0,1"))
                                    (rule "add_literals" (formula "8") (term "0,0,0,1,0,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,1,0,0,0,0,1"))
                                    (rule "add_literals" (formula "8") (term "1,1,0,1,0,0,0,0,1"))
                                    (rule "times_zero_1" (formula "8") (term "1,0,1,0,0,0,0,1"))
                                    (rule "add_zero_right" (formula "8") (term "0,1,0,0,0,0,1"))
                                    (rule "qeq_literals" (formula "8") (term "1,0,0,0,0,1"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0,0,1"))
                                    (rule "add_literals" (formula "8") (term "0,0,0,0,0,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0,0,0,0,0,0,1"))
                                    (rule "add_literals" (formula "8") (term "0,0,0,0,0,0,0,1"))
                                    (rule "add_zero_left" (formula "8") (term "0,0,0,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor0" (formula "8") (term "0,0,0,0,0,1"))
                                    (rule "add_literals" (formula "8") (term "1,0,0,0,0,0,1"))
                                    (rule "times_zero_1" (formula "8") (term "0,0,0,0,0,1"))
                                    (rule "leq_literals" (formula "8") (term "0,0,0,0,1"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "elimGcdLeq" (formula "8") (term "0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_1)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                    (rule "mul_literals" (formula "8") (term "0,0,0,0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0,0"))
                                    (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,0"))
                                    (rule "sub_literals" (formula "8") (term "0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,1,0,0"))
                                    (rule "add_literals" (formula "8") (term "1,1,0,1,0,0"))
                                    (rule "times_zero_1" (formula "8") (term "1,0,1,0,0"))
                                    (rule "add_zero_right" (formula "8") (term "0,1,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "8") (term "1,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "8") (term "1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "8") (term "0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "8") (term "0,0,1,0,0"))
                                    (rule "mul_literals" (formula "8") (term "0,0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "8") (term "0,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,1,0,0"))
                                    (rule "add_literals" (formula "8") (term "1,1,0,1,0,0"))
                                    (rule "times_zero_1" (formula "8") (term "1,0,1,0,0"))
                                    (rule "add_zero_right" (formula "8") (term "0,1,0,0"))
                                    (rule "qeq_literals" (formula "8") (term "1,0,0"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "8") (term "0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "8") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "8") (term "0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "8") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0" (formula "8") (term "0,0,0"))
                                    (rule "add_literals" (formula "8") (term "1,0,0,0"))
                                    (rule "times_zero_1" (formula "8") (term "0,0,0"))
                                    (rule "leq_literals" (formula "8") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "elimGcdGeq" (formula "9") (term "0") (inst "elimGcdRightDiv=add(Z(1(#)), l_1)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                    (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0,0"))
                                    (rule "mul_literals" (formula "9") (term "0,0,0,0,0,1,0,0"))
                                    (rule "sub_literals" (formula "9") (term "0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,1,0,0"))
                                    (rule "add_literals" (formula "9") (term "1,1,0,1,0,0"))
                                    (rule "times_zero_1" (formula "9") (term "1,0,1,0,0"))
                                    (rule "add_zero_right" (formula "9") (term "0,1,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "9") (term "1,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "9") (term "1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "9") (term "0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "9") (term "0,0,1,0,0"))
                                    (rule "mul_literals" (formula "9") (term "0,0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "9") (term "0,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "9") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,1,0,0"))
                                    (rule "add_literals" (formula "9") (term "1,1,0,1,0,0"))
                                    (rule "times_zero_1" (formula "9") (term "1,0,1,0,0"))
                                    (rule "add_zero_right" (formula "9") (term "0,1,0,0"))
                                    (rule "leq_literals" (formula "9") (term "1,0,0"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "9") (term "0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "9") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "9") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "9") (term "0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "9") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0" (formula "9") (term "0,0,0"))
                                    (rule "add_literals" (formula "9") (term "1,0,0,0"))
                                    (rule "times_zero_1" (formula "9") (term "0,0,0"))
                                    (rule "qeq_literals" (formula "9") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "12"))
                                    (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "add_literals" (formula "2") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(1(1(9(0(7(8(6(3(5(#))))))))))") (inst "elimGcdLeftDiv=n_0") (inst "elimGcd=Z(2(#))"))
                                    (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                    (rule "leq_literals" (formula "2") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                    (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "2") (term "0,0"))
                                    (rule "qeq_literals" (formula "2") (term "0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "13"))
                                    (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                                    (rule "mul_literals" (formula "19") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "19") (term "0"))
                                    (rule "add_literals" (formula "19") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                    (rule "polySimp_elimOne" (formula "19") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "13"))
                                    (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                    (rule "mul_literals" (formula "6") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0"))
                                    (rule "add_literals" (formula "6") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                    (rule "elimGcdLeq_antec" (formula "6") (inst "elimGcdRightDiv=Z(1(1(9(0(7(8(6(3(5(#))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0"))
                                    (rule "neg_literal" (formula "6") (term "0,0,0,0,0,1,0"))
                                    (rule "leq_literals" (formula "6") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "6") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "6") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                    (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "6") (term "0,0"))
                                    (rule "qeq_literals" (formula "6") (term "0"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "14"))
                                    (rule "polySimp_rightDist" (formula "40") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0"))
                                    (rule "mul_literals" (formula "40") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "40") (term "0"))
                                    (rule "add_literals" (formula "40") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "40"))
                                    (rule "polySimp_mulLiterals" (formula "40") (term "0"))
                                    (rule "elimGcdLeq_antec" (formula "40") (inst "elimGcdRightDiv=Z(1(1(9(0(7(8(6(3(5(#))))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,0,1,0"))
                                    (rule "neg_literal" (formula "40") (term "0,0,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,0,0,1,0"))
                                    (rule "leq_literals" (formula "40") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "40"))
                                    (rule "mul_literals" (formula "40") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "40") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "40") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "40") (term "0,0"))
                                    (rule "add_literals" (formula "40") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "40") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "40") (term "0,0"))
                                    (rule "qeq_literals" (formula "40") (term "0"))
                                     (builtin "One Step Simplification" (formula "40"))
                                    (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "nnf_imp2or" (formula "15") (term "1,0"))
                                    (rule "nnf_imp2or" (formula "16") (term "1,0,1,0"))
                                    (rule "nnf_imp2or" (formula "26") (term "1,0"))
                                    (rule "commute_and" (formula "52"))
                                    (rule "nnf_imp2or" (formula "27") (term "0"))
                                    (rule "commute_and" (formula "15") (term "0,0"))
                                    (rule "commute_and" (formula "16") (term "0,0"))
                                    (rule "commute_and" (formula "26") (term "0,0"))
                                    (rule "jdiv_axiom" (formula "18") (term "1,0"))
                                    (rule "eqSymm" (formula "18"))
                                    (rule "inEqSimp_subsumption1" (formula "18") (term "0,0") (ifseqformula "13"))
                                    (rule "leq_literals" (formula "18") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "eqSymm" (formula "18"))
                                    (rule "applyEqRigid" (formula "15") (term "1,1,1,0,0") (ifseqformula "18"))
                                    (rule "applyEqRigid" (formula "27") (term "1,1,1,0,0") (ifseqformula "18"))
                                    (rule "applyEqRigid" (formula "25") (term "0") (ifseqformula "18"))
                                    (rule "applyEq" (formula "28") (term "1,1,0,0,0,0") (ifseqformula "18"))
                                    (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "18"))
                                    (rule "applyEqRigid" (formula "16") (term "1,1,0,0,0,1,0") (ifseqformula "18"))
                                    (rule "applyEq" (formula "16") (term "1,1,1,0,0") (ifseqformula "18"))
                                    (rule "nnf_imp2or" (formula "10") (term "0,1"))
                                    (rule "nnf_imp2or" (formula "11") (term "0,0,1"))
                                    (rule "nnf_imp2or" (formula "11") (term "0,1,1"))
                                    (rule "nnf_imp2or" (formula "28") (term "1,0"))
                                    (rule "nnf_imp2or" (formula "15") (term "0"))
                                    (rule "nnf_imp2or" (formula "27") (term "0"))
                                    (rule "nnf_imp2or" (formula "16") (term "0"))
                                    (rule "nnf_notAnd" (formula "28") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "28") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "28") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "28") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                                    (rule "mul_literals" (formula "28") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "28") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "28") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "28") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "28") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "15") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "15") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                    (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "27") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "27") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "27") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                                    (rule "mul_literals" (formula "27") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "16") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "16") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                    (rule "mul_literals" (formula "16") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "10") (term "0,0,1"))
                                    (rule "inEqSimp_notLeq" (formula "10") (term "0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0,1"))
                                    (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0,1"))
                                    (rule "add_literals" (formula "10") (term "0,0,0,0,0,0,1"))
                                    (rule "add_zero_left" (formula "10") (term "0,0,0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "10") (term "1,0,0,0,1"))
                                    (rule "inEqSimp_notGeq" (formula "10") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,1"))
                                    (rule "mul_literals" (formula "10") (term "0,1,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,1"))
                                    (rule "nnf_notAnd" (formula "28") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "28"))
                                    (rule "inEqSimp_notGeq" (formula "28") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,1,0,1,0"))
                                    (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,1,0"))
                                    (rule "add_literals" (formula "28") (term "0,0,0,1,0,1,0"))
                                    (rule "add_zero_left" (formula "28") (term "0,0,1,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,1,0"))
                                    (rule "nnf_notAnd" (formula "27") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "27"))
                                    (rule "inEqSimp_notLeq" (formula "27") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,1,0,1,0"))
                                    (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,1,0"))
                                    (rule "add_literals" (formula "27") (term "0,0,0,1,0,1,0"))
                                    (rule "add_zero_left" (formula "27") (term "0,0,1,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,1,0"))
                                    (rule "nnf_imp2or" (formula "16") (term "0,1,0"))
                                    (rule "nnf_notAnd" (formula "11") (term "0,0,0,1"))
                                    (rule "inEqSimp_notLeq" (formula "11") (term "0,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0,0,1"))
                                    (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0,0,1"))
                                    (rule "add_literals" (formula "11") (term "0,0,0,0,0,0,0,1"))
                                    (rule "add_zero_left" (formula "11") (term "0,0,0,0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "11") (term "1,0,0,0,0,1"))
                                    (rule "inEqSimp_notGeq" (formula "11") (term "1,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0,0,1"))
                                    (rule "mul_literals" (formula "11") (term "0,1,1,0,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0,0,1"))
                                    (rule "nnf_notAnd" (formula "11") (term "0,0,1,1"))
                                    (rule "inEqSimp_notGeq" (formula "11") (term "1,0,0,1,1"))
                                    (rule "times_zero_1" (formula "11") (term "1,0,0,1,0,0,1,1"))
                                    (rule "add_zero_right" (formula "11") (term "0,0,1,0,0,1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,1,1"))
                                    (rule "mul_literals" (formula "11") (term "1,1,0,0,1,1"))
                                    (rule "inEqSimp_notLeq" (formula "11") (term "0,0,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0,1,1"))
                                    (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0,1,1"))
                                    (rule "add_literals" (formula "11") (term "0,0,0,0,0,0,1,1"))
                                    (rule "add_zero_left" (formula "11") (term "0,0,0,0,0,1,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,0,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,1,1"))
                                    (rule "polySimp_elimOne" (formula "11") (term "1,0,0,0,1,1"))
                                    (rule "jdiv_axiom" (formula "39") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "0,0,2,1"))
                                    (rule "eqSymm" (formula "39"))
                                    (rule "applyEqRigid" (formula "39") (term "1") (ifseqformula "40"))
                                    (rule "inEqSimp_subsumption6" (formula "39") (term "0,0") (ifseqformula "44"))
                                    (rule "greater_literals" (formula "39") (term "0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "39"))
                                    (rule "mul_literals" (formula "39") (term "1,0,0,0"))
                                    (rule "leq_literals" (formula "39") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "39"))
                                    (rule "polyDiv_pullOut" (formula "39") (term "0") (inst "polyDivCoeff=l_0"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,2,0"))
                                    (rule "equal_literals" (formula "39") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "39"))
                                    (rule "polySimp_pullOutFactor0" (formula "39") (term "0,0,0"))
                                    (rule "add_literals" (formula "39") (term "1,0,0,0"))
                                    (rule "times_zero_1" (formula "39") (term "0,0,0"))
                                    (rule "div_literals" (formula "39") (term "0,0"))
                                    (rule "add_zero_left" (formula "39") (term "0"))
                                     (builtin "One Step Simplification" (formula "39"))
                                    (rule "true_left" (formula "39"))
                                    (rule "nnf_imp2or" (formula "28") (term "0,1,1,0"))
                                    (rule "nnf_imp2or" (formula "27") (term "0,1,1,0"))
                                    (rule "nnf_notAnd" (formula "16") (term "0,0,1,0"))
                                    (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0,1,0"))
                                    (rule "add_literals" (formula "16") (term "0,0,0,0,0,0,1,0"))
                                    (rule "add_zero_left" (formula "16") (term "0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "16") (term "0,1,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,1,0"))
                                    (rule "nnf_notAnd" (formula "16") (term "0,1,0,1,0"))
                                     (builtin "One Step Simplification" (formula "16"))
                                    (rule "nnf_notAnd" (formula "28") (term "0,0,1,1,0"))
                                    (rule "nnf_notAnd" (formula "27") (term "0,0,1,1,0"))
                                    (rule "inEqSimp_notLeq" (formula "27") (term "0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "27") (term "0,0,0,0,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "27") (term "0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "27") (term "1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "27") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "27") (term "0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,1,1,0"))
                                    (rule "jdiv_axiom" (formula "8") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "0,0,2,1"))
                                    (rule "eqSymm" (formula "8"))
                                    (rule "applyEqRigid" (formula "8") (term "1") (ifseqformula "9"))
                                    (rule "inEqSimp_subsumption6" (formula "8") (term "0,0") (ifseqformula "5"))
                                    (rule "mul_literals" (formula "8") (term "1,1,0,0,0"))
                                    (rule "greater_literals" (formula "8") (term "0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "leq_literals" (formula "8") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "polyDiv_pullOut" (formula "8") (term "0") (inst "polyDivCoeff=l_1"))
                                    (rule "equal_literals" (formula "8") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0"))
                                    (rule "polySimp_homoEq" (formula "8"))
                                    (rule "polySimp_pullOutFactor0" (formula "8") (term "0,0,0,1,0"))
                                    (rule "add_literals" (formula "8") (term "1,0,0,0,1,0"))
                                    (rule "times_zero_1" (formula "8") (term "0,0,0,1,0"))
                                    (rule "div_literals" (formula "8") (term "0,0,1,0"))
                                    (rule "add_zero_left" (formula "8") (term "0,1,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "8") (term "0"))
                                    (rule "add_literals" (formula "8") (term "1,0"))
                                    (rule "times_zero_1" (formula "8") (term "0"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "true_left" (formula "8"))
                                    (rule "nnf_notOr" (formula "28") (term "1,0,0,1,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "28") (term "1,1,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "28") (term "1,0,0,1,1,0,0,1,1,0"))
                                    (rule "add_literals" (formula "28") (term "0,0,1,1,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "28") (term "1,1,1,0,0,1,1,0"))
                                    (rule "inEqSimp_notLeq" (formula "28") (term "0,1,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "28") (term "0,1,0,0,0,1,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,1,0,0,1,1,0"))
                                    (rule "add_literals" (formula "28") (term "0,0,0,0,1,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "28") (term "0,0,0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "28") (term "1,0,1,0,0,1,1,0"))
                                    (rule "nnf_notAnd" (formula "28") (term "0,0,0,1,1,0"))
                                    (rule "cut_direct" (formula "46") (term "0"))
                                    (branch "CUT: pow(2, i_2_0) <= 2 + l_1 * 2 TRUE"
                                        (builtin "One Step Simplification" (formula "47"))
                                       (rule "applyEq" (formula "4") (term "0") (ifseqformula "47"))
                                       (rule "inEqSimp_homoInEq0" (formula "4"))
                                       (rule "times_zero_2" (formula "4") (term "1,0"))
                                       (rule "add_zero_right" (formula "4") (term "0"))
                                       (rule "applyEq" (formula "45") (term "0,1") (ifseqformula "47"))
                                       (rule "polySimp_homoEq" (formula "45") (term "1"))
                                       (rule "times_zero_2" (formula "45") (term "1,0,1"))
                                       (rule "add_zero_right" (formula "45") (term "0,1"))
                                       (rule "polySimp_sepPosMonomial" (formula "45") (term "1"))
                                       (rule "mul_literals" (formula "45") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                       (rule "mul_literals" (formula "4") (term "1"))
                                       (rule "inEqSimp_contradInEq0" (formula "45") (term "0") (ifseqformula "46"))
                                       (rule "inEqSimp_homoInEq1" (formula "45") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "45") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "45") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "45") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "45") (term "0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "45") (term "0,0,0"))
                                       (rule "add_literals" (formula "45") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "45") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "45") (term "0,0,0"))
                                       (rule "leq_literals" (formula "45") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "45"))
                                       (rule "true_left" (formula "45"))
                                       (rule "elimGcdGeq_antec" (formula "4") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "4") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                                       (rule "mul_literals" (formula "4") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "4") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                       (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "4") (term "0,0"))
                                       (rule "leq_literals" (formula "4") (term "0"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "inEqSimp_subsumption1" (formula "43") (ifseqformula "4"))
                                       (rule "leq_literals" (formula "43") (term "0"))
                                        (builtin "One Step Simplification" (formula "43"))
                                       (rule "true_left" (formula "43"))
                                       (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "44"))
                                       (rule "mul_literals" (formula "13") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                       (rule "add_literals" (formula "13") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                       (rule "mul_literals" (formula "13") (term "1"))
                                       (rule "elimGcdGeq_antec" (formula "13") (inst "elimGcdRightDiv=Z(3(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "13") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "13"))
                                       (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "13") (term "0,0,0,0"))
                                       (rule "add_zero_right" (formula "13") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                                       (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "13") (term "0,0"))
                                       (rule "leq_literals" (formula "13") (term "0"))
                                        (builtin "One Step Simplification" (formula "13"))
                                       (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "13"))
                                       (rule "leq_literals" (formula "5") (term "0"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "true_left" (formula "5"))
                                       (rule "inEqSimp_exactShadow3" (formula "42") (ifseqformula "44"))
                                       (rule "polySimp_rightDist" (formula "42") (term "0,0"))
                                       (rule "mul_literals" (formula "42") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "42") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "42") (term "0,0"))
                                       (rule "add_literals" (formula "42") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "42"))
                                       (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "42") (inst "elimGcdRightDiv=add(Z(0(#)), l_1)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                       (rule "neg_literal" (formula "42") (term "0,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "42") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "42"))
                                       (rule "add_zero_left" (formula "42") (term "1,1"))
                                       (rule "add_zero_left" (formula "42") (term "1,1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "42") (term "0,0"))
                                       (rule "add_literals" (formula "42") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "42") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "42") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "42") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "42") (term "0,0,0"))
                                       (rule "add_literals" (formula "42") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "42") (term "0,0"))
                                       (rule "add_literals" (formula "42") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "42") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "42") (term "0,0"))
                                       (rule "qeq_literals" (formula "42") (term "0"))
                                        (builtin "One Step Simplification" (formula "42"))
                                       (rule "inEqSimp_contradInEq0" (formula "10") (term "0") (ifseqformula "42"))
                                       (rule "inEqSimp_homoInEq1" (formula "10") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,0"))
                                       (rule "add_literals" (formula "10") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "10") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "10") (term "0,0,0"))
                                       (rule "leq_literals" (formula "10") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "10"))
                                       (rule "true_left" (formula "10"))
                                       (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "44"))
                                       (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                       (rule "mul_literals" (formula "21") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "21") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                                       (rule "add_literals" (formula "21") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                       (rule "polySimp_elimOne" (formula "21") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "45"))
                                       (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                       (rule "mul_literals" (formula "3") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                       (rule "add_literals" (formula "3") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "3") (inst "elimGcdRightDiv=add(Z(0(#)), l_1)") (inst "elimGcdLeftDiv=n_0") (inst "elimGcd=Z(2(#))"))
                                       (rule "neg_literal" (formula "3") (term "0,0,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "3") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "add_zero_left" (formula "3") (term "1,1,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "3") (term "1,1"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "3") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                       (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "3") (term "0,0"))
                                       (rule "qeq_literals" (formula "3") (term "0"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "3"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "22"))
                                       (rule "times_zero_1" (formula "20") (term "0,0"))
                                       (rule "add_zero_left" (formula "20") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                       (rule "mul_literals" (formula "20") (term "1"))
                                       (rule "inEqSimp_subsumption6" (formula "20") (ifseqformula "12"))
                                       (rule "greater_literals" (formula "20") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "20"))
                                       (rule "mul_literals" (formula "20") (term "1,0"))
                                       (rule "leq_literals" (formula "20") (term "0"))
                                        (builtin "One Step Simplification" (formula "20"))
                                       (rule "true_left" (formula "20"))
                                       (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "43"))
                                       (rule "mul_literals" (formula "5") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                       (rule "mul_literals" (formula "5") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "13"))
                                       (rule "leq_literals" (formula "5") (term "0"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "true_left" (formula "5"))
                                       (rule "commute_or_2" (formula "15") (term "0"))
                                       (rule "nnf_notOr" (formula "29") (term "1,0,0,0,1,1,0"))
                                       (rule "inEqSimp_notLeq" (formula "29") (term "0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "29") (term "0,1,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,1,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "29") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "add_zero_left" (formula "29") (term "0,0,0,1,0,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "29") (term "1,0,1,0,0,0,1,1,0"))
                                       (rule "inEqSimp_notGeq" (formula "29") (term "1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "29") (term "1,1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "29") (term "1,1,1,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "29") (term "0,1,1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "29") (term "1,1,1,1,0,0,0,1,1,0"))
                                       (rule "nnf_notAnd" (formula "29") (term "0,0,0,0,1,1,0"))
                                       (rule "commute_or" (formula "29") (term "0,0"))
                                       (rule "commute_or" (formula "10") (term "0,0,1"))
                                       (rule "cut_direct" (formula "10") (term "0"))
                                       (branch "CUT: l_0 <= -1 + l_1 TRUE"
                                           (builtin "One Step Simplification" (formula "11"))
                                          (rule "inEqSimp_subsumption0" (formula "44") (ifseqformula "10"))
                                          (rule "inEqSimp_homoInEq0" (formula "44") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "44") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "44") (term "1,0,0"))
                                          (rule "mul_literals" (formula "44") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "44") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "44") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0"))
                                          (rule "add_literals" (formula "44") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "44") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "44") (term "0,0"))
                                          (rule "qeq_literals" (formula "44") (term "0"))
                                           (builtin "One Step Simplification" (formula "44"))
                                          (rule "true_left" (formula "44"))
                                          (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "10"))
                                          (rule "mul_literals" (formula "5") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                          (rule "add_literals" (formula "5") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                          (rule "mul_literals" (formula "5") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "14"))
                                          (rule "leq_literals" (formula "5") (term "0"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "true_left" (formula "5"))
                                          (rule "div_axiom" (formula "19") (term "1") (inst "quotient=quotient_0"))
                                          (rule "equal_literals" (formula "19") (term "0"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "qeq_literals" (formula "19") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "mul_literals" (formula "19") (term "1,1,1"))
                                          (rule "andLeft" (formula "19"))
                                          (rule "andLeft" (formula "19"))
                                          (rule "polySimp_addComm1" (formula "21") (term "1"))
                                          (rule "add_literals" (formula "21") (term "0,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "20"))
                                          (rule "inEqSimp_homoInEq1" (formula "21"))
                                          (rule "polySimp_mulLiterals" (formula "21") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "21") (term "0"))
                                          (rule "applyEqRigid" (formula "17") (term "1,1,0,0") (ifseqformula "19"))
                                          (rule "applyEqRigid" (formula "32") (term "1,1,0,0") (ifseqformula "19"))
                                          (rule "applyEqRigid" (formula "17") (term "1,0,0,0,1,0") (ifseqformula "19"))
                                          (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "19"))
                                          (rule "applyEq" (formula "30") (term "0") (ifseqformula "19"))
                                          (rule "inEqSimp_homoInEq1" (formula "30"))
                                          (rule "polySimp_addComm1" (formula "30") (term "0"))
                                          (rule "applyEqRigid" (formula "33") (term "1,1,0,0") (ifseqformula "19"))
                                          (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "19"))
                                          (rule "applyEqRigid" (formula "22") (term "1") (ifseqformula "19"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "21"))
                                          (rule "polySimp_mulComm0" (formula "21") (term "1"))
                                          (rule "polySimp_rightDist" (formula "21") (term "1"))
                                          (rule "mul_literals" (formula "21") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "30"))
                                          (rule "polySimp_mulComm0" (formula "30") (term "1"))
                                          (rule "polySimp_rightDist" (formula "30") (term "1"))
                                          (rule "mul_literals" (formula "30") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "30") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "30") (term "1,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "21"))
                                          (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                          (rule "mul_literals" (formula "7") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "7") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                          (rule "add_literals" (formula "7") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "7") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                          (rule "elimGcdLeq_antec" (formula "7") (inst "elimGcdRightDiv=quotient_0") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                          (rule "neg_literal" (formula "7") (term "0,0,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "7") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                          (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "7") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                          (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "7") (term "0,0"))
                                          (rule "qeq_literals" (formula "7") (term "0"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "50"))
                                          (rule "polySimp_mulAssoc" (formula "21") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "21") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "21") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                          (rule "polySimp_addComm0" (formula "21") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                          (rule "polySimp_mulComm0" (formula "21") (term "1"))
                                          (rule "polySimp_rightDist" (formula "21") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                                          (rule "mul_literals" (formula "21") (term "0,1"))
                                          (rule "elimGcdGeq_antec" (formula "21") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), quotient_0)") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                          (rule "leq_literals" (formula "21") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "21"))
                                          (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
                                          (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0"))
                                          (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "21") (term "0,0"))
                                          (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "21") (term "0,0,0"))
                                          (rule "add_literals" (formula "21") (term "0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "21") (term "0,0,0"))
                                          (rule "add_literals" (formula "21") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0"))
                                          (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "21") (term "0,0"))
                                          (rule "leq_literals" (formula "21") (term "0"))
                                           (builtin "One Step Simplification" (formula "21"))
                                          (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "16"))
                                          (rule "polySimp_mulAssoc" (formula "22") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "22") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                          (rule "elimGcdLeq_antec" (formula "22") (inst "elimGcdRightDiv=Z(2(1(9(0(7(8(6(3(5(#))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
                                          (rule "leq_literals" (formula "22") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "22"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0"))
                                          (rule "neg_literal" (formula "22") (term "0,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "22") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_addLiterals" (formula "22") (term "0,0,0,0"))
                                          (rule "add_zero_right" (formula "22") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,0"))
                                          (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "22") (term "0,0"))
                                          (rule "qeq_literals" (formula "22") (term "0"))
                                           (builtin "One Step Simplification" (formula "22"))
                                          (rule "inEqSimp_exactShadow3" (formula "50") (ifseqformula "24"))
                                          (rule "polySimp_rightDist" (formula "50") (term "0,0"))
                                          (rule "mul_literals" (formula "50") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "50") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "50") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "50") (term "0,0"))
                                          (rule "add_literals" (formula "50") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "50") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "50"))
                                          (rule "polySimp_mulLiterals" (formula "50") (term "0"))
                                          (rule "elimGcdLeq_antec" (formula "50") (inst "elimGcdRightDiv=quotient_0") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "50") (term "1,0,1,0"))
                                          (rule "leq_literals" (formula "50") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "50"))
                                          (rule "neg_literal" (formula "50") (term "0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "50") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "50") (term "0,0"))
                                          (rule "add_literals" (formula "50") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "50") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "50") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "50") (term "0,0"))
                                          (rule "add_literals" (formula "50") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "50") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "50") (term "0,0"))
                                          (rule "qeq_literals" (formula "50") (term "0"))
                                           (builtin "One Step Simplification" (formula "50"))
                                          (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "24"))
                                          (rule "polySimp_rightDist" (formula "30") (term "0,0"))
                                          (rule "mul_literals" (formula "30") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "30") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                                          (rule "add_literals" (formula "30") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "30") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "30"))
                                          (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                          (rule "polySimp_elimOne" (formula "30") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "24"))
                                          (rule "mul_literals" (formula "15") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                          (rule "add_literals" (formula "15") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                          (rule "mul_literals" (formula "15") (term "1"))
                                          (rule "elimGcdGeq_antec" (formula "15") (inst "elimGcdRightDiv=Z(4(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "15") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_addLiterals" (formula "15") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "15") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                                          (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "15") (term "0,0"))
                                          (rule "leq_literals" (formula "15") (term "0"))
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "25"))
                                          (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                          (rule "mul_literals" (formula "4") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                          (rule "add_literals" (formula "4") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "4") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                          (rule "elimGcdLeq_antec" (formula "4") (inst "elimGcdRightDiv=quotient_0") (inst "elimGcdLeftDiv=n_0") (inst "elimGcd=Z(2(#))"))
                                          (rule "leq_literals" (formula "4") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "neg_literal" (formula "4") (term "0,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                                          (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                          (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "4") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                          (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "4") (term "0,0"))
                                          (rule "qeq_literals" (formula "4") (term "0"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "36"))
                                          (rule "times_zero_1" (formula "35") (term "0,0"))
                                          (rule "add_zero_left" (formula "35") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "35"))
                                          (rule "mul_literals" (formula "35") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "35") (ifseqformula "16"))
                                          (rule "leq_literals" (formula "35") (term "0"))
                                           (builtin "One Step Simplification" (formula "35"))
                                          (rule "true_left" (formula "35"))
                                          (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "8"))
                                          (rule "mul_literals" (formula "15") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                          (rule "mul_literals" (formula "15") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "17"))
                                          (rule "leq_literals" (formula "15") (term "0"))
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "true_left" (formula "15"))
                                          (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "53"))
                                          (rule "mul_literals" (formula "6") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                          (rule "mul_literals" (formula "6") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "17"))
                                          (rule "leq_literals" (formula "6") (term "0"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "true_left" (formula "6"))
                                          (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "32"))
                                          (rule "times_zero_1" (formula "29") (term "0,0"))
                                          (rule "add_zero_left" (formula "29") (term "0"))
                                          (rule "inEqSimp_subsumption6" (formula "29") (ifseqformula "16"))
                                          (rule "greater_literals" (formula "29") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "29"))
                                          (rule "mul_literals" (formula "29") (term "1,0"))
                                          (rule "leq_literals" (formula "29") (term "0"))
                                           (builtin "One Step Simplification" (formula "29"))
                                          (rule "true_left" (formula "29"))
                                          (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "4"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "7"))
                                          (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                                          (rule "mul_literals" (formula "23") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "23") (term "0"))
                                          (rule "add_literals" (formula "23") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                          (rule "polySimp_elimOne" (formula "23") (term "0"))
                                          (rule "nnf_notOr" (formula "39") (term "0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "39") (term "0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "39") (term "0,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "39") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "39") (term "1,0,0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "39") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "39") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,0,0,1,1,0"))
                                          (rule "nnf_notOr" (formula "39") (term "1,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "39") (term "1,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,1,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "39") (term "1,1,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "39") (term "1,1,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,1,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "39") (term "0,1,1,1,0,0,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "39") (term "1,1,1,1,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "39") (term "0,1,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "39") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "39") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,1,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "39") (term "1,0,1,0,0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "38") (term "0,1,1,0"))
                                          (rule "cut_direct" (formula "64") (term "0,0"))
                                          (branch "CUT: self.table[n_0 * 2] = null TRUE"
                                              (builtin "One Step Simplification" (formula "65"))
                                             (rule "false_right" (formula "65"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "61") (term "0") (ifseqformula "42"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "62"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "63") (term "0") (ifseqformula "43"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "64"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "40") (term "0") (ifseqformula "44"))
                                             (rule "replace_known_left" (formula "40") (term "0") (ifseqformula "41"))
                                              (builtin "One Step Simplification" (formula "40"))
                                             (rule "true_left" (formula "40"))
                                             (rule "commute_and" (formula "42") (term "1,0,0,1,1,0"))
                                             (rule "commute_or" (formula "22") (term "0,0"))
                                             (rule "cnf_rightDist" (formula "16") (term "0"))
                                             (rule "shift_paren_or" (formula "23") (term "0,1,0"))
                                             (rule "distr_forallAnd" (formula "16"))
                                             (rule "andLeft" (formula "16"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "63") (term "0") (ifseqformula "45"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "63"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "commute_or_2" (formula "17") (term "0"))
                                             (rule "shift_paren_or" (formula "18") (term "0"))
                                             (rule "commute_or" (formula "17") (term "0,0"))
                                             (rule "commute_or_2" (formula "25") (term "0,0,1,0"))
                                             (rule "inEqSimp_or_weaken2" (formula "25") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "25") (term "1,0,1,0,1,0"))
                                             (rule "add_literals" (formula "25") (term "0,1,0,1,0,1,0"))
                                             (rule "add_zero_left" (formula "25") (term "1,0,1,0,1,0"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "commute_or" (formula "43") (term "0,0,1,1,0"))
                                             (rule "commute_or" (formula "25") (term "0,0,1,0"))
                                             (rule "commute_and" (formula "44") (term "0,0,0,0,0,1,1,0"))
                                             (rule "cnf_rightDist" (formula "44") (term "0,0,0,0,1,1,0"))
                                             (rule "commute_or" (formula "44") (term "0,0,0,0,0,1,1,0"))
                                             (rule "cnf_rightDist" (formula "44") (term "1,0,0,0,0,1,1,0"))
                                             (rule "commute_or" (formula "44") (term "0,1,0,0,0,0,1,1,0"))
                                             (rule "cnf_rightDist" (formula "44") (term "0,0,0,0,0,1,1,0"))
                                             (rule "commute_or" (formula "44") (term "1,0,0,0,0,0,1,1,0"))
                                             (rule "all_pull_out3" (formula "43") (term "1,0"))
                                             (rule "shift_paren_or" (formula "43") (term "0,1,0"))
                                             (rule "shift_paren_or" (formula "43") (term "0,0,1,0"))
                                             (rule "commute_or_2" (formula "43") (term "0,0,0,1,0"))
                                             (rule "all_pull_out3" (formula "25") (term "0"))
                                             (rule "shift_paren_or" (formula "25") (term "0,0"))
                                             (rule "shift_paren_or" (formula "25") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "25") (term "0,0,0,0"))
                                             (rule "commute_or" (formula "25") (term "0,0,0,0,0"))
                                             (rule "shift_paren_and" (formula "44") (term "0,0,0,0,1,1,0"))
                                             (rule "cnf_rightDist" (formula "44") (term "0,0,0,1,1,0"))
                                             (rule "commute_or" (formula "44") (term "0,0,0,0,1,1,0"))
                                             (rule "cnf_rightDist" (formula "44") (term "1,0,0,0,1,1,0"))
                                              (builtin "One Step Simplification" (formula "44"))
                                             (rule "cnf_rightDist" (formula "44") (term "0,0,0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "44") (term "1,0,0,0,0,1,1,0"))
                                             (rule "commute_or" (formula "44") (term "0,1,0,0,0,0,1,1,0"))
                                             (rule "cnf_rightDist" (formula "44") (term "0,1,0,0,0,1,1,0"))
                                              (builtin "One Step Simplification" (formula "44"))
                                             (rule "cnf_rightDist" (formula "44") (term "0,0,0,0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "44") (term "1,0,0,0,0,0,1,1,0"))
                                              (builtin "One Step Simplification" (formula "44"))
                                             (rule "all_pull_out3" (formula "43") (term "0"))
                                             (rule "shift_paren_or" (formula "43") (term "0,0"))
                                             (rule "shift_paren_or" (formula "43") (term "0,0,0"))
                                             (rule "shift_paren_or" (formula "43") (term "0,0,0,0"))
                                             (rule "commute_or_2" (formula "43") (term "0,0,0,0,0"))
                                             (rule "commute_or" (formula "43") (term "0,0,0,0,0,0"))
                                             (rule "cnf_rightDist" (formula "44") (term "0,0,0,0,0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "44") (term "1,0,0,0,0,0,0,1,1,0"))
                                             (rule "shift_paren_or" (formula "44") (term "0,0,0,0,0,0,0,1,1,0"))
                                             (rule "commute_or" (formula "44") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                              (builtin "One Step Simplification" (formula "44"))
                                             (rule "cnf_rightDist" (formula "44") (term "0,0,1,0,0,0,1,1,0"))
                                             (rule "commute_or" (formula "44") (term "0,0,0,1,0,0,0,1,1,0"))
                                             (rule "shift_paren_and" (formula "44") (term "0,0,0,1,1,0"))
                                             (rule "shift_paren_and" (formula "44") (term "0,0,0,0,1,1,0"))
                                             (rule "allLeft" (formula "24") (inst "t=i_1_0"))
                                             (rule "replace_known_left" (formula "24") (term "0,0,0,0") (ifseqformula "43"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "inEqSimp_contradInEq1" (formula "24") (term "1,0") (ifseqformula "41"))
                                             (rule "qeq_literals" (formula "24") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "inEqSimp_contradInEq0" (formula "24") (term "1") (ifseqformula "42"))
                                             (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "24") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "24") (term "0,0,1"))
                                             (rule "polySimp_addComm0" (formula "24") (term "0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                                             (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "24") (term "0,0,1"))
                                             (rule "leq_literals" (formula "24") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "shift_paren_and" (formula "45") (term "0,0,0,0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "45") (term "0,1,1,0"))
                                             (rule "commute_or" (formula "45") (term "0,0,1,1,0"))
                                             (rule "cnf_rightDist" (formula "45") (term "0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "45") (term "1,0,0,1,1,0"))
                                             (rule "commute_or" (formula "45") (term "0,1,0,0,1,1,0"))
                                             (rule "cnf_rightDist" (formula "45") (term "0,0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "45") (term "1,0,0,0,1,1,0"))
                                             (rule "commute_or" (formula "45") (term "0,1,0,0,0,1,1,0"))
                                             (rule "cnf_rightDist" (formula "45") (term "0,0,0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "45") (term "1,0,0,0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "45") (term "0,1,0,0,0,0,1,1,0"))
                                             (rule "commute_or" (formula "45") (term "0,0,1,0,0,0,0,1,1,0"))
                                             (rule "cnf_rightDist" (formula "45") (term "0,0,0,0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "45") (term "1,0,0,0,0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "45") (term "0,1,0,0,0,0,0,1,1,0"))
                                             (rule "allLeft" (formula "18") (inst "t=l_0"))
                                             (rule "inEqSimp_homoInEq0" (formula "18") (term "1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,1,0"))
                                             (rule "add_literals" (formula "18") (term "1,1,0,1,0"))
                                             (rule "times_zero_1" (formula "18") (term "1,0,1,0"))
                                             (rule "add_zero_right" (formula "18") (term "0,1,0"))
                                             (rule "qeq_literals" (formula "18") (term "1,0"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "inEqSimp_contradInEq0" (formula "18") (term "1") (ifseqformula "16"))
                                             (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                             (rule "polySimp_addComm0" (formula "18") (term "0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                             (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "18") (term "0,0,1"))
                                             (rule "leq_literals" (formula "18") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "notLeft" (formula "18"))
                                             (rule "allLeft" (formula "17") (inst "t=l_0"))
                                             (rule "inEqSimp_homoInEq0" (formula "17") (term "1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,1,0"))
                                             (rule "add_literals" (formula "17") (term "1,1,0,1,0"))
                                             (rule "times_zero_1" (formula "17") (term "1,0,1,0"))
                                             (rule "add_zero_right" (formula "17") (term "0,1,0"))
                                             (rule "qeq_literals" (formula "17") (term "1,0"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "inEqSimp_contradInEq0" (formula "17") (term "1") (ifseqformula "16"))
                                             (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "17") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "17") (term "0,0,1"))
                                             (rule "polySimp_addComm0" (formula "17") (term "0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                                             (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "17") (term "0,0,1"))
                                             (rule "leq_literals" (formula "17") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "notLeft" (formula "17"))
                                             (rule "allLeft" (formula "17") (inst "t=n_0"))
                                             (rule "replace_known_left" (formula "17") (term "0,0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "inEqSimp_contradInEq1" (formula "17") (term "0") (ifseqformula "5"))
                                             (rule "inEqSimp_homoInEq1" (formula "17") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "17") (term "0,0,0"))
                                             (rule "polySimp_addComm0" (formula "17") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,0"))
                                             (rule "add_literals" (formula "17") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "17") (term "1,0,0,0"))
                                             (rule "add_literals" (formula "17") (term "0,0,0"))
                                             (rule "leq_literals" (formula "17") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "inEqSimp_antiSymm" (formula "17") (ifseqformula "7"))
                                             (rule "applyEq" (formula "8") (term "0") (ifseqformula "17"))
                                             (rule "applyEqRigid" (formula "4") (term "0,0,2,0") (ifseqformula "16"))
                                             (rule "close" (formula "67") (ifseqformula "4"))
                                          )
                                          (branch "CUT: self.table[n_0 * 2] = null FALSE"
                                              (builtin "One Step Simplification" (formula "65"))
                                             (rule "notRight" (formula "65"))
                                             (rule "applyEq" (formula "65") (term "0") (ifseqformula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "61") (term "0") (ifseqformula "42"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "62"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "39") (term "0") (ifseqformula "43"))
                                             (rule "replace_known_left" (formula "39") (term "0") (ifseqformula "40"))
                                              (builtin "One Step Simplification" (formula "39"))
                                             (rule "true_left" (formula "39"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "63") (term "0") (ifseqformula "43"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "64"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "commute_and" (formula "42") (term "1,0,0,1,1,0"))
                                             (rule "commute_or" (formula "22") (term "0,0"))
                                             (rule "cnf_rightDist" (formula "16") (term "0"))
                                             (rule "shift_paren_or" (formula "23") (term "0,1,0"))
                                             (rule "distr_forallAnd" (formula "16"))
                                             (rule "andLeft" (formula "16"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "62") (term "0") (ifseqformula "45"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "63"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "commute_or_2" (formula "17") (term "0"))
                                             (rule "shift_paren_or" (formula "18") (term "0"))
                                             (rule "commute_or" (formula "17") (term "0,0"))
                                             (rule "commute_or_2" (formula "25") (term "0,0,1,0"))
                                             (rule "inEqSimp_or_weaken2" (formula "25") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "25") (term "1,0,1,0,1,0"))
                                             (rule "add_literals" (formula "25") (term "0,1,0,1,0,1,0"))
                                             (rule "add_zero_left" (formula "25") (term "1,0,1,0,1,0"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "commute_or" (formula "43") (term "0,0,1,1,0"))
                                             (rule "commute_or" (formula "25") (term "0,0,1,0"))
                                             (rule "commute_and" (formula "44") (term "0,0,0,0,0,1,1,0"))
                                             (rule "cnf_rightDist" (formula "44") (term "0,0,0,0,1,1,0"))
                                             (rule "commute_or" (formula "44") (term "0,0,0,0,0,1,1,0"))
                                             (rule "cnf_rightDist" (formula "44") (term "1,0,0,0,0,1,1,0"))
                                             (rule "commute_or" (formula "44") (term "0,1,0,0,0,0,1,1,0"))
                                             (rule "cnf_rightDist" (formula "44") (term "0,0,0,0,0,1,1,0"))
                                             (rule "commute_or" (formula "44") (term "1,0,0,0,0,0,1,1,0"))
                                             (rule "all_pull_out3" (formula "43") (term "1,0"))
                                             (rule "shift_paren_or" (formula "43") (term "0,1,0"))
                                             (rule "shift_paren_or" (formula "43") (term "0,0,1,0"))
                                             (rule "commute_or_2" (formula "43") (term "0,0,0,1,0"))
                                             (rule "all_pull_out3" (formula "25") (term "0"))
                                             (rule "shift_paren_or" (formula "25") (term "0,0"))
                                             (rule "shift_paren_or" (formula "25") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "25") (term "0,0,0,0"))
                                             (rule "commute_or" (formula "25") (term "0,0,0,0,0"))
                                             (rule "shift_paren_and" (formula "44") (term "0,0,0,0,1,1,0"))
                                             (rule "cnf_rightDist" (formula "44") (term "0,0,0,1,1,0"))
                                             (rule "commute_or" (formula "44") (term "0,0,0,0,1,1,0"))
                                             (rule "cnf_rightDist" (formula "44") (term "1,0,0,0,1,1,0"))
                                              (builtin "One Step Simplification" (formula "44"))
                                             (rule "cnf_rightDist" (formula "44") (term "0,0,0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "44") (term "1,0,0,0,0,1,1,0"))
                                             (rule "commute_or" (formula "44") (term "0,1,0,0,0,0,1,1,0"))
                                             (rule "cnf_rightDist" (formula "44") (term "0,1,0,0,0,1,1,0"))
                                              (builtin "One Step Simplification" (formula "44"))
                                             (rule "cnf_rightDist" (formula "44") (term "0,0,0,0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "44") (term "1,0,0,0,0,0,1,1,0"))
                                              (builtin "One Step Simplification" (formula "44"))
                                             (rule "all_pull_out3" (formula "43") (term "0"))
                                             (rule "shift_paren_or" (formula "43") (term "0,0"))
                                             (rule "shift_paren_or" (formula "43") (term "0,0,0"))
                                             (rule "shift_paren_or" (formula "43") (term "0,0,0,0"))
                                             (rule "commute_or_2" (formula "43") (term "0,0,0,0,0"))
                                             (rule "commute_or" (formula "43") (term "0,0,0,0,0,0"))
                                             (rule "cnf_rightDist" (formula "44") (term "0,0,1,0,0,0,1,1,0"))
                                             (rule "commute_or" (formula "44") (term "0,0,0,1,0,0,0,1,1,0"))
                                             (rule "cnf_rightDist" (formula "44") (term "0,0,0,0,0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "44") (term "1,0,0,0,0,0,0,1,1,0"))
                                             (rule "shift_paren_or" (formula "44") (term "0,0,0,0,0,0,0,1,1,0"))
                                             (rule "shift_paren_and" (formula "44") (term "0,0,0,1,1,0"))
                                             (rule "shift_paren_and" (formula "44") (term "0,0,0,0,1,1,0"))
                                             (rule "allLeft" (formula "24") (inst "t=i_1_0"))
                                             (rule "replace_known_left" (formula "24") (term "0,0,0,0") (ifseqformula "43"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "inEqSimp_contradInEq0" (formula "24") (term "1") (ifseqformula "42"))
                                             (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "24") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "24") (term "0,0,1"))
                                             (rule "polySimp_addComm0" (formula "24") (term "0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                                             (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "24") (term "0,0,1"))
                                             (rule "leq_literals" (formula "24") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "inEqSimp_contradInEq1" (formula "24") (term "1") (ifseqformula "41"))
                                             (rule "qeq_literals" (formula "24") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "shift_paren_and" (formula "45") (term "0,0,0,0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "45") (term "0,1,1,0"))
                                             (rule "commute_or" (formula "45") (term "0,0,1,1,0"))
                                             (rule "cnf_rightDist" (formula "45") (term "0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "45") (term "1,0,0,1,1,0"))
                                             (rule "commute_or" (formula "45") (term "0,1,0,0,1,1,0"))
                                             (rule "cnf_rightDist" (formula "45") (term "0,0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "45") (term "1,0,0,0,1,1,0"))
                                             (rule "commute_or" (formula "45") (term "0,1,0,0,0,1,1,0"))
                                             (rule "cnf_rightDist" (formula "45") (term "0,0,0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "45") (term "1,0,0,0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "45") (term "0,1,0,0,0,0,1,1,0"))
                                             (rule "commute_or" (formula "45") (term "0,0,1,0,0,0,0,1,1,0"))
                                             (rule "cnf_rightDist" (formula "45") (term "0,0,0,0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "45") (term "1,0,0,0,0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "45") (term "0,1,0,0,0,0,0,1,1,0"))
                                             (rule "allLeft" (formula "18") (inst "t=l_0"))
                                             (rule "inEqSimp_homoInEq0" (formula "18") (term "1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,1,0"))
                                             (rule "add_literals" (formula "18") (term "1,1,0,1,0"))
                                             (rule "times_zero_1" (formula "18") (term "1,0,1,0"))
                                             (rule "add_zero_right" (formula "18") (term "0,1,0"))
                                             (rule "qeq_literals" (formula "18") (term "1,0"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "inEqSimp_contradInEq0" (formula "18") (term "1") (ifseqformula "16"))
                                             (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                             (rule "polySimp_addComm0" (formula "18") (term "0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                             (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "18") (term "0,0,1"))
                                             (rule "leq_literals" (formula "18") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "notLeft" (formula "18"))
                                             (rule "allLeft" (formula "18") (inst "t=n_0"))
                                             (rule "replace_known_left" (formula "18") (term "0,0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "5"))
                                             (rule "inEqSimp_homoInEq1" (formula "18") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
                                             (rule "polySimp_addComm0" (formula "18") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,0"))
                                             (rule "add_literals" (formula "18") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "18") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "18") (term "0,0,0"))
                                             (rule "leq_literals" (formula "18") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "inEqSimp_antiSymm" (formula "18") (ifseqformula "7"))
                                             (rule "applyEqRigid" (formula "19") (term "0") (ifseqformula "18"))
                                             (rule "inEqSimp_homoInEq1" (formula "19"))
                                             (rule "polySimp_pullOutFactor1" (formula "19") (term "0"))
                                             (rule "add_literals" (formula "19") (term "1,0"))
                                             (rule "times_zero_1" (formula "19") (term "0"))
                                             (rule "leq_literals" (formula "19"))
                                             (rule "true_left" (formula "19"))
                                             (rule "applyEq" (formula "5") (term "0") (ifseqformula "18"))
                                             (rule "inEqSimp_commuteGeq" (formula "5"))
                                             (rule "applyEq" (formula "7") (term "0") (ifseqformula "18"))
                                             (rule "inEqSimp_homoInEq0" (formula "7"))
                                             (rule "polySimp_pullOutFactor1" (formula "7") (term "0"))
                                             (rule "add_literals" (formula "7") (term "1,0"))
                                             (rule "times_zero_1" (formula "7") (term "0"))
                                             (rule "qeq_literals" (formula "7"))
                                             (rule "true_left" (formula "7"))
                                             (rule "applyEqRigid" (formula "6") (term "0") (ifseqformula "17"))
                                             (rule "applyEq" (formula "7") (term "0,1,1") (ifseqformula "16"))
                                             (rule "applyEq" (formula "6") (term "0") (ifseqformula "15"))
                                             (rule "applyEq" (formula "4") (term "0,0,2,0") (ifseqformula "14"))
                                             (rule "close" (formula "63") (ifseqformula "4"))
                                          )
                                       )
                                       (branch "CUT: l_0 <= -1 + l_1 FALSE"
                                           (builtin "One Step Simplification" (formula "10"))
                                          (rule "true_left" (formula "10"))
                                          (rule "inEqSimp_leqRight" (formula "47"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1"))
                                          (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "43"))
                                          (rule "applyEqRigid" (formula "41") (term "0,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "44") (term "0") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq0" (formula "44"))
                                          (rule "polySimp_pullOutFactor1" (formula "44") (term "0"))
                                          (rule "add_literals" (formula "44") (term "1,0"))
                                          (rule "times_zero_1" (formula "44") (term "0"))
                                          (rule "qeq_literals" (formula "44"))
                                          (rule "true_left" (formula "44"))
                                          (rule "applyEq" (formula "44") (term "0,1,1") (ifseqformula "1"))
                                          (rule "applyEq" (formula "7") (term "0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "2"))
                                          (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                          (rule "add_literals" (formula "2") (term "1,0"))
                                          (rule "times_zero_1" (formula "2") (term "0"))
                                          (rule "leq_literals" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "applyEqRigid" (formula "2") (term "1") (ifseqformula "1"))
                                          (rule "applyEq" (formula "42") (term "0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "9") (term "0") (ifseqformula "40"))
                                          (rule "applyEq" (formula "40") (term "0,1") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "38") (term "0,1") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "39") (term "1") (ifseqformula "1"))
                                          (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "11"))
                                          (rule "leq_literals" (formula "6") (term "0"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "true_left" (formula "6"))
                                          (rule "inEqSimp_antiSymm" (formula "2") (ifseqformula "4"))
                                          (rule "applyEqRigid" (formula "50") (term "0,0,2,0,0,0") (ifseqformula "2"))
                                          (rule "replace_known_right" (formula "50") (term "0,0") (ifseqformula "44"))
                                           (builtin "One Step Simplification" (formula "50"))
                                          (rule "notRight" (formula "50"))
                                          (rule "applyEqRigid" (formula "7") (term "0,1,1") (ifseqformula "3"))
                                          (rule "applyEqRigid" (formula "6") (term "0") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq0" (formula "6"))
                                          (rule "polySimp_pullOutFactor1" (formula "6") (term "0"))
                                          (rule "add_literals" (formula "6") (term "1,0"))
                                          (rule "times_zero_1" (formula "6") (term "0"))
                                          (rule "qeq_literals" (formula "6"))
                                          (rule "true_left" (formula "6"))
                                          (rule "applyEq" (formula "5") (term "0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "4"))
                                          (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                                          (rule "add_literals" (formula "4") (term "1,0"))
                                          (rule "times_zero_1" (formula "4") (term "0"))
                                          (rule "leq_literals" (formula "4"))
                                          (rule "true_left" (formula "4"))
                                          (rule "applyEq" (formula "1") (term "0,0,2,0") (ifseqformula "3"))
                                          (rule "close" (formula "42") (ifseqformula "1"))
                                       )
                                    )
                                    (branch "CUT: pow(2, i_2_0) <= 2 + l_1 * 2 FALSE"
                                        (builtin "One Step Simplification" (formula "46"))
                                       (rule "true_left" (formula "46"))
                                       (rule "inEqSimp_leqRight" (formula "46"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "replace_known_left" (formula "46") (term "0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "46"))
                                       (rule "applyEq" (formula "5") (term "0") (ifseqformula "46"))
                                       (rule "inEqSimp_homoInEq0" (formula "5"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0"))
                                       (rule "mul_literals" (formula "5") (term "0,1,0"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                       (rule "add_literals" (formula "5") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                       (rule "polySimp_rightDist" (formula "5") (term "1"))
                                       (rule "mul_literals" (formula "5") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                       (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                                       (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                       (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "8") (term "0,0"))
                                       (rule "qeq_literals" (formula "8") (term "0"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "true_left" (formula "8"))
                                       (rule "elimGcdGeq_antec" (formula "5") (inst "elimGcdRightDiv=add(Z(2(#)), l_1)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                       (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0"))
                                       (rule "leq_literals" (formula "5") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                       (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "5") (term "0,0"))
                                       (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "5") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
                                       (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                       (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                       (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "5") (term "0,0"))
                                       (rule "leq_literals" (formula "5") (term "0"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "inEqSimp_subsumption1" (formula "11") (term "0") (ifseqformula "5"))
                                       (rule "inEqSimp_homoInEq0" (formula "11") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "11") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "11") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "11") (term "0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,0"))
                                       (rule "add_literals" (formula "11") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "11") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "11") (term "0,0,0"))
                                       (rule "qeq_literals" (formula "11") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "11"))
                                       (rule "andLeft" (formula "11"))
                                       (rule "inEqSimp_contradInEq1" (formula "10") (term "0") (ifseqformula "5"))
                                       (rule "inEqSimp_homoInEq1" (formula "10") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "10") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "10") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "10") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "10") (term "0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,0"))
                                       (rule "add_literals" (formula "10") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "10") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "10") (term "0,0,0"))
                                       (rule "leq_literals" (formula "10") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "10"))
                                       (rule "true_left" (formula "10"))
                                       (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "14"))
                                       (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "1") (inst "elimGcdRightDiv=Z(0(1(9(0(7(8(6(3(5(#))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                       (rule "neg_literal" (formula "1") (term "0,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "1") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "1") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0"))
                                       (rule "qeq_literals" (formula "1") (term "0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "1"))
                                       (rule "leq_literals" (formula "8") (term "0"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "true_left" (formula "8"))
                                       (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "41"))
                                       (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                       (rule "mul_literals" (formula "6") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "6") (term "0"))
                                       (rule "add_literals" (formula "6") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                       (rule "polySimp_elimOne" (formula "6") (term "0"))
                                       (rule "inEqSimp_subsumption0" (formula "1") (ifseqformula "6"))
                                       (rule "leq_literals" (formula "1") (term "0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "commute_or_2" (formula "15") (term "0"))
                                       (rule "nnf_notOr" (formula "28") (term "1,0,0,0,1,1,0"))
                                       (rule "inEqSimp_notLeq" (formula "28") (term "0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "28") (term "0,1,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,1,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "28") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "add_zero_left" (formula "28") (term "0,0,0,1,0,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "28") (term "1,0,1,0,0,0,1,1,0"))
                                       (rule "inEqSimp_notGeq" (formula "28") (term "1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "28") (term "1,1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "28") (term "1,1,1,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "28") (term "0,1,1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "28") (term "1,1,1,1,0,0,0,1,1,0"))
                                       (rule "nnf_notAnd" (formula "28") (term "0,0,0,0,1,1,0"))
                                       (rule "commute_or" (formula "28") (term "0,0"))
                                       (rule "nnf_notOr" (formula "28") (term "1,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_notGeq" (formula "28") (term "0,1,0,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "28") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "28") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,1,0,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "28") (term "1,0,1,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_notGeq" (formula "28") (term "1,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,1,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "28") (term "1,1,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "28") (term "1,1,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,1,0,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "28") (term "0,1,1,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "28") (term "1,1,1,1,0,0,0,0,1,1,0"))
                                       (rule "nnf_notOr" (formula "28") (term "0,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "28") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "add_zero_left" (formula "28") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_notLeq" (formula "28") (term "0,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "28") (term "0,0,0,0,0,0,0,0,0,1,1,0"))
                                       (rule "add_zero_left" (formula "28") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "28") (term "1,0,0,0,0,0,0,1,1,0"))
                                       (rule "div_axiom" (formula "18") (term "1") (inst "quotient=quotient_0"))
                                       (rule "qeq_literals" (formula "18") (term "0,1,1"))
                                        (builtin "One Step Simplification" (formula "18"))
                                       (rule "equal_literals" (formula "18") (term "0"))
                                        (builtin "One Step Simplification" (formula "18"))
                                       (rule "mul_literals" (formula "18") (term "1,1,1"))
                                       (rule "andLeft" (formula "18"))
                                       (rule "andLeft" (formula "18"))
                                       (rule "polySimp_addComm1" (formula "20") (term "1"))
                                       (rule "add_literals" (formula "20") (term "0,1"))
                                       (rule "inEqSimp_commuteLeq" (formula "19"))
                                       (rule "inEqSimp_homoInEq1" (formula "20"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "20") (term "0"))
                                       (rule "applyEq" (formula "30") (term "1,1,0,0") (ifseqformula "18"))
                                       (rule "applyEq" (formula "16") (term "1,1,0,0") (ifseqformula "18"))
                                       (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "18"))
                                       (rule "applyEq" (formula "28") (term "0") (ifseqformula "18"))
                                       (rule "inEqSimp_homoInEq1" (formula "28"))
                                       (rule "polySimp_addComm1" (formula "28") (term "0"))
                                       (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "18"))
                                       (rule "applyEqRigid" (formula "16") (term "1,0,0,0,1,0") (ifseqformula "18"))
                                       (rule "applyEqRigid" (formula "31") (term "1,1,0,0") (ifseqformula "18"))
                                       (rule "applyEq" (formula "21") (term "1") (ifseqformula "18"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "20"))
                                       (rule "polySimp_mulComm0" (formula "20") (term "1"))
                                       (rule "polySimp_rightDist" (formula "20") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                                       (rule "mul_literals" (formula "20") (term "0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "28"))
                                       (rule "polySimp_mulComm0" (formula "28") (term "1"))
                                       (rule "polySimp_rightDist" (formula "28") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                                       (rule "mul_literals" (formula "28") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "28") (term "1,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "20"))
                                       (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "1") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), quotient_0)") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                       (rule "leq_literals" (formula "1") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                       (rule "neg_literal" (formula "1") (term "0,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0"))
                                       (rule "qeq_literals" (formula "1") (term "0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "15"))
                                       (rule "polySimp_mulAssoc" (formula "20") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "20") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "20") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "20") (inst "elimGcdRightDiv=Z(2(1(9(0(7(8(6(3(5(#))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0,0,1,0"))
                                       (rule "neg_literal" (formula "20") (term "0,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "20") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "20"))
                                       (rule "mul_literals" (formula "20") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "20") (term "0,0,0,0"))
                                       (rule "add_zero_right" (formula "20") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0"))
                                       (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "20") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "20") (term "0,0"))
                                       (rule "qeq_literals" (formula "20") (term "0"))
                                        (builtin "One Step Simplification" (formula "20"))
                                       (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "22"))
                                       (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                       (rule "mul_literals" (formula "5") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                       (rule "add_literals" (formula "5") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "5") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "5") (inst "elimGcdRightDiv=quotient_0") (inst "elimGcdLeftDiv=n_0") (inst "elimGcd=Z(2(#))"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0"))
                                       (rule "neg_literal" (formula "5") (term "0,0,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "5") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                       (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "5") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                       (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "5") (term "0,0"))
                                       (rule "qeq_literals" (formula "5") (term "0"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "31"))
                                       (rule "times_zero_1" (formula "30") (term "0,0"))
                                       (rule "add_zero_left" (formula "30") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "30"))
                                       (rule "mul_literals" (formula "30") (term "1"))
                                       (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "23"))
                                       (rule "mul_literals" (formula "15") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                       (rule "add_literals" (formula "15") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                       (rule "mul_literals" (formula "15") (term "1"))
                                       (rule "elimGcdGeq_antec" (formula "15") (inst "elimGcdRightDiv=Z(4(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "15") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "15"))
                                       (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "15") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "15") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                                       (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "15") (term "0,0"))
                                       (rule "leq_literals" (formula "15") (term "0"))
                                        (builtin "One Step Simplification" (formula "15"))
                                       (rule "inEqSimp_subsumption1" (formula "31") (ifseqformula "15"))
                                       (rule "leq_literals" (formula "31") (term "0"))
                                        (builtin "One Step Simplification" (formula "31"))
                                       (rule "true_left" (formula "31"))
                                       (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "24"))
                                       (rule "polySimp_rightDist" (formula "29") (term "0,0"))
                                       (rule "mul_literals" (formula "29") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "29") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                                       (rule "add_literals" (formula "29") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "29") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                                       (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                       (rule "polySimp_elimOne" (formula "29") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "50") (ifseqformula "24"))
                                       (rule "polySimp_rightDist" (formula "50") (term "0,0"))
                                       (rule "mul_literals" (formula "50") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "50") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "50") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "50") (term "0,0"))
                                       (rule "add_literals" (formula "50") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "50") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "50"))
                                       (rule "polySimp_mulLiterals" (formula "50") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "50") (inst "elimGcdRightDiv=quotient_0") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                       (rule "polySimp_mulLiterals" (formula "50") (term "1,0,1,0"))
                                       (rule "neg_literal" (formula "50") (term "0,0,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "50") (term "0,1,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "50") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "50"))
                                       (rule "polySimp_pullOutFactor0b" (formula "50") (term "0,0"))
                                       (rule "add_literals" (formula "50") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "50") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "50") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "50") (term "0,0"))
                                       (rule "add_literals" (formula "50") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "50") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "50") (term "0,0"))
                                       (rule "qeq_literals" (formula "50") (term "0"))
                                        (builtin "One Step Simplification" (formula "50"))
                                       (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "1"))
                                       (rule "times_zero_1" (formula "9") (term "0,0"))
                                       (rule "add_zero_left" (formula "9") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                       (rule "mul_literals" (formula "9") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "16"))
                                       (rule "leq_literals" (formula "9") (term "0"))
                                        (builtin "One Step Simplification" (formula "9"))
                                       (rule "true_left" (formula "9"))
                                       (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "50"))
                                       (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                       (rule "mul_literals" (formula "8") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "8") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                       (rule "polySimp_elimOne" (formula "8") (term "0"))
                                       (rule "inEqSimp_subsumption0" (formula "1") (ifseqformula "8"))
                                       (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0"))
                                       (rule "qeq_literals" (formula "1") (term "0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "29"))
                                       (rule "times_zero_1" (formula "27") (term "0,0"))
                                       (rule "add_zero_left" (formula "27") (term "0"))
                                       (rule "inEqSimp_subsumption6" (formula "27") (ifseqformula "15"))
                                       (rule "mul_literals" (formula "27") (term "1,1,0"))
                                       (rule "greater_literals" (formula "27") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "27"))
                                       (rule "leq_literals" (formula "27") (term "0"))
                                        (builtin "One Step Simplification" (formula "27"))
                                       (rule "true_left" (formula "27"))
                                       (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "4"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "2") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "52") (ifseqformula "50"))
                                       (rule "times_zero_1" (formula "52") (term "0,0"))
                                       (rule "add_zero_left" (formula "52") (term "0"))
                                       (rule "inEqSimp_subsumption1" (formula "52") (ifseqformula "15"))
                                       (rule "leq_literals" (formula "52") (term "0"))
                                        (builtin "One Step Simplification" (formula "52"))
                                       (rule "true_left" (formula "52"))
                                       (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "7"))
                                       (rule "mul_literals" (formula "9") (term "0,0"))
                                       (rule "add_zero_left" (formula "9") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                       (rule "mul_literals" (formula "9") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "16"))
                                       (rule "leq_literals" (formula "9") (term "0"))
                                        (builtin "One Step Simplification" (formula "9"))
                                       (rule "true_left" (formula "9"))
                                       (rule "commute_or_2" (formula "35") (term "0,1,1,0"))
                                       (rule "cut_direct" (formula "61") (term "0,0"))
                                       (branch "CUT: self.table[n_0 * 2] = null TRUE"
                                           (builtin "One Step Simplification" (formula "62"))
                                          (rule "false_right" (formula "62"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "39"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "40"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "37") (term "0") (ifseqformula "41"))
                                          (rule "replace_known_left" (formula "37") (term "0") (ifseqformula "38"))
                                           (builtin "One Step Simplification" (formula "37"))
                                          (rule "true_left" (formula "37"))
                                          (rule "commute_or" (formula "16") (term "0,0"))
                                          (rule "commute_or" (formula "15") (term "0,0"))
                                          (rule "commute_and" (formula "39") (term "1,0,0,1,1,0"))
                                          (rule "commute_or" (formula "21") (term "0,0"))
                                          (rule "shift_paren_or" (formula "22") (term "0,1,0"))
                                          (rule "commute_and" (formula "39") (term "0,0,0,0,0,1,1,0"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "41"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "cnf_rightDist" (formula "17") (term "0"))
                                          (rule "distr_forallAnd" (formula "17"))
                                          (rule "andLeft" (formula "17"))
                                          (rule "commute_or_2" (formula "17") (term "0"))
                                          (rule "shift_paren_or" (formula "18") (term "0"))
                                          (rule "commute_or" (formula "17") (term "0,0"))
                                          (rule "cnf_rightDist" (formula "16") (term "0"))
                                          (rule "distr_forallAnd" (formula "16"))
                                          (rule "andLeft" (formula "16"))
                                          (rule "commute_or_2" (formula "16") (term "0"))
                                          (rule "shift_paren_or" (formula "17") (term "0"))
                                          (rule "commute_or" (formula "16") (term "0,0"))
                                          (rule "commute_or_2" (formula "25") (term "0,0,1,0"))
                                          (rule "inEqSimp_or_weaken2" (formula "25") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "25") (term "1,0,1,0,1,0"))
                                          (rule "add_literals" (formula "25") (term "0,1,0,1,0,1,0"))
                                          (rule "add_zero_left" (formula "25") (term "1,0,1,0,1,0"))
                                           (builtin "One Step Simplification" (formula "25"))
                                          (rule "commute_or" (formula "41") (term "0,0,1,1,0"))
                                          (rule "commute_or" (formula "25") (term "0,0,1,0"))
                                          (rule "cnf_rightDist" (formula "42") (term "0,0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "42") (term "0,0,0,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "42") (term "1,0,0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "42") (term "0,1,0,0,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "42") (term "0,0,0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "42") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "all_pull_out3" (formula "41") (term "1,0"))
                                          (rule "shift_paren_or" (formula "41") (term "0,1,0"))
                                          (rule "shift_paren_or" (formula "41") (term "0,0,1,0"))
                                          (rule "commute_or_2" (formula "41") (term "0,0,0,1,0"))
                                          (rule "all_pull_out3" (formula "25") (term "0"))
                                          (rule "shift_paren_or" (formula "25") (term "0,0"))
                                          (rule "shift_paren_or" (formula "25") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "25") (term "0,0,0,0"))
                                          (rule "commute_or" (formula "25") (term "0,0,0,0,0"))
                                          (rule "shift_paren_and" (formula "42") (term "0,0,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "42") (term "0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "42") (term "0,0,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "42") (term "1,0,0,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "42"))
                                          (rule "cnf_rightDist" (formula "42") (term "0,0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "42") (term "1,0,0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "42") (term "0,1,0,0,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "42") (term "0,1,0,0,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "42"))
                                          (rule "cnf_rightDist" (formula "42") (term "0,0,0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "42") (term "1,0,0,0,0,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "42"))
                                          (rule "all_pull_out3" (formula "41") (term "0"))
                                          (rule "shift_paren_or" (formula "41") (term "0,0"))
                                          (rule "shift_paren_or" (formula "41") (term "0,0,0"))
                                          (rule "shift_paren_or" (formula "41") (term "0,0,0,0"))
                                          (rule "commute_or_2" (formula "41") (term "0,0,0,0,0"))
                                          (rule "commute_or" (formula "41") (term "0,0,0,0,0,0"))
                                          (rule "allLeft" (formula "16") (inst "t=n_0"))
                                          (rule "replace_known_left" (formula "16") (term "0,0,0") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "16"))
                                          (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "9"))
                                          (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0,1"))
                                          (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "16") (term "0,0,1"))
                                          (rule "leq_literals" (formula "16") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "16"))
                                          (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "16"))
                                          (rule "andLeft" (formula "6"))
                                          (rule "inEqSimp_homoInEq1" (formula "6"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                          (rule "mul_literals" (formula "6") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                          (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                                          (rule "add_literals" (formula "6") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "6") (term "1,0"))
                                          (rule "add_literals" (formula "6") (term "0"))
                                          (rule "leq_literals" (formula "6"))
                                          (rule "closeFalse" (formula "6"))
                                       )
                                       (branch "CUT: self.table[n_0 * 2] = null FALSE"
                                           (builtin "One Step Simplification" (formula "62"))
                                          (rule "notRight" (formula "62"))
                                          (rule "applyEq" (formula "62") (term "0") (ifseqformula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "39"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "36") (term "0") (ifseqformula "40"))
                                          (rule "replace_known_left" (formula "36") (term "0") (ifseqformula "37"))
                                           (builtin "One Step Simplification" (formula "36"))
                                          (rule "true_left" (formula "36"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "40"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "commute_or" (formula "15") (term "0,0"))
                                          (rule "commute_or" (formula "16") (term "0,0"))
                                          (rule "commute_and" (formula "39") (term "1,0,0,1,1,0"))
                                          (rule "commute_or" (formula "21") (term "0,0"))
                                          (rule "shift_paren_or" (formula "22") (term "0,1,0"))
                                          (rule "commute_and" (formula "39") (term "0,0,0,0,0,1,1,0"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "41"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "cnf_rightDist" (formula "16") (term "0"))
                                          (rule "distr_forallAnd" (formula "16"))
                                          (rule "andLeft" (formula "16"))
                                          (rule "commute_or_2" (formula "16") (term "0"))
                                          (rule "shift_paren_or" (formula "17") (term "0"))
                                          (rule "commute_or" (formula "16") (term "0,0"))
                                          (rule "cnf_rightDist" (formula "18") (term "0"))
                                          (rule "distr_forallAnd" (formula "18"))
                                          (rule "andLeft" (formula "18"))
                                          (rule "commute_or_2" (formula "18") (term "0"))
                                          (rule "shift_paren_or" (formula "19") (term "0"))
                                          (rule "commute_or" (formula "18") (term "0,0"))
                                          (rule "commute_or_2" (formula "25") (term "0,0,1,0"))
                                          (rule "inEqSimp_or_weaken2" (formula "25") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "25") (term "1,0,1,0,1,0"))
                                          (rule "add_literals" (formula "25") (term "0,1,0,1,0,1,0"))
                                          (rule "add_zero_left" (formula "25") (term "1,0,1,0,1,0"))
                                           (builtin "One Step Simplification" (formula "25"))
                                          (rule "commute_or" (formula "41") (term "0,0,1,1,0"))
                                          (rule "commute_or" (formula "25") (term "0,0,1,0"))
                                          (rule "cnf_rightDist" (formula "42") (term "0,0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "42") (term "0,0,0,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "42") (term "1,0,0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "42") (term "0,1,0,0,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "42") (term "0,0,0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "42") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "all_pull_out3" (formula "41") (term "1,0"))
                                          (rule "shift_paren_or" (formula "41") (term "0,1,0"))
                                          (rule "shift_paren_or" (formula "41") (term "0,0,1,0"))
                                          (rule "commute_or_2" (formula "41") (term "0,0,0,1,0"))
                                          (rule "all_pull_out3" (formula "25") (term "0"))
                                          (rule "shift_paren_or" (formula "25") (term "0,0"))
                                          (rule "shift_paren_or" (formula "25") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "25") (term "0,0,0,0"))
                                          (rule "commute_or" (formula "25") (term "0,0,0,0,0"))
                                          (rule "allLeft" (formula "17") (inst "t=n_0"))
                                          (rule "replace_known_left" (formula "17") (term "0,0,0") (ifseqformula "4"))
                                           (builtin "One Step Simplification" (formula "17"))
                                          (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "17") (term "0") (ifseqformula "6"))
                                          (rule "inEqSimp_homoInEq1" (formula "17") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "17") (term "0,0,0"))
                                          (rule "polySimp_addComm0" (formula "17") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,0"))
                                          (rule "add_literals" (formula "17") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "17") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "17") (term "0,0,0"))
                                          (rule "leq_literals" (formula "17") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "17"))
                                          (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "17"))
                                          (rule "andLeft" (formula "9"))
                                          (rule "inEqSimp_homoInEq1" (formula "9"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "9") (term "0"))
                                          (rule "add_literals" (formula "9") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "9") (term "1,0"))
                                          (rule "add_literals" (formula "9") (term "0"))
                                          (rule "leq_literals" (formula "9"))
                                          (rule "closeFalse" (formula "9"))
                                       )
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "allRight" (formula "46") (inst "sk=m_0"))
                                    (rule "impRight" (formula "46"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "inEqSimp_ltToLeq" (formula "25") (term "0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulAssoc" (formula "25") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "0,1,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "25") (term "0,1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "40") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "40") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "40") (term "0,0,0"))
                                    (rule "add_literals" (formula "40") (term "0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "25") (term "0,1,0,1,0"))
                                    (rule "inEqSimp_gtToGeq" (formula "7") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                    (rule "inEqSimp_gtToGeq" (formula "24") (term "1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "24") (term "0,1,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "5"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0,1,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "22"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "22") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "8") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "14"))
                                    (rule "mul_literals" (formula "14") (term "1,0,0"))
                                    (rule "add_literals" (formula "14") (term "0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "37"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "37") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "17"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulAssoc" (formula "25") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "jmod_axiom" (formula "36") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "1,0"))
                                    (rule "jmod_axiom" (formula "6") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                                    (rule "polySimp_sepNegMonomial" (formula "36"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                    (rule "polySimp_sepNegMonomial" (formula "6"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,0,1,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "25") (term "0,1,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,1,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,0,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "25") (term "0,1,0,1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,1,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "25") (term "1,1,0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,0,1"))
                                    (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,0,1"))
                                    (rule "applyEq" (formula "19") (term "0") (ifseqformula "20"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "39") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "0,0"))
                                    (rule "polySimp_elimOne" (formula "39") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "0,1,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "24") (term "0,1,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "7") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "0,0"))
                                    (rule "polySimp_elimOne" (formula "7") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "23") (term "1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "0,1,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "23") (term "0,1,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                    (rule "polySimp_elimOne" (formula "5") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "13") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,1,1"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,1,1"))
                                    (rule "mul_literals" (formula "8") (term "0,1,0,0,0,1,1"))
                                    (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,1,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "21"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                    (rule "polySimp_elimOne" (formula "21") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "8") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "0,0"))
                                    (rule "polySimp_elimOne" (formula "8") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "14"))
                                    (rule "mul_literals" (formula "14") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,1"))
                                    (rule "mul_literals" (formula "7") (term "0,1,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "36"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                    (rule "polySimp_elimOne" (formula "36") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1"))
                                    (rule "mul_literals" (formula "3") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "17"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                    (rule "polySimp_elimOne" (formula "17") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "23") (term "0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "24") (term "0,1,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "10"))
                                    (rule "leq_literals" (formula "18") (term "0"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "true_left" (formula "18"))
                                    (rule "elimGcdGeq_antec" (formula "1") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=m_0") (inst "elimGcd=Z(2(#))"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                    (rule "leq_literals" (formula "1") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0"))
                                    (rule "leq_literals" (formula "1") (term "0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "elimGcdLeq" (formula "23") (term "0,1,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "23") (term "0,0,0,0,0,1,0,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "sub_literals" (formula "23") (term "0,0,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,1,0,0,1,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "0,0,1,0,0,1,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "23") (term "0,0,0,1,0,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,0,1,0,0,1,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "23") (term "0,0,0,1,0,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,1,0,0,1,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                    (rule "qeq_literals" (formula "23") (term "1,0,0,1,0,0,0,1,1,0"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "23") (term "0,0,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "23") (term "0,0,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "23") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0" (formula "23") (term "0,0,0,1,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "23") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "23") (term "0,0,0,1,0,0,0,1,1,0"))
                                    (rule "leq_literals" (formula "23") (term "0,0,1,0,0,0,1,1,0"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "elimGcdGeq" (formula "8") (term "1,0,0,1,1") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=m") (inst "elimGcd=Z(2(#))"))
                                    (rule "add_zero_right" (formula "8") (term "0,0,0,1,0,1,0,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,1,0,0,1,1"))
                                    (rule "sub_literals" (formula "8") (term "0,0,0,0,0,0,0,1,0,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0,1,0,0,1,1"))
                                    (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0,0,1,0,0,1,1"))
                                    (rule "times_zero_1" (formula "8") (term "0,0,0,1,0,1,0,0,1,1"))
                                    (rule "add_zero_right" (formula "8") (term "0,0,0,0,0,1,0,0,1,1"))
                                    (rule "add_zero_left" (formula "8") (term "0,0,1,0,1,0,0,1,1"))
                                    (rule "add_zero_right" (formula "8") (term "0,0,0,0,0,1,0,0,1,1"))
                                    (rule "polySimp_pullOutFactor0" (formula "8") (term "0,1,0,1,0,0,1,1"))
                                    (rule "add_literals" (formula "8") (term "1,0,1,0,1,0,0,1,1"))
                                    (rule "times_zero_1" (formula "8") (term "0,1,0,1,0,0,1,1"))
                                    (rule "leq_literals" (formula "8") (term "1,0,1,0,0,1,1"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0,1,0,0,1,1"))
                                    (rule "add_literals" (formula "8") (term "1,1,0,0,1,0,0,1,1"))
                                    (rule "times_zero_1" (formula "8") (term "1,0,0,1,0,0,1,1"))
                                    (rule "add_zero_right" (formula "8") (term "0,0,1,0,0,1,1"))
                                    (rule "qeq_literals" (formula "8") (term "0,1,0,0,1,1"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "elimGcdGeq" (formula "23") (term "0,1,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "23") (term "0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "sub_literals" (formula "23") (term "0,0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "23") (term "0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0" (formula "23") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "23") (term "1,0,1,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "23") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "leq_literals" (formula "23") (term "1,0,0,1,0,0,0,0,1,1,0"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "qeq_literals" (formula "23") (term "0,0,1,0,0,0,0,1,1,0"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "elimGcdLeq" (formula "23") (term "1,0,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "23") (term "0,0,0,0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "sub_literals" (formula "23") (term "0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "23") (term "0,0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "23") (term "0,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "23") (term "0,0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "qeq_literals" (formula "23") (term "1,0,1,0,0,0,0,0,1,1,0"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "23") (term "0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "23") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0" (formula "23") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "23") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "23") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "leq_literals" (formula "23") (term "0,1,0,0,0,0,0,1,1,0"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "elimGcdGeq" (formula "23") (term "1,1,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0,1,1,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,0,0,0,0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,1,1,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0,1,1,0,0,1,1,0"))
                                    (rule "sub_literals" (formula "23") (term "0,0,0,0,0,0,1,1,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "23") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0,1,1,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "23") (term "0,0,1,0,1,1,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,0,0,0,0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0" (formula "23") (term "0,1,0,1,1,0,0,1,1,0"))
                                    (rule "add_literals" (formula "23") (term "1,0,1,0,1,1,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "23") (term "0,1,0,1,1,0,0,1,1,0"))
                                    (rule "leq_literals" (formula "23") (term "1,0,1,1,0,0,1,1,0"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0,1,1,0,0,1,1,0"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,0,1,1,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,0,1,1,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,0,1,1,0,0,1,1,0"))
                                    (rule "qeq_literals" (formula "23") (term "0,1,1,0,0,1,1,0"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "newSym_eq" (formula "34") (inst "l=l_0") (inst "newSymDef=mul(result_1, Z(0(#)))"))
                                    (rule "times_zero_1" (formula "34") (term "1,1"))
                                    (rule "add_zero_right" (formula "34") (term "1"))
                                    (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "34"))
                                    (rule "eqSymm" (formula "35"))
                                    (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "35"))
                                    (rule "applyEq" (formula "8") (term "1,1,0,0,0,1") (ifseqformula "35"))
                                    (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "35"))
                                    (rule "inEqSimp_homoInEq1" (formula "8") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                    (rule "applyEq" (formula "37") (term "0") (ifseqformula "35"))
                                    (rule "applyEq" (formula "3") (term "1,1") (ifseqformula "35"))
                                    (rule "applyEq" (formula "7") (term "1,1,0,0,1") (ifseqformula "35"))
                                    (rule "applyEq" (formula "36") (term "1,1") (ifseqformula "35"))
                                    (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "35"))
                                    (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                    (rule "applyEq" (formula "33") (term "1") (ifseqformula "35"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                    (rule "mul_literals" (formula "8") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                    (rule "mul_literals" (formula "7") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0"))
                                    (rule "elimGcdGeq_antec" (formula "37") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                    (rule "times_zero_1" (formula "37") (term "1,0,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,0"))
                                    (rule "leq_literals" (formula "37") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "add_zero_right" (formula "37") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "37") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "37") (term "0,0"))
                                    (rule "add_literals" (formula "37") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "37") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "37") (term "0,0"))
                                    (rule "leq_literals" (formula "37") (term "0"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "elimGcdGeq" (formula "7") (term "1,0,0,1") (inst "elimGcdRightDiv=l_0") (inst "elimGcdLeftDiv=n") (inst "elimGcd=Z(2(#))"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0,1,0,0,1"))
                                    (rule "mul_literals" (formula "7") (term "0,0,0,0,0,1,0,1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,1,0,0,1"))
                                    (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0,0,1,0,0,1"))
                                    (rule "sub_literals" (formula "7") (term "0,0,0,0,0,0,0,1,0,0,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,1,0,1,0,0,1"))
                                    (rule "add_literals" (formula "7") (term "1,1,0,1,0,1,0,0,1"))
                                    (rule "times_zero_1" (formula "7") (term "1,0,1,0,1,0,0,1"))
                                    (rule "add_zero_right" (formula "7") (term "0,1,0,1,0,0,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0,0,1,0,0,1"))
                                    (rule "add_literals" (formula "7") (term "1,1,0,0,0,1,0,0,1"))
                                    (rule "times_zero_1" (formula "7") (term "1,0,0,0,1,0,0,1"))
                                    (rule "add_zero_right" (formula "7") (term "0,0,0,1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0,1,0,0,1"))
                                    (rule "polySimp_pullOutFactor0" (formula "7") (term "0,1,0,1,0,0,1"))
                                    (rule "add_literals" (formula "7") (term "1,0,1,0,1,0,0,1"))
                                    (rule "times_zero_1" (formula "7") (term "0,1,0,1,0,0,1"))
                                    (rule "leq_literals" (formula "7") (term "1,0,1,0,0,1"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,1,0,0,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0,1,0,0,1"))
                                    (rule "add_literals" (formula "7") (term "1,1,0,0,1,0,0,1"))
                                    (rule "times_zero_1" (formula "7") (term "1,0,0,1,0,0,1"))
                                    (rule "add_zero_right" (formula "7") (term "0,0,1,0,0,1"))
                                    (rule "qeq_literals" (formula "7") (term "0,1,0,0,1"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "elimGcdGeq" (formula "8") (term "1,0,0,0,1") (inst "elimGcdRightDiv=l_0") (inst "elimGcdLeftDiv=n") (inst "elimGcd=Z(2(#))"))
                                    (rule "mul_literals" (formula "8") (term "0,0,0,0,0,1,0,1,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,1,0,0,0,1"))
                                    (rule "sub_literals" (formula "8") (term "0,0,0,0,0,0,0,1,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0,1,0,0,0,1"))
                                    (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0,0,1,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,1,0,1,0,0,0,1"))
                                    (rule "add_literals" (formula "8") (term "1,1,0,1,0,1,0,0,0,1"))
                                    (rule "times_zero_1" (formula "8") (term "1,0,1,0,1,0,0,0,1"))
                                    (rule "add_zero_right" (formula "8") (term "0,1,0,1,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0,0,1,0,0,0,1"))
                                    (rule "add_literals" (formula "8") (term "1,1,0,0,0,1,0,0,0,1"))
                                    (rule "times_zero_1" (formula "8") (term "1,0,0,0,1,0,0,0,1"))
                                    (rule "add_zero_right" (formula "8") (term "0,0,0,1,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "0,0,1,0,1,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor0" (formula "8") (term "0,1,0,1,0,0,0,1"))
                                    (rule "add_literals" (formula "8") (term "1,0,1,0,1,0,0,0,1"))
                                    (rule "times_zero_1" (formula "8") (term "0,1,0,1,0,0,0,1"))
                                    (rule "leq_literals" (formula "8") (term "1,0,1,0,0,0,1"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,1,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0,1,0,0,0,1"))
                                    (rule "add_literals" (formula "8") (term "1,1,0,0,1,0,0,0,1"))
                                    (rule "times_zero_1" (formula "8") (term "1,0,0,1,0,0,0,1"))
                                    (rule "add_zero_right" (formula "8") (term "0,0,1,0,0,0,1"))
                                    (rule "qeq_literals" (formula "8") (term "0,1,0,0,0,1"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "newSym_eq" (formula "6") (inst "l=l_1") (inst "newSymDef=mul(i_0, Z(0(#)))"))
                                    (rule "times_zero_1" (formula "6") (term "1,1"))
                                    (rule "add_zero_right" (formula "6") (term "1"))
                                    (rule "applyEqRigid" (formula "7") (term "0,0") (ifseqformula "6"))
                                    (rule "eqSymm" (formula "7"))
                                    (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "7"))
                                    (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "7"))
                                    (rule "inEqSimp_homoInEq1" (formula "8") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                    (rule "applyEq" (formula "43") (term "0,2,0") (ifseqformula "7"))
                                    (rule "applyEq" (formula "41") (term "1,1,0") (ifseqformula "7"))
                                    (rule "applyEqRigid" (formula "8") (term "1,1,0,0,0,1") (ifseqformula "7"))
                                    (rule "applyEq" (formula "4") (term "0") (ifseqformula "7"))
                                    (rule "applyEq" (formula "9") (term "1,1,0,0,0,1,1") (ifseqformula "7"))
                                    (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "7"))
                                    (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                                    (rule "applyEqRigid" (formula "40") (term "1,1,0") (ifseqformula "7"))
                                    (rule "applyEqRigid" (formula "42") (term "0,2,0") (ifseqformula "7"))
                                    (rule "applyEq" (formula "5") (term "1,1") (ifseqformula "7"))
                                    (rule "applyEq" (formula "40") (term "1,1,1") (ifseqformula "7"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0"))
                                    (rule "mul_literals" (formula "8") (term "0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0"))
                                    (rule "mul_literals" (formula "9") (term "0,1,0"))
                                    (rule "elimGcdGeq_antec" (formula "4") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                    (rule "times_zero_1" (formula "4") (term "1,0,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0"))
                                    (rule "leq_literals" (formula "4") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "add_zero_right" (formula "4") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                    (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "4") (term "0,0"))
                                    (rule "leq_literals" (formula "4") (term "0"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "elimGcdLeq" (formula "9") (term "0,0,0,1,1") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_1)") (inst "elimGcdLeftDiv=m") (inst "elimGcd=Z(2(#))"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,0,0,0,1,1"))
                                    (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0,0,0,0,0,1,1"))
                                    (rule "sub_literals" (formula "9") (term "0,0,0,0,0,0,0,0,0,0,1,1"))
                                    (rule "mul_literals" (formula "9") (term "0,0,0,0,0,1,0,0,0,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0,0,0,0,1,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0,0,0,0,0,1,1"))
                                    (rule "add_literals" (formula "9") (term "1,1,0,0,0,0,0,0,1,1"))
                                    (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0,0,1,1"))
                                    (rule "add_zero_right" (formula "9") (term "0,0,0,0,0,0,1,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,1,0,0,0,0,1,1"))
                                    (rule "add_literals" (formula "9") (term "1,1,0,1,0,0,0,0,1,1"))
                                    (rule "times_zero_1" (formula "9") (term "1,0,1,0,0,0,0,1,1"))
                                    (rule "add_zero_right" (formula "9") (term "0,1,0,0,0,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0,0,0,1,1"))
                                    (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0,0,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "9") (term "0,0,1,0,0,0,0,1,1"))
                                    (rule "mul_literals" (formula "9") (term "0,0,0,1,0,0,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0,0,0,1,1"))
                                    (rule "add_literals" (formula "9") (term "0,0,0,0,0,0,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "9") (term "0,1,0,0,0,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "9") (term "0,0,1,0,0,0,0,1,1"))
                                    (rule "add_literals" (formula "9") (term "0,0,0,1,0,0,0,0,1,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,1,0,0,0,0,1,1"))
                                    (rule "add_literals" (formula "9") (term "1,1,0,1,0,0,0,0,1,1"))
                                    (rule "times_zero_1" (formula "9") (term "1,0,1,0,0,0,0,1,1"))
                                    (rule "add_zero_right" (formula "9") (term "0,1,0,0,0,0,1,1"))
                                    (rule "qeq_literals" (formula "9") (term "1,0,0,0,0,1,1"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "9") (term "0,0,0,0,0,0,1,1"))
                                    (rule "add_literals" (formula "9") (term "0,0,0,0,0,0,0,1,1"))
                                    (rule "add_zero_left" (formula "9") (term "0,0,0,0,0,0,1,1"))
                                    (rule "polySimp_pullOutFactor0" (formula "9") (term "0,0,0,0,0,1,1"))
                                    (rule "add_literals" (formula "9") (term "1,0,0,0,0,0,1,1"))
                                    (rule "times_zero_1" (formula "9") (term "0,0,0,0,0,1,1"))
                                    (rule "leq_literals" (formula "9") (term "0,0,0,0,1,1"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "elimGcdLeq" (formula "8") (term "0,0,0,1") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_1)") (inst "elimGcdLeftDiv=n") (inst "elimGcd=Z(2(#))"))
                                    (rule "mul_literals" (formula "8") (term "0,0,0,0,0,1,0,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0,0,0,0,1"))
                                    (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0,0,0,0,0,1"))
                                    (rule "sub_literals" (formula "8") (term "0,0,0,0,0,0,0,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,1,0,0,0,0,1"))
                                    (rule "add_literals" (formula "8") (term "1,1,0,1,0,0,0,0,1"))
                                    (rule "times_zero_1" (formula "8") (term "1,0,1,0,0,0,0,1"))
                                    (rule "add_zero_right" (formula "8") (term "0,1,0,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0,0,0,0,0,1"))
                                    (rule "add_literals" (formula "8") (term "1,1,0,0,0,0,0,0,1"))
                                    (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0,0,1"))
                                    (rule "add_zero_right" (formula "8") (term "0,0,0,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "8") (term "0,0,1,0,0,0,0,1"))
                                    (rule "mul_literals" (formula "8") (term "0,0,0,1,0,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0,0,0,1"))
                                    (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "8") (term "0,1,0,0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0,0,1,0,0,0,0,1"))
                                    (rule "add_literals" (formula "8") (term "0,0,0,1,0,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,1,0,0,0,0,1"))
                                    (rule "add_literals" (formula "8") (term "1,1,0,1,0,0,0,0,1"))
                                    (rule "times_zero_1" (formula "8") (term "1,0,1,0,0,0,0,1"))
                                    (rule "add_zero_right" (formula "8") (term "0,1,0,0,0,0,1"))
                                    (rule "qeq_literals" (formula "8") (term "1,0,0,0,0,1"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0,0,1"))
                                    (rule "add_literals" (formula "8") (term "0,0,0,0,0,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0,0,0,0,0,0,1"))
                                    (rule "add_literals" (formula "8") (term "0,0,0,0,0,0,0,1"))
                                    (rule "add_zero_left" (formula "8") (term "0,0,0,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor0" (formula "8") (term "0,0,0,0,0,1"))
                                    (rule "add_literals" (formula "8") (term "1,0,0,0,0,0,1"))
                                    (rule "times_zero_1" (formula "8") (term "0,0,0,0,0,1"))
                                    (rule "leq_literals" (formula "8") (term "0,0,0,0,1"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "elimGcdLeq" (formula "8") (term "0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_1)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0,0"))
                                    (rule "mul_literals" (formula "8") (term "0,0,0,0,0,1,0,0"))
                                    (rule "sub_literals" (formula "8") (term "0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,1,0,0"))
                                    (rule "add_literals" (formula "8") (term "1,1,0,1,0,0"))
                                    (rule "times_zero_1" (formula "8") (term "1,0,1,0,0"))
                                    (rule "add_zero_right" (formula "8") (term "0,1,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "8") (term "1,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "8") (term "1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "8") (term "0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "8") (term "0,0,1,0,0"))
                                    (rule "mul_literals" (formula "8") (term "0,0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "8") (term "0,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,1,0,0"))
                                    (rule "add_literals" (formula "8") (term "1,1,0,1,0,0"))
                                    (rule "times_zero_1" (formula "8") (term "1,0,1,0,0"))
                                    (rule "add_zero_right" (formula "8") (term "0,1,0,0"))
                                    (rule "qeq_literals" (formula "8") (term "1,0,0"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "8") (term "0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "8") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "8") (term "0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "8") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0" (formula "8") (term "0,0,0"))
                                    (rule "add_literals" (formula "8") (term "1,0,0,0"))
                                    (rule "times_zero_1" (formula "8") (term "0,0,0"))
                                    (rule "leq_literals" (formula "8") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "elimGcdGeq" (formula "9") (term "0") (inst "elimGcdRightDiv=add(Z(1(#)), l_1)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0,0"))
                                    (rule "mul_literals" (formula "9") (term "0,0,0,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0,0,0"))
                                    (rule "sub_literals" (formula "9") (term "0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,1,0,0"))
                                    (rule "add_literals" (formula "9") (term "1,1,0,1,0,0"))
                                    (rule "times_zero_1" (formula "9") (term "1,0,1,0,0"))
                                    (rule "add_zero_right" (formula "9") (term "0,1,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "9") (term "1,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "9") (term "1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "9") (term "0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "9") (term "0,0,1,0,0"))
                                    (rule "mul_literals" (formula "9") (term "0,0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "9") (term "0,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "9") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,1,0,0"))
                                    (rule "add_literals" (formula "9") (term "1,1,0,1,0,0"))
                                    (rule "times_zero_1" (formula "9") (term "1,0,1,0,0"))
                                    (rule "add_zero_right" (formula "9") (term "0,1,0,0"))
                                    (rule "leq_literals" (formula "9") (term "1,0,0"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "9") (term "0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "9") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "9") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "9") (term "0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "9") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0" (formula "9") (term "0,0,0"))
                                    (rule "add_literals" (formula "9") (term "1,0,0,0"))
                                    (rule "times_zero_1" (formula "9") (term "0,0,0"))
                                    (rule "qeq_literals" (formula "9") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "3"))
                                    (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_0)") (inst "elimGcdLeftDiv=m_0") (inst "elimGcd=Z(2(#))"))
                                    (rule "neg_literal" (formula "2") (term "0,0,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                    (rule "leq_literals" (formula "2") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "2") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                    (rule "add_zero_left" (formula "2") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "2") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "2") (term "0,0"))
                                    (rule "qeq_literals" (formula "2") (term "0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "13"))
                                    (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                                    (rule "mul_literals" (formula "19") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "19") (term "0"))
                                    (rule "add_literals" (formula "19") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                    (rule "polySimp_elimOne" (formula "19") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "13"))
                                    (rule "polySimp_rightDist" (formula "39") (term "0,0"))
                                    (rule "mul_literals" (formula "39") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "39") (term "0"))
                                    (rule "add_literals" (formula "39") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "39"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                                    (rule "elimGcdLeq_antec" (formula "39") (inst "elimGcdRightDiv=Z(1(1(9(0(7(8(6(3(5(#))))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "1,0,1,0"))
                                    (rule "leq_literals" (formula "39") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "39"))
                                    (rule "neg_literal" (formula "39") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "39") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "39") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "39") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "39") (term "0,0"))
                                    (rule "add_literals" (formula "39") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "39") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "39") (term "0,0"))
                                    (rule "qeq_literals" (formula "39") (term "0"))
                                     (builtin "One Step Simplification" (formula "39"))
                                    (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "13"))
                                    (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                    (rule "mul_literals" (formula "6") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0"))
                                    (rule "add_literals" (formula "6") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                    (rule "elimGcdLeq_antec" (formula "6") (inst "elimGcdRightDiv=Z(1(1(9(0(7(8(6(3(5(#))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0"))
                                    (rule "neg_literal" (formula "6") (term "0,0,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,0,1,0"))
                                    (rule "leq_literals" (formula "6") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "mul_literals" (formula "6") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "6") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                    (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "6") (term "0,0"))
                                    (rule "qeq_literals" (formula "6") (term "0"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                    (rule "mul_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "43") (ifseqformula "1"))
                                    (rule "leq_literals" (formula "43") (term "0"))
                                     (builtin "One Step Simplification" (formula "43"))
                                    (rule "true_left" (formula "43"))
                                    (rule "nnf_imp2or" (formula "16") (term "1,0"))
                                    (rule "nnf_imp2or" (formula "17") (term "1,0,1,0"))
                                    (rule "nnf_imp2or" (formula "27") (term "0"))
                                    (rule "commute_and" (formula "52"))
                                    (rule "nnf_imp2or" (formula "28") (term "0"))
                                    (rule "commute_and" (formula "16") (term "0,0"))
                                    (rule "jdiv_axiom" (formula "19") (term "1,0"))
                                    (rule "eqSymm" (formula "19"))
                                    (rule "inEqSimp_subsumption1" (formula "19") (term "0,0") (ifseqformula "14"))
                                    (rule "leq_literals" (formula "19") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "19"))
                                    (rule "eqSymm" (formula "19"))
                                    (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "19"))
                                    (rule "applyEq" (formula "28") (term "1,1,0,0,0,0") (ifseqformula "19"))
                                    (rule "applyEqRigid" (formula "17") (term "1,1,0,0,0") (ifseqformula "19"))
                                    (rule "applyEq" (formula "26") (term "0") (ifseqformula "19"))
                                    (rule "applyEqRigid" (formula "17") (term "1,1,0,0,0,1,0") (ifseqformula "19"))
                                    (rule "applyEqRigid" (formula "16") (term "1,1,1,0,0") (ifseqformula "19"))
                                    (rule "applyEqRigid" (formula "29") (term "1,1,0,0,0,0") (ifseqformula "19"))
                                    (rule "nnf_imp2or" (formula "11") (term "0,1"))
                                    (rule "nnf_imp2or" (formula "12") (term "0,0,1"))
                                    (rule "nnf_imp2or" (formula "12") (term "0,1,1"))
                                    (rule "nnf_imp2or" (formula "28") (term "1,0"))
                                    (rule "nnf_imp2or" (formula "29") (term "1,0"))
                                    (rule "nnf_imp2or" (formula "17") (term "0"))
                                    (rule "nnf_imp2or" (formula "16") (term "0"))
                                    (rule "nnf_notAnd" (formula "28") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "28") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "28") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "28") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                                    (rule "mul_literals" (formula "28") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "28") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "28") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "28") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "28") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "29") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "29") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "29") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "29") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "29") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "29") (term "1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "29") (term "1,0,0"))
                                    (rule "mul_literals" (formula "29") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "29") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                                    (rule "mul_literals" (formula "29") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "17") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "17") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "17") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                    (rule "mul_literals" (formula "17") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "17") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "17") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "16") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "16") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                    (rule "mul_literals" (formula "16") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "11") (term "0,0,1"))
                                    (rule "inEqSimp_notGeq" (formula "11") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0,1"))
                                    (rule "mul_literals" (formula "11") (term "0,1,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0,1"))
                                    (rule "inEqSimp_notLeq" (formula "11") (term "0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0,1"))
                                    (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0,1"))
                                    (rule "add_literals" (formula "11") (term "0,0,0,0,0,0,1"))
                                    (rule "add_zero_left" (formula "11") (term "0,0,0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "11") (term "1,0,0,0,1"))
                                    (rule "nnf_notAnd" (formula "28") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "28"))
                                    (rule "inEqSimp_notLeq" (formula "28") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,1,0,1,0"))
                                    (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,1,0"))
                                    (rule "add_literals" (formula "28") (term "0,0,0,1,0,1,0"))
                                    (rule "add_zero_left" (formula "28") (term "0,0,1,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,1,0"))
                                    (rule "nnf_notAnd" (formula "29") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "29"))
                                    (rule "inEqSimp_notGeq" (formula "29") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,1,0,1,0"))
                                    (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,1,0"))
                                    (rule "add_literals" (formula "29") (term "0,0,0,1,0,1,0"))
                                    (rule "add_zero_left" (formula "29") (term "0,0,1,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,1,0"))
                                    (rule "nnf_imp2or" (formula "17") (term "0,1,0"))
                                    (rule "nnf_notAnd" (formula "12") (term "0,0,0,1"))
                                    (rule "inEqSimp_notLeq" (formula "12") (term "0,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0,0,1"))
                                    (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0,0,1"))
                                    (rule "add_literals" (formula "12") (term "0,0,0,0,0,0,0,1"))
                                    (rule "add_zero_left" (formula "12") (term "0,0,0,0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "12") (term "1,0,0,0,0,1"))
                                    (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,0,1"))
                                    (rule "mul_literals" (formula "12") (term "0,1,1,0,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,0,1"))
                                    (rule "nnf_notAnd" (formula "12") (term "0,0,1,1"))
                                    (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0,1,1"))
                                    (rule "times_zero_1" (formula "12") (term "1,0,0,1,0,0,1,1"))
                                    (rule "add_zero_right" (formula "12") (term "0,0,1,0,0,1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,1,1"))
                                    (rule "mul_literals" (formula "12") (term "1,1,0,0,1,1"))
                                    (rule "inEqSimp_notLeq" (formula "12") (term "0,0,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0,1,1"))
                                    (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0,1,1"))
                                    (rule "add_literals" (formula "12") (term "0,0,0,0,0,0,1,1"))
                                    (rule "add_zero_left" (formula "12") (term "0,0,0,0,0,1,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,0,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,1,1"))
                                    (rule "polySimp_elimOne" (formula "12") (term "1,0,0,0,1,1"))
                                    (rule "jdiv_axiom" (formula "40") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "40") (term "0,0,2,1"))
                                    (rule "eqSymm" (formula "40"))
                                    (rule "applyEq" (formula "40") (term "1") (ifseqformula "41"))
                                    (rule "inEqSimp_subsumption6" (formula "40") (term "0,0") (ifseqformula "1"))
                                    (rule "greater_literals" (formula "40") (term "0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "40"))
                                    (rule "mul_literals" (formula "40") (term "1,0,0,0"))
                                    (rule "leq_literals" (formula "40") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "40"))
                                    (rule "polyDiv_pullOut" (formula "40") (term "0") (inst "polyDivCoeff=l_0"))
                                    (rule "equal_literals" (formula "40") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "40"))
                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,0"))
                                    (rule "polySimp_pullOutFactor0" (formula "40") (term "0,0,0"))
                                    (rule "add_literals" (formula "40") (term "1,0,0,0"))
                                    (rule "times_zero_1" (formula "40") (term "0,0,0"))
                                    (rule "div_literals" (formula "40") (term "0,0"))
                                    (rule "add_zero_left" (formula "40") (term "0"))
                                     (builtin "One Step Simplification" (formula "40"))
                                    (rule "true_left" (formula "40"))
                                    (rule "nnf_imp2or" (formula "28") (term "0,1,1,0"))
                                    (rule "nnf_imp2or" (formula "29") (term "0,1,1,0"))
                                    (rule "nnf_notAnd" (formula "17") (term "0,0,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "17") (term "0,1,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,1,0"))
                                    (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0,1,0"))
                                    (rule "add_literals" (formula "17") (term "0,0,0,0,0,0,1,0"))
                                    (rule "add_zero_left" (formula "17") (term "0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0,1,0"))
                                    (rule "nnf_notAnd" (formula "17") (term "0,1,0,1,0"))
                                     (builtin "One Step Simplification" (formula "17"))
                                    (rule "jdiv_axiom" (formula "9") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "0,0,2,1"))
                                    (rule "eqSymm" (formula "9"))
                                    (rule "applyEq" (formula "9") (term "1") (ifseqformula "10"))
                                    (rule "inEqSimp_subsumption6" (formula "9") (term "0,0") (ifseqformula "6"))
                                    (rule "greater_literals" (formula "9") (term "0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "mul_literals" (formula "9") (term "1,0,0,0"))
                                    (rule "leq_literals" (formula "9") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "polyDiv_pullOut" (formula "9") (term "0") (inst "polyDivCoeff=l_1"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,2,0"))
                                    (rule "equal_literals" (formula "9") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "polySimp_homoEq" (formula "9"))
                                    (rule "polySimp_pullOutFactor0" (formula "9") (term "0,0,0,1,0"))
                                    (rule "add_literals" (formula "9") (term "1,0,0,0,1,0"))
                                    (rule "times_zero_1" (formula "9") (term "0,0,0,1,0"))
                                    (rule "div_literals" (formula "9") (term "0,0,1,0"))
                                    (rule "add_zero_left" (formula "9") (term "0,1,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "9") (term "0"))
                                    (rule "add_literals" (formula "9") (term "1,0"))
                                    (rule "times_zero_1" (formula "9") (term "0"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "true_left" (formula "9"))
                                    (rule "nnf_notAnd" (formula "28") (term "0,0,1,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "28") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "28") (term "0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,1,1,0"))
                                    (rule "inEqSimp_notLeq" (formula "28") (term "0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "28") (term "0,0,0,0,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "28") (term "0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "28") (term "1,0,0,0,1,1,0"))
                                    (rule "nnf_notAnd" (formula "29") (term "0,0,1,1,0"))
                                    (rule "nnf_notAnd" (formula "29") (term "0,0,0,1,1,0"))
                                    (rule "nnf_notOr" (formula "29") (term "1,0,0,1,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "29") (term "1,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "29") (term "1,0,0,1,1,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "29") (term "0,0,1,1,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "29") (term "1,1,1,0,0,1,1,0"))
                                    (rule "inEqSimp_notLeq" (formula "29") (term "0,1,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "29") (term "0,1,0,0,0,1,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,1,0,0,1,1,0"))
                                    (rule "add_literals" (formula "29") (term "0,0,0,0,1,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "29") (term "0,0,0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "0,1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "29") (term "1,0,1,0,0,1,1,0"))
                                    (rule "nnf_notAnd" (formula "29") (term "0,0,0,0,1,1,0"))
                                    (rule "nnf_notOr" (formula "29") (term "1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "29") (term "1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,1,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "29") (term "0,1,1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "29") (term "1,1,1,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_notLeq" (formula "29") (term "0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "29") (term "0,1,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,1,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "29") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "29") (term "0,0,0,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "29") (term "1,0,1,0,0,0,1,1,0"))
                                    (rule "cut_direct" (formula "46") (term "0"))
                                    (branch "CUT: pow(2, i_2_0) <= 2 + l_1 * 2 TRUE"
                                        (builtin "One Step Simplification" (formula "47"))
                                       (rule "applyEq" (formula "4") (term "0") (ifseqformula "47"))
                                       (rule "inEqSimp_homoInEq1" (formula "4"))
                                       (rule "times_zero_2" (formula "4") (term "1,0"))
                                       (rule "add_zero_right" (formula "4") (term "0"))
                                       (rule "applyEq" (formula "5") (term "0") (ifseqformula "47"))
                                       (rule "inEqSimp_homoInEq0" (formula "5"))
                                       (rule "times_zero_2" (formula "5") (term "1,0"))
                                       (rule "add_zero_right" (formula "5") (term "0"))
                                       (rule "applyEq" (formula "45") (term "0,1") (ifseqformula "47"))
                                       (rule "polySimp_homoEq" (formula "45") (term "1"))
                                       (rule "times_zero_2" (formula "45") (term "1,0,1"))
                                       (rule "add_zero_right" (formula "45") (term "0,1"))
                                       (rule "polySimp_sepPosMonomial" (formula "45") (term "1"))
                                       (rule "mul_literals" (formula "45") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                       (rule "mul_literals" (formula "4") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                       (rule "mul_literals" (formula "5") (term "1"))
                                       (rule "inEqSimp_contradInEq5" (formula "4") (ifseqformula "2"))
                                       (rule "greater_literals" (formula "4") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "times_zero_1" (formula "4") (term "1,0"))
                                       (rule "qeq_literals" (formula "4") (term "0"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "closeFalse" (formula "4"))
                                    )
                                    (branch "CUT: pow(2, i_2_0) <= 2 + l_1 * 2 FALSE"
                                        (builtin "One Step Simplification" (formula "46"))
                                       (rule "true_left" (formula "46"))
                                       (rule "inEqSimp_leqRight" (formula "46"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "replace_known_left" (formula "46") (term "0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "46"))
                                       (rule "applyEq" (formula "5") (term "0") (ifseqformula "46"))
                                       (rule "inEqSimp_homoInEq1" (formula "5"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0"))
                                       (rule "mul_literals" (formula "5") (term "0,1,0"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                       (rule "add_literals" (formula "5") (term "0,0,0"))
                                       (rule "applyEq" (formula "6") (term "0") (ifseqformula "46"))
                                       (rule "inEqSimp_homoInEq0" (formula "6"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0"))
                                       (rule "mul_literals" (formula "6") (term "0,1,0"))
                                       (rule "polySimp_addComm1" (formula "6") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                       (rule "add_literals" (formula "6") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                       (rule "polySimp_rightDist" (formula "5") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                       (rule "mul_literals" (formula "5") (term "0,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                       (rule "polySimp_rightDist" (formula "6") (term "1"))
                                       (rule "mul_literals" (formula "6") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                       (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "9") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
                                       (rule "add_literals" (formula "9") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                                       (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "9") (term "0,0"))
                                       (rule "qeq_literals" (formula "9") (term "0"))
                                        (builtin "One Step Simplification" (formula "9"))
                                       (rule "true_left" (formula "9"))
                                       (rule "elimGcdGeq_antec" (formula "6") (inst "elimGcdRightDiv=add(Z(2(#)), l_1)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "6") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                       (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "6") (term "0,0"))
                                       (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "6") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,0,0"))
                                       (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                       (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                       (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "6") (term "0,0"))
                                       (rule "leq_literals" (formula "6") (term "0"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "inEqSimp_contradInEq1" (formula "11") (term "0") (ifseqformula "6"))
                                       (rule "inEqSimp_homoInEq1" (formula "11") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "11") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "11") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "11") (term "0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,0"))
                                       (rule "add_literals" (formula "11") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "11") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "11") (term "0,0,0"))
                                       (rule "leq_literals" (formula "11") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "11"))
                                       (rule "true_left" (formula "11"))
                                       (rule "inEqSimp_subsumption1" (formula "11") (term "0") (ifseqformula "6"))
                                       (rule "inEqSimp_homoInEq0" (formula "11") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "11") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "11") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "11") (term "0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,0"))
                                       (rule "add_literals" (formula "11") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "11") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "11") (term "0,0,0"))
                                       (rule "qeq_literals" (formula "11") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "11"))
                                       (rule "andLeft" (formula "11"))
                                       (rule "elimGcdLeq_antec" (formula "5") (inst "elimGcdRightDiv=add(Z(0(#)), l_1)") (inst "elimGcdLeftDiv=m_0") (inst "elimGcd=Z(2(#))"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0"))
                                       (rule "add_zero_left" (formula "5") (term "1,1,0,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,1,0"))
                                       (rule "add_zero_left" (formula "5") (term "1,1"))
                                       (rule "neg_literal" (formula "5") (term "0,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "5") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                       (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "5") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                       (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                       (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "5") (term "0,0"))
                                       (rule "qeq_literals" (formula "5") (term "0"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "5"))
                                       (rule "mul_literals" (formula "3") (term "0,0"))
                                       (rule "add_zero_left" (formula "3") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "42"))
                                       (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                       (rule "mul_literals" (formula "6") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "6") (term "0"))
                                       (rule "add_literals" (formula "6") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                       (rule "polySimp_elimOne" (formula "6") (term "0"))
                                       (rule "inEqSimp_subsumption0" (formula "9") (ifseqformula "6"))
                                       (rule "leq_literals" (formula "9") (term "0"))
                                        (builtin "One Step Simplification" (formula "9"))
                                       (rule "true_left" (formula "9"))
                                       (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "15"))
                                       (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "inEqSimp_subsumption4" (formula "1") (ifseqformula "7"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0"))
                                       (rule "greater_literals" (formula "1") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "leq_literals" (formula "1") (term "0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "nnf_notOr" (formula "29") (term "1,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_notGeq" (formula "29") (term "1,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,1,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "29") (term "1,1,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "29") (term "1,1,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,1,0,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "29") (term "0,1,1,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "29") (term "1,1,1,1,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_notGeq" (formula "29") (term "0,1,0,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "29") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "29") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,1,0,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "29") (term "1,0,1,0,0,0,0,1,1,0"))
                                       (rule "nnf_notOr" (formula "29") (term "0,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_notLeq" (formula "29") (term "0,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "29") (term "0,1,0,0,0,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "29") (term "0,0,0,0,0,0,0,0,0,1,1,0"))
                                       (rule "add_zero_left" (formula "29") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "0,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "29") (term "1,0,0,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "29") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "add_zero_left" (formula "29") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0,0,0,1,1,0"))
                                       (rule "commute_or_2" (formula "16") (term "0"))
                                       (rule "commute_or" (formula "28") (term "0,0"))
                                       (rule "commute_or" (formula "29") (term "0,0"))
                                       (rule "commute_or" (formula "17") (term "0,0"))
                                       (rule "div_axiom" (formula "19") (term "1") (inst "quotient=quotient_0"))
                                       (rule "equal_literals" (formula "19") (term "0"))
                                        (builtin "One Step Simplification" (formula "19"))
                                       (rule "qeq_literals" (formula "19") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "19"))
                                       (rule "mul_literals" (formula "19") (term "1,1,1"))
                                       (rule "andLeft" (formula "19"))
                                       (rule "andLeft" (formula "19"))
                                       (rule "polySimp_addComm1" (formula "21") (term "1"))
                                       (rule "add_literals" (formula "21") (term "0,1"))
                                       (rule "inEqSimp_commuteLeq" (formula "20"))
                                       (rule "inEqSimp_homoInEq1" (formula "21"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "21") (term "0"))
                                       (rule "applyEq" (formula "17") (term "1,0,0,0,1,0") (ifseqformula "19"))
                                       (rule "applyEqRigid" (formula "23") (term "1,0") (ifseqformula "19"))
                                       (rule "applyEq" (formula "32") (term "1,1,0,0") (ifseqformula "19"))
                                       (rule "applyEqRigid" (formula "17") (term "1,1,0,0") (ifseqformula "19"))
                                       (rule "applyEq" (formula "31") (term "1,1,0,0") (ifseqformula "19"))
                                       (rule "applyEq" (formula "29") (term "0") (ifseqformula "19"))
                                       (rule "inEqSimp_homoInEq1" (formula "29"))
                                       (rule "polySimp_addComm1" (formula "29") (term "0"))
                                       (rule "applyEqRigid" (formula "16") (term "1,1,0") (ifseqformula "19"))
                                       (rule "applyEqRigid" (formula "22") (term "1") (ifseqformula "19"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "21"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                                       (rule "mul_literals" (formula "21") (term "0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "29"))
                                       (rule "polySimp_mulComm0" (formula "29") (term "1"))
                                       (rule "polySimp_rightDist" (formula "29") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "29") (term "1,1"))
                                       (rule "mul_literals" (formula "29") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "29") (term "1,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "21"))
                                       (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "1") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), quotient_0)") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                       (rule "neg_literal" (formula "1") (term "0,0,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "1") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0"))
                                       (rule "qeq_literals" (formula "1") (term "0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "22"))
                                       (rule "mul_literals" (formula "15") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                       (rule "add_literals" (formula "15") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                       (rule "mul_literals" (formula "15") (term "1"))
                                       (rule "elimGcdGeq_antec" (formula "15") (inst "elimGcdRightDiv=Z(4(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0"))
                                       (rule "leq_literals" (formula "15") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "15"))
                                       (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "15") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "15") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                                       (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "15") (term "0,0"))
                                       (rule "leq_literals" (formula "15") (term "0"))
                                        (builtin "One Step Simplification" (formula "15"))
                                       (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "31"))
                                       (rule "times_zero_1" (formula "30") (term "0,0"))
                                       (rule "add_zero_left" (formula "30") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "30"))
                                       (rule "mul_literals" (formula "30") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "30") (ifseqformula "15"))
                                       (rule "leq_literals" (formula "30") (term "0"))
                                        (builtin "One Step Simplification" (formula "30"))
                                       (rule "true_left" (formula "30"))
                                       (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "17"))
                                       (rule "polySimp_mulAssoc" (formula "22") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "22") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "22") (inst "elimGcdRightDiv=Z(2(1(9(0(7(8(6(3(5(#))))))))))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0,0,1,0"))
                                       (rule "neg_literal" (formula "22") (term "0,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "22") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "22"))
                                       (rule "mul_literals" (formula "22") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "22") (term "0,0,0,0"))
                                       (rule "add_zero_right" (formula "22") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,0"))
                                       (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "22") (term "0,0"))
                                       (rule "qeq_literals" (formula "22") (term "0"))
                                        (builtin "One Step Simplification" (formula "22"))
                                       (rule "inEqSimp_exactShadow3" (formula "49") (ifseqformula "24"))
                                       (rule "polySimp_rightDist" (formula "49") (term "0,0"))
                                       (rule "mul_literals" (formula "49") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "49") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "49") (term "0,0"))
                                       (rule "add_literals" (formula "49") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "49") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "49"))
                                       (rule "polySimp_mulLiterals" (formula "49") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "49") (inst "elimGcdRightDiv=quotient_0") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                       (rule "leq_literals" (formula "49") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "49"))
                                       (rule "neg_literal" (formula "49") (term "0,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "49") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "49") (term "0,0"))
                                       (rule "add_literals" (formula "49") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "49") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "49") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "49") (term "0,0"))
                                       (rule "add_literals" (formula "49") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "49") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "49") (term "0,0"))
                                       (rule "qeq_literals" (formula "49") (term "0"))
                                        (builtin "One Step Simplification" (formula "49"))
                                       (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "24"))
                                       (rule "polySimp_rightDist" (formula "29") (term "0,0"))
                                       (rule "mul_literals" (formula "29") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "29") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                                       (rule "add_literals" (formula "29") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "29") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                                       (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                       (rule "polySimp_elimOne" (formula "29") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "1"))
                                       (rule "mul_literals" (formula "9") (term "0,0"))
                                       (rule "add_zero_left" (formula "9") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                       (rule "mul_literals" (formula "9") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "16"))
                                       (rule "leq_literals" (formula "9") (term "0"))
                                        (builtin "One Step Simplification" (formula "9"))
                                       (rule "true_left" (formula "9"))
                                       (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "50"))
                                       (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                       (rule "mul_literals" (formula "8") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "8") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                       (rule "polySimp_elimOne" (formula "8") (term "0"))
                                       (rule "inEqSimp_subsumption0" (formula "1") (ifseqformula "8"))
                                       (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0"))
                                       (rule "qeq_literals" (formula "1") (term "0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "29"))
                                       (rule "times_zero_1" (formula "27") (term "0,0"))
                                       (rule "add_zero_left" (formula "27") (term "0"))
                                       (rule "inEqSimp_subsumption6" (formula "27") (ifseqformula "15"))
                                       (rule "mul_literals" (formula "27") (term "1,1,0"))
                                       (rule "greater_literals" (formula "27") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "27"))
                                       (rule "leq_literals" (formula "27") (term "0"))
                                        (builtin "One Step Simplification" (formula "27"))
                                       (rule "true_left" (formula "27"))
                                       (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "50"))
                                       (rule "mul_literals" (formula "2") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                       (rule "mul_literals" (formula "2") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "16"))
                                       (rule "leq_literals" (formula "2") (term "0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "7"))
                                       (rule "mul_literals" (formula "9") (term "0,0"))
                                       (rule "add_zero_left" (formula "9") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                       (rule "mul_literals" (formula "9") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "16"))
                                       (rule "leq_literals" (formula "9") (term "0"))
                                        (builtin "One Step Simplification" (formula "9"))
                                       (rule "true_left" (formula "9"))
                                       (rule "commute_or_2" (formula "35") (term "0,1,1,0"))
                                       (rule "cut_direct" (formula "60") (term "0,0"))
                                       (branch "CUT: self.table[m_0 * 2] = null TRUE"
                                           (builtin "One Step Simplification" (formula "61"))
                                          (rule "false_right" (formula "61"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "32") (term "0,0") (ifseqformula "39"))
                                          (rule "replace_known_right" (formula "32") (term "0") (ifseqformula "58"))
                                           (builtin "One Step Simplification" (formula "32"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "40"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "37") (term "0") (ifseqformula "41"))
                                          (rule "replace_known_left" (formula "37") (term "0") (ifseqformula "38"))
                                           (builtin "One Step Simplification" (formula "37"))
                                          (rule "true_left" (formula "37"))
                                          (rule "commute_and" (formula "39") (term "1,0,0,1,1,0"))
                                          (rule "commute_or" (formula "15") (term "0,0"))
                                          (rule "commute_or" (formula "14") (term "0,0"))
                                          (rule "commute_or" (formula "20") (term "0,0"))
                                          (rule "shift_paren_or" (formula "21") (term "0,1,0"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "41"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "commute_and" (formula "40") (term "0,0,0,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "16") (term "0"))
                                          (rule "distr_forallAnd" (formula "16"))
                                          (rule "andLeft" (formula "16"))
                                          (rule "commute_or_2" (formula "16") (term "0"))
                                          (rule "shift_paren_or" (formula "17") (term "0"))
                                          (rule "commute_or" (formula "16") (term "0,0"))
                                          (rule "cnf_rightDist" (formula "15") (term "0"))
                                          (rule "distr_forallAnd" (formula "15"))
                                          (rule "andLeft" (formula "15"))
                                          (rule "commute_or_2" (formula "15") (term "0"))
                                          (rule "shift_paren_or" (formula "16") (term "0"))
                                          (rule "commute_or" (formula "15") (term "0,0"))
                                          (rule "commute_or_2" (formula "24") (term "0,0,1,0"))
                                          (rule "inEqSimp_or_weaken2" (formula "24") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "24") (term "1,0,1,0,1,0"))
                                          (rule "add_literals" (formula "24") (term "0,1,0,1,0,1,0"))
                                          (rule "add_zero_left" (formula "24") (term "1,0,1,0,1,0"))
                                           (builtin "One Step Simplification" (formula "24"))
                                          (rule "commute_or" (formula "41") (term "0,0,1,1,0"))
                                          (rule "commute_or" (formula "24") (term "0,0,1,0"))
                                          (rule "cnf_rightDist" (formula "42") (term "0,0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "42") (term "0,0,0,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "42") (term "1,0,0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "42") (term "0,1,0,0,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "42") (term "0,0,0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "42") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "all_pull_out3" (formula "41") (term "1,0"))
                                          (rule "shift_paren_or" (formula "41") (term "0,1,0"))
                                          (rule "shift_paren_or" (formula "41") (term "0,0,1,0"))
                                          (rule "commute_or_2" (formula "41") (term "0,0,0,1,0"))
                                          (rule "all_pull_out3" (formula "24") (term "0"))
                                          (rule "shift_paren_or" (formula "24") (term "0,0"))
                                          (rule "shift_paren_or" (formula "24") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "24") (term "0,0,0,0"))
                                          (rule "commute_or" (formula "24") (term "0,0,0,0,0"))
                                          (rule "shift_paren_and" (formula "42") (term "0,0,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "42") (term "0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "42") (term "0,0,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "42") (term "1,0,0,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "42"))
                                          (rule "cnf_rightDist" (formula "42") (term "0,0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "42") (term "1,0,0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "42") (term "0,1,0,0,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "42") (term "0,1,0,0,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "42"))
                                          (rule "cnf_rightDist" (formula "42") (term "0,0,0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "42") (term "1,0,0,0,0,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "42"))
                                          (rule "all_pull_out3" (formula "41") (term "0"))
                                          (rule "shift_paren_or" (formula "41") (term "0,0"))
                                          (rule "shift_paren_or" (formula "41") (term "0,0,0"))
                                          (rule "shift_paren_or" (formula "41") (term "0,0,0,0"))
                                          (rule "commute_or_2" (formula "41") (term "0,0,0,0,0"))
                                          (rule "commute_or" (formula "41") (term "0,0,0,0,0,0"))
                                          (rule "cnf_rightDist" (formula "42") (term "0,0,0,0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "42") (term "1,0,0,0,0,0,0,1,1,0"))
                                          (rule "shift_paren_or" (formula "42") (term "0,0,0,0,0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "42") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "42"))
                                          (rule "allLeft" (formula "23") (inst "t=i_1_0"))
                                          (rule "replace_known_left" (formula "23") (term "0,0,0,0") (ifseqformula "41"))
                                           (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0") (ifseqformula "39"))
                                          (rule "qeq_literals" (formula "23") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_contradInEq0" (formula "23") (term "1") (ifseqformula "40"))
                                          (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "23") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "0,0,1"))
                                          (rule "polySimp_addComm0" (formula "23") (term "0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
                                          (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "23") (term "0,0,1"))
                                          (rule "leq_literals" (formula "23") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "23"))
                                          (rule "cnf_rightDist" (formula "43") (term "0,0,1,0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "43") (term "0,0,0,1,0,0,0,1,1,0"))
                                          (rule "shift_paren_and" (formula "43") (term "0,0,0,1,1,0"))
                                          (rule "allLeft" (formula "17") (inst "t=i_1_0"))
                                          (rule "replace_known_left" (formula "17") (term "0,0,0") (ifseqformula "42"))
                                           (builtin "One Step Simplification" (formula "17"))
                                          (rule "inEqSimp_contradInEq1" (formula "17") (term "0") (ifseqformula "40"))
                                          (rule "qeq_literals" (formula "17") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "17"))
                                          (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "41"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "17") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                          (rule "polySimp_elimOne" (formula "17") (term "0"))
                                          (rule "inEqSimp_subsumption0" (formula "17") (ifseqformula "10"))
                                          (rule "inEqSimp_homoInEq0" (formula "17") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,0,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "17") (term "0,0,0"))
                                          (rule "add_literals" (formula "17") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0"))
                                          (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                          (rule "add_literals" (formula "17") (term "0,0"))
                                          (rule "qeq_literals" (formula "17") (term "0"))
                                           (builtin "One Step Simplification" (formula "17"))
                                          (rule "true_left" (formula "17"))
                                          (rule "allLeft" (formula "18") (inst "t=m_0"))
                                          (rule "replace_known_left" (formula "18") (term "0,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "6"))
                                          (rule "qeq_literals" (formula "18") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "inEqSimp_antiSymm" (formula "18") (ifseqformula "8"))
                                          (rule "applyEqRigid" (formula "6") (term "0") (ifseqformula "18"))
                                          (rule "applyEq" (formula "3") (term "0,0,2,0") (ifseqformula "17"))
                                          (rule "close" (formula "63") (ifseqformula "3"))
                                       )
                                       (branch "CUT: self.table[m_0 * 2] = null FALSE"
                                           (builtin "One Step Simplification" (formula "61"))
                                          (rule "notRight" (formula "61"))
                                          (rule "applyEq" (formula "61") (term "0") (ifseqformula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "32") (term "0,0") (ifseqformula "39"))
                                          (rule "replace_known_right" (formula "32") (term "0") (ifseqformula "58"))
                                           (builtin "One Step Simplification" (formula "32"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "59") (term "0") (ifseqformula "40"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "37") (term "0") (ifseqformula "41"))
                                          (rule "replace_known_left" (formula "37") (term "0") (ifseqformula "38"))
                                           (builtin "One Step Simplification" (formula "37"))
                                          (rule "true_left" (formula "37"))
                                          (rule "commute_and" (formula "39") (term "1,0,0,1,1,0"))
                                          (rule "commute_or" (formula "14") (term "0,0"))
                                          (rule "commute_or" (formula "15") (term "0,0"))
                                          (rule "commute_or" (formula "20") (term "0,0"))
                                          (rule "shift_paren_or" (formula "21") (term "0,1,0"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "41"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "commute_and" (formula "40") (term "0,0,0,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "15") (term "0"))
                                          (rule "distr_forallAnd" (formula "15"))
                                          (rule "andLeft" (formula "15"))
                                          (rule "commute_or_2" (formula "15") (term "0"))
                                          (rule "shift_paren_or" (formula "16") (term "0"))
                                          (rule "commute_or" (formula "15") (term "0,0"))
                                          (rule "cnf_rightDist" (formula "17") (term "0"))
                                          (rule "distr_forallAnd" (formula "17"))
                                          (rule "andLeft" (formula "17"))
                                          (rule "commute_or_2" (formula "17") (term "0"))
                                          (rule "shift_paren_or" (formula "18") (term "0"))
                                          (rule "commute_or" (formula "17") (term "0,0"))
                                          (rule "commute_or_2" (formula "24") (term "0,0,1,0"))
                                          (rule "inEqSimp_or_weaken2" (formula "24") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "24") (term "1,0,1,0,1,0"))
                                          (rule "add_literals" (formula "24") (term "0,1,0,1,0,1,0"))
                                          (rule "add_zero_left" (formula "24") (term "1,0,1,0,1,0"))
                                           (builtin "One Step Simplification" (formula "24"))
                                          (rule "commute_or" (formula "41") (term "0,0,1,1,0"))
                                          (rule "commute_or" (formula "24") (term "0,0,1,0"))
                                          (rule "cnf_rightDist" (formula "42") (term "0,0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "42") (term "0,0,0,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "42") (term "1,0,0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "42") (term "0,1,0,0,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "42") (term "0,0,0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "42") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "all_pull_out3" (formula "41") (term "1,0"))
                                          (rule "shift_paren_or" (formula "41") (term "0,1,0"))
                                          (rule "shift_paren_or" (formula "41") (term "0,0,1,0"))
                                          (rule "commute_or_2" (formula "41") (term "0,0,0,1,0"))
                                          (rule "all_pull_out3" (formula "24") (term "0"))
                                          (rule "shift_paren_or" (formula "24") (term "0,0"))
                                          (rule "shift_paren_or" (formula "24") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "24") (term "0,0,0,0"))
                                          (rule "commute_or" (formula "24") (term "0,0,0,0,0"))
                                          (rule "shift_paren_and" (formula "42") (term "0,0,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "42") (term "0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "42") (term "0,0,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "42") (term "1,0,0,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "42"))
                                          (rule "cnf_rightDist" (formula "42") (term "0,0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "42") (term "1,0,0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "42") (term "0,1,0,0,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "42") (term "0,1,0,0,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "42"))
                                          (rule "cnf_rightDist" (formula "42") (term "0,0,0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "42") (term "1,0,0,0,0,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "42"))
                                          (rule "all_pull_out3" (formula "41") (term "0"))
                                          (rule "shift_paren_or" (formula "41") (term "0,0"))
                                          (rule "shift_paren_or" (formula "41") (term "0,0,0"))
                                          (rule "shift_paren_or" (formula "41") (term "0,0,0,0"))
                                          (rule "commute_or_2" (formula "41") (term "0,0,0,0,0"))
                                          (rule "commute_or" (formula "41") (term "0,0,0,0,0,0"))
                                          (rule "cnf_rightDist" (formula "42") (term "0,0,1,0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "42") (term "0,0,0,1,0,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "42") (term "0,0,0,0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "42") (term "1,0,0,0,0,0,0,1,1,0"))
                                          (rule "shift_paren_or" (formula "42") (term "0,0,0,0,0,0,0,1,1,0"))
                                          (rule "shift_paren_and" (formula "42") (term "0,0,0,1,1,0"))
                                          (rule "allLeft" (formula "23") (inst "t=i_1_0"))
                                          (rule "replace_known_left" (formula "23") (term "0,0,0,0") (ifseqformula "41"))
                                           (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0") (ifseqformula "39"))
                                          (rule "qeq_literals" (formula "23") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_contradInEq0" (formula "23") (term "1") (ifseqformula "40"))
                                          (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "23") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "0,0,1"))
                                          (rule "polySimp_addComm0" (formula "23") (term "0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
                                          (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "23") (term "0,0,1"))
                                          (rule "leq_literals" (formula "23") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "23"))
                                          (rule "shift_paren_and" (formula "43") (term "0,0,0,0,1,1,0"))
                                          (rule "allLeft" (formula "16") (inst "t=l_0"))
                                          (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
                                          (rule "inEqSimp_homoInEq0" (formula "16") (term "1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,1,0"))
                                          (rule "add_literals" (formula "16") (term "1,1,0,1,0"))
                                          (rule "times_zero_1" (formula "16") (term "1,0,1,0"))
                                          (rule "add_zero_right" (formula "16") (term "0,1,0"))
                                          (rule "qeq_literals" (formula "16") (term "1,0"))
                                           (builtin "One Step Simplification" (formula "16"))
                                          (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "59"))
                                          (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0,1"))
                                          (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "16") (term "0,0,1"))
                                          (rule "leq_literals" (formula "16") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "16"))
                                          (rule "notLeft" (formula "16"))
                                          (rule "allLeft" (formula "15") (inst "t=l_0"))
                                          (rule "inEqSimp_commuteGeq" (formula "15") (term "1"))
                                          (rule "inEqSimp_homoInEq0" (formula "15") (term "1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,1,0"))
                                          (rule "add_literals" (formula "15") (term "1,1,0,1,0"))
                                          (rule "times_zero_1" (formula "15") (term "1,0,1,0"))
                                          (rule "add_zero_right" (formula "15") (term "0,1,0"))
                                          (rule "qeq_literals" (formula "15") (term "1,0"))
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "inEqSimp_contradInEq1" (formula "15") (term "1") (ifseqformula "59"))
                                          (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0,1"))
                                          (rule "add_literals" (formula "15") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "15") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "15") (term "0,0,1"))
                                          (rule "leq_literals" (formula "15") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "notLeft" (formula "15"))
                                          (rule "allLeft" (formula "17") (inst "t=i_1_0"))
                                          (rule "replace_known_left" (formula "17") (term "0,0,0") (ifseqformula "42"))
                                           (builtin "One Step Simplification" (formula "17"))
                                          (rule "inEqSimp_contradInEq1" (formula "17") (term "0") (ifseqformula "40"))
                                          (rule "qeq_literals" (formula "17") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "17"))
                                          (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "41"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "17") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                          (rule "polySimp_elimOne" (formula "17") (term "0"))
                                          (rule "inEqSimp_subsumption0" (formula "17") (ifseqformula "10"))
                                          (rule "inEqSimp_homoInEq0" (formula "17") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,0,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "17") (term "0,0,0"))
                                          (rule "add_literals" (formula "17") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0"))
                                          (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "17") (term "0,0"))
                                          (rule "qeq_literals" (formula "17") (term "0"))
                                           (builtin "One Step Simplification" (formula "17"))
                                          (rule "true_left" (formula "17"))
                                          (rule "allLeft" (formula "19") (inst "t=m_0"))
                                          (rule "replace_known_left" (formula "19") (term "0,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "6"))
                                          (rule "qeq_literals" (formula "19") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "inEqSimp_antiSymm" (formula "19") (ifseqformula "8"))
                                          (rule "applyEq" (formula "20") (term "0") (ifseqformula "19"))
                                          (rule "inEqSimp_homoInEq1" (formula "20"))
                                          (rule "polySimp_pullOutFactor1" (formula "20") (term "0"))
                                          (rule "add_literals" (formula "20") (term "1,0"))
                                          (rule "times_zero_1" (formula "20") (term "0"))
                                          (rule "leq_literals" (formula "20"))
                                          (rule "true_left" (formula "20"))
                                          (rule "applyEq" (formula "8") (term "0") (ifseqformula "19"))
                                          (rule "inEqSimp_homoInEq0" (formula "8"))
                                          (rule "polySimp_pullOutFactor1" (formula "8") (term "0"))
                                          (rule "add_literals" (formula "8") (term "1,0"))
                                          (rule "times_zero_1" (formula "8") (term "0"))
                                          (rule "qeq_literals" (formula "8"))
                                          (rule "true_left" (formula "8"))
                                          (rule "applyEqRigid" (formula "7") (term "0") (ifseqformula "18"))
                                          (rule "inEqSimp_homoInEq0" (formula "7"))
                                          (rule "polySimp_addComm1" (formula "7") (term "0"))
                                          (rule "applyEq" (formula "3") (term "0,0,2,0") (ifseqformula "18"))
                                          (rule "close" (formula "65") (ifseqformula "3"))
                                       )
                                    )
                                 )
                              )
                           )
                           (branch "Case 2"
                              (rule "precOfInt" (formula "45") (userinteraction))
                              (rule "andRight" (formula "45") (userinteraction))
                              (branch "Case 1"
                                 (rule "inEqSimp_leqRight" (formula "45"))
                                 (rule "add_zero_right" (formula "1") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_gtToGeq" (formula "22") (term "1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0,1,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "35"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "35") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_gtToGeq" (formula "5") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0,1,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "5") (term "0,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "15"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "15") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "38") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "38") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulAssoc" (formula "23") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "20"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "20") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "23") (term "0,1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,1,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0,1,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "6") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "23") (term "0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulAssoc" (formula "23") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "0,1,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "12"))
                                 (rule "mul_literals" (formula "12") (term "1,0,0"))
                                 (rule "add_literals" (formula "12") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "38") (term "0,0,0"))
                                 (rule "add_literals" (formula "38") (term "0,0,0,0"))
                                 (rule "inEqSimp_gtToGeq" (formula "1") (term "0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0,0,0,1,0"))
                                 (rule "jmod_axiom" (formula "4") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                 (rule "jmod_axiom" (formula "34") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "34") (term "1,0"))
                                 (rule "polySimp_sepNegMonomial" (formula "4"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                 (rule "polySimp_sepNegMonomial" (formula "34"))
                                 (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "22") (term "1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "22") (term "0,1,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "35"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                                 (rule "polySimp_elimOne" (formula "35") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "11") (term "0,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "22") (term "0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0,1,1,0"))
                                 (rule "applyEq" (formula "17") (term "0") (ifseqformula "18"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "5") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "0,0"))
                                 (rule "polySimp_elimOne" (formula "5") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,1,1"))
                                 (rule "mul_literals" (formula "6") (term "0,1,0,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0,1,1"))
                                 (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0,0,1,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,1"))
                                 (rule "mul_literals" (formula "5") (term "0,1,0,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "15"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                 (rule "polySimp_elimOne" (formula "15") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "22") (term "0,1,1,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "19"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                 (rule "polySimp_elimOne" (formula "19") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0,1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,0,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "22") (term "0,1,0,1,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "22") (term "1,1,0,1,0,0,1,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "22") (term "0,1,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0,0,1"))
                                 (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "10") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "6") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "0,0"))
                                 (rule "polySimp_elimOne" (formula "6") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,0,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "22") (term "0,1,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "12"))
                                 (rule "mul_literals" (formula "12") (term "1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "37") (term "0,0"))
                                 (rule "polySimp_elimOne" (formula "37") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                                 (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "8"))
                                 (rule "leq_literals" (formula "16") (term "0"))
                                  (builtin "One Step Simplification" (formula "16"))
                                 (rule "true_left" (formula "16"))
                                 (rule "elimGcdLeq" (formula "21") (term "0,1,0,0,0,1,1,0") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i)"))
                                 (rule "sub_literals" (formula "21") (term "0,0,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "21") (term "0,0,0,0,0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "21") (term "1,1,0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "21") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "21") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "21") (term "1,1,0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "21") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "21") (term "0,0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "21") (term "0,0,0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0,0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "21") (term "0,0,0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "21") (term "1,1,0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "21") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "21") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "qeq_literals" (formula "21") (term "1,0,0,1,0,0,0,1,1,0"))
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "21") (term "0,0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "21") (term "0,0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_zero_left" (formula "21") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0" (formula "21") (term "0,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "21") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "21") (term "0,0,0,1,0,0,0,1,1,0"))
                                 (rule "leq_literals" (formula "21") (term "0,0,1,0,0,0,1,1,0"))
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "elimGcdGeq" (formula "6") (term "1,0,0,1,1") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=m") (inst "elimGcdRightDiv=Z(0(#))"))
                                 (rule "add_zero_right" (formula "6") (term "0,0,0,1,0,1,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0,1,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,1,0,0,1,1"))
                                 (rule "add_zero_right" (formula "6") (term "0,0,0,0,0,1,0,0,1,1"))
                                 (rule "times_zero_1" (formula "6") (term "0,0,0,1,0,1,0,0,1,1"))
                                 (rule "times_zero_1" (formula "6") (term "1,0,0,0,0,0,1,0,0,1,1"))
                                 (rule "sub_literals" (formula "6") (term "0,0,0,0,0,0,1,0,0,1,1"))
                                 (rule "add_zero_left" (formula "6") (term "0,0,1,0,1,0,0,1,1"))
                                 (rule "add_zero_right" (formula "6") (term "0,0,0,0,0,1,0,0,1,1"))
                                 (rule "polySimp_pullOutFactor0" (formula "6") (term "0,1,0,1,0,0,1,1"))
                                 (rule "add_literals" (formula "6") (term "1,0,1,0,1,0,0,1,1"))
                                 (rule "times_zero_1" (formula "6") (term "0,1,0,1,0,0,1,1"))
                                 (rule "leq_literals" (formula "6") (term "1,0,1,0,0,1,1"))
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0,1,0,0,1,1"))
                                 (rule "add_literals" (formula "6") (term "1,1,0,0,1,0,0,1,1"))
                                 (rule "times_zero_1" (formula "6") (term "1,0,0,1,0,0,1,1"))
                                 (rule "add_zero_right" (formula "6") (term "0,0,1,0,0,1,1"))
                                 (rule "qeq_literals" (formula "6") (term "0,1,0,0,1,1"))
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "elimGcdLeq" (formula "21") (term "1,0,0,0,0,0,1,1,0") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i)"))
                                 (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "sub_literals" (formula "21") (term "0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "21") (term "0,0,0,0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "21") (term "1,1,0,0,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "21") (term "1,0,0,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "21") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "21") (term "1,1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "21") (term "1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "21") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "21") (term "0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "21") (term "0,0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "21") (term "0,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "21") (term "0,0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "21") (term "1,1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "21") (term "1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "21") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "qeq_literals" (formula "21") (term "1,0,1,0,0,0,0,0,1,1,0"))
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "21") (term "0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "add_zero_left" (formula "21") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0" (formula "21") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "21") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "21") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "leq_literals" (formula "21") (term "0,1,0,0,0,0,0,1,1,0"))
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "elimGcdGeq" (formula "21") (term "1,1,0,0,1,1,0") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcdRightDiv=Z(0(#))"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,0,1,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0,0,1,1,0,0,1,1,0"))
                                 (rule "sub_literals" (formula "21") (term "0,0,0,0,0,0,0,1,1,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "21") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0,1,1,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,0,0,1,1,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "21") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_addLiterals" (formula "21") (term "0,0,0,0,0,1,1,0,0,1,1,0"))
                                 (rule "add_zero_left" (formula "21") (term "0,0,1,0,1,1,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "21") (term "0,0,0,0,0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0" (formula "21") (term "0,1,0,1,1,0,0,1,1,0"))
                                 (rule "add_literals" (formula "21") (term "1,0,1,0,1,1,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "21") (term "0,1,0,1,1,0,0,1,1,0"))
                                 (rule "leq_literals" (formula "21") (term "1,0,1,1,0,0,1,1,0"))
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0,1,1,0,0,1,1,0"))
                                 (rule "add_literals" (formula "21") (term "1,1,0,0,1,1,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "21") (term "1,0,0,1,1,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "21") (term "0,0,1,1,0,0,1,1,0"))
                                 (rule "qeq_literals" (formula "21") (term "0,1,1,0,0,1,1,0"))
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "elimGcdGeq" (formula "21") (term "0,1,0,0,0,0,1,1,0") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcdRightDiv=Z(0(#))"))
                                 (rule "add_zero_right" (formula "21") (term "0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "21") (term "0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "sub_literals" (formula "21") (term "0,0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "21") (term "0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "21") (term "0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "add_zero_left" (formula "21") (term "0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "21") (term "1,1,0,0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "21") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "qeq_literals" (formula "21") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "polySimp_pullOutFactor0" (formula "21") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "21") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "21") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "leq_literals" (formula "21") (term "0,0,1,0,0,0,0,1,1,0"))
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "newSym_eq" (formula "32") (inst "newSymDef=mul(result_1, Z(0(#)))") (inst "l=l_0"))
                                 (rule "times_zero_1" (formula "32") (term "1,1"))
                                 (rule "add_zero_right" (formula "32") (term "1"))
                                 (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "32"))
                                 (rule "eqSymm" (formula "33"))
                                 (rule "applyEq" (formula "1") (term "1,1,0,0") (ifseqformula "33"))
                                 (rule "applyEq" (formula "5") (term "1,1,0,0,1") (ifseqformula "33"))
                                 (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "33"))
                                 (rule "applyEq" (formula "6") (term "1,1,0,0,0,1") (ifseqformula "33"))
                                 (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "33"))
                                 (rule "inEqSimp_homoInEq1" (formula "6") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                 (rule "applyEq" (formula "34") (term "1,1") (ifseqformula "33"))
                                 (rule "applyEq" (formula "35") (term "0") (ifseqformula "33"))
                                 (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "33"))
                                 (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                 (rule "applyEq" (formula "31") (term "1") (ifseqformula "33"))
                                 (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "33"))
                                 (rule "applyEq" (formula "1") (term "0,0,2,0") (ifseqformula "33"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                 (rule "mul_literals" (formula "6") (term "0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0"))
                                 (rule "mul_literals" (formula "5") (term "0,1,0"))
                                 (rule "elimGcdGeq_antec" (formula "35") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(0(#))"))
                                 (rule "add_zero_right" (formula "35") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,0"))
                                 (rule "leq_literals" (formula "35") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "35"))
                                 (rule "times_zero_1" (formula "35") (term "1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "35") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0"))
                                 (rule "add_literals" (formula "35") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "35") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "35") (term "0,0"))
                                 (rule "leq_literals" (formula "35") (term "0"))
                                  (builtin "One Step Simplification" (formula "35"))
                                 (rule "elimGcdGeq" (formula "6") (term "1,0,0,0,1") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=n") (inst "elimGcdRightDiv=l_0"))
                                 (rule "mul_literals" (formula "6") (term "0,0,0,0,0,1,0,1,0,0,0,1"))
                                 (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,0,0,1,0,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0,1,0,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,1,0,0,0,1"))
                                 (rule "sub_literals" (formula "6") (term "0,0,0,0,0,0,0,1,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,1,0,1,0,0,0,1"))
                                 (rule "add_literals" (formula "6") (term "1,1,0,1,0,1,0,0,0,1"))
                                 (rule "times_zero_1" (formula "6") (term "1,0,1,0,1,0,0,0,1"))
                                 (rule "add_zero_right" (formula "6") (term "0,1,0,1,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0,0,1,0,0,0,1"))
                                 (rule "add_literals" (formula "6") (term "1,1,0,0,0,1,0,0,0,1"))
                                 (rule "times_zero_1" (formula "6") (term "1,0,0,0,1,0,0,0,1"))
                                 (rule "add_zero_right" (formula "6") (term "0,0,0,1,0,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "0,0,1,0,1,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor0" (formula "6") (term "0,1,0,1,0,0,0,1"))
                                 (rule "add_literals" (formula "6") (term "1,0,1,0,1,0,0,0,1"))
                                 (rule "times_zero_1" (formula "6") (term "0,1,0,1,0,0,0,1"))
                                 (rule "leq_literals" (formula "6") (term "1,0,1,0,0,0,1"))
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,1,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0,1,0,0,0,1"))
                                 (rule "add_literals" (formula "6") (term "1,1,0,0,1,0,0,0,1"))
                                 (rule "times_zero_1" (formula "6") (term "1,0,0,1,0,0,0,1"))
                                 (rule "add_zero_right" (formula "6") (term "0,0,1,0,0,0,1"))
                                 (rule "qeq_literals" (formula "6") (term "0,1,0,0,0,1"))
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "elimGcdGeq" (formula "5") (term "1,0,0,1") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=n") (inst "elimGcdRightDiv=l_0"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0,1,0,0,1"))
                                 (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,0,0,1,0,0,1"))
                                 (rule "sub_literals" (formula "5") (term "0,0,0,0,0,0,0,1,0,0,1"))
                                 (rule "mul_literals" (formula "5") (term "0,0,0,0,0,1,0,1,0,0,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0,0,1,0,0,1"))
                                 (rule "add_literals" (formula "5") (term "1,1,0,0,0,1,0,0,1"))
                                 (rule "times_zero_1" (formula "5") (term "1,0,0,0,1,0,0,1"))
                                 (rule "add_zero_right" (formula "5") (term "0,0,0,1,0,0,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,1,0,1,0,0,1"))
                                 (rule "add_literals" (formula "5") (term "1,1,0,1,0,1,0,0,1"))
                                 (rule "times_zero_1" (formula "5") (term "1,0,1,0,1,0,0,1"))
                                 (rule "add_zero_right" (formula "5") (term "0,1,0,1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,1,0,0,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0,0,1,0,0,1"))
                                 (rule "add_literals" (formula "5") (term "1,1,0,0,0,1,0,0,1"))
                                 (rule "times_zero_1" (formula "5") (term "1,0,0,0,1,0,0,1"))
                                 (rule "add_zero_right" (formula "5") (term "0,0,0,1,0,0,1"))
                                 (rule "qeq_literals" (formula "5") (term "0,0,1,0,0,1"))
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "0,0,0,1,0,0,1"))
                                 (rule "polySimp_pullOutFactor0" (formula "5") (term "0,0,1,0,0,1"))
                                 (rule "add_literals" (formula "5") (term "1,0,0,1,0,0,1"))
                                 (rule "times_zero_1" (formula "5") (term "0,0,1,0,0,1"))
                                 (rule "leq_literals" (formula "5") (term "0,1,0,0,1"))
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "newSym_eq" (formula "4") (inst "newSymDef=mul(i_0, Z(0(#)))") (inst "l=l_1"))
                                 (rule "times_zero_1" (formula "4") (term "1,1"))
                                 (rule "add_zero_right" (formula "4") (term "1"))
                                 (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "4"))
                                 (rule "eqSymm" (formula "5"))
                                 (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "5"))
                                 (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "5"))
                                 (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                 (rule "applyEq" (formula "7") (term "1,1,0,0,0,1,1") (ifseqformula "5"))
                                 (rule "applyEq" (formula "41") (term "0,2,0") (ifseqformula "5"))
                                 (rule "applyEqRigid" (formula "4") (term "0,0") (ifseqformula "5"))
                                 (rule "applyEq" (formula "39") (term "1,1,0") (ifseqformula "5"))
                                 (rule "applyEqRigid" (formula "38") (term "1,1,0") (ifseqformula "5"))
                                 (rule "applyEqRigid" (formula "6") (term "0,0") (ifseqformula "5"))
                                 (rule "inEqSimp_homoInEq1" (formula "6") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                 (rule "applyEq" (formula "3") (term "1,1") (ifseqformula "5"))
                                 (rule "applyEq" (formula "40") (term "0,2,0") (ifseqformula "5"))
                                 (rule "applyEq" (formula "6") (term "1,1,0,0,0,1") (ifseqformula "5"))
                                 (rule "applyEq" (formula "38") (term "1,1,1") (ifseqformula "5"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                 (rule "mul_literals" (formula "7") (term "0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                 (rule "mul_literals" (formula "6") (term "0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0"))
                                 (rule "elimGcdGeq_antec" (formula "2") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcdRightDiv=Z(0(#))"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                 (rule "add_zero_right" (formula "2") (term "0,0,0,1,0"))
                                 (rule "leq_literals" (formula "2") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "2") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                 (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "2") (term "0,0"))
                                 (rule "leq_literals" (formula "2") (term "0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "elimGcdLeq" (formula "6") (term "0,0,0,1") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=n") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_1)"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,0,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0,0,0,0,1"))
                                 (rule "mul_literals" (formula "6") (term "0,0,0,0,0,1,0,0,0,0,1"))
                                 (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "sub_literals" (formula "6") (term "0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,1,0,0,0,0,1"))
                                 (rule "add_literals" (formula "6") (term "1,1,0,1,0,0,0,0,1"))
                                 (rule "times_zero_1" (formula "6") (term "1,0,1,0,0,0,0,1"))
                                 (rule "add_zero_right" (formula "6") (term "0,1,0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0,0,0,0,0,1"))
                                 (rule "add_literals" (formula "6") (term "1,1,0,0,0,0,0,0,1"))
                                 (rule "times_zero_1" (formula "6") (term "1,0,0,0,0,0,0,1"))
                                 (rule "add_zero_right" (formula "6") (term "0,0,0,0,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "6") (term "0,0,1,0,0,0,0,1"))
                                 (rule "mul_literals" (formula "6") (term "0,0,0,1,0,0,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,0,0,0,0,1"))
                                 (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "6") (term "0,1,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "6") (term "0,0,1,0,0,0,0,1"))
                                 (rule "add_literals" (formula "6") (term "0,0,0,1,0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,1,0,0,0,0,1"))
                                 (rule "add_literals" (formula "6") (term "1,1,0,1,0,0,0,0,1"))
                                 (rule "times_zero_1" (formula "6") (term "1,0,1,0,0,0,0,1"))
                                 (rule "add_zero_right" (formula "6") (term "0,1,0,0,0,0,1"))
                                 (rule "qeq_literals" (formula "6") (term "1,0,0,0,0,1"))
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0,0,0,1"))
                                 (rule "add_literals" (formula "6") (term "0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "6") (term "0,0,0,0,0,0,1"))
                                 (rule "add_literals" (formula "6") (term "0,0,0,0,0,0,0,1"))
                                 (rule "add_zero_left" (formula "6") (term "0,0,0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor0" (formula "6") (term "0,0,0,0,0,1"))
                                 (rule "add_literals" (formula "6") (term "1,0,0,0,0,0,1"))
                                 (rule "times_zero_1" (formula "6") (term "0,0,0,0,0,1"))
                                 (rule "leq_literals" (formula "6") (term "0,0,0,0,1"))
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "elimGcdLeq" (formula "7") (term "0,0,0,1,1") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=m") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_1)"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,0,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0,0,0,0,1,1"))
                                 (rule "sub_literals" (formula "7") (term "0,0,0,0,0,0,0,0,0,0,1,1"))
                                 (rule "mul_literals" (formula "7") (term "0,0,0,0,0,1,0,0,0,0,1,1"))
                                 (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0,0,0,0,0,1,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,1,0,0,0,0,1,1"))
                                 (rule "add_literals" (formula "7") (term "1,1,0,1,0,0,0,0,1,1"))
                                 (rule "times_zero_1" (formula "7") (term "1,0,1,0,0,0,0,1,1"))
                                 (rule "add_zero_right" (formula "7") (term "0,1,0,0,0,0,1,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0,0,0,0,0,1,1"))
                                 (rule "add_literals" (formula "7") (term "1,1,0,0,0,0,0,0,1,1"))
                                 (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0,0,1,1"))
                                 (rule "add_zero_right" (formula "7") (term "0,0,0,0,0,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "7") (term "0,0,1,0,0,0,0,1,1"))
                                 (rule "mul_literals" (formula "7") (term "0,0,0,1,0,0,0,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0,0,0,1,1"))
                                 (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "7") (term "0,1,0,0,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "7") (term "0,0,1,0,0,0,0,1,1"))
                                 (rule "add_literals" (formula "7") (term "0,0,0,1,0,0,0,0,1,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,1,0,0,0,0,1,1"))
                                 (rule "add_literals" (formula "7") (term "1,1,0,1,0,0,0,0,1,1"))
                                 (rule "times_zero_1" (formula "7") (term "1,0,1,0,0,0,0,1,1"))
                                 (rule "add_zero_right" (formula "7") (term "0,1,0,0,0,0,1,1"))
                                 (rule "qeq_literals" (formula "7") (term "1,0,0,0,0,1,1"))
                                  (builtin "One Step Simplification" (formula "7"))
                                 (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0,0,1,1"))
                                 (rule "add_literals" (formula "7") (term "0,0,0,0,0,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "7") (term "0,0,0,0,0,0,1,1"))
                                 (rule "add_literals" (formula "7") (term "0,0,0,0,0,0,0,1,1"))
                                 (rule "add_zero_left" (formula "7") (term "0,0,0,0,0,0,1,1"))
                                 (rule "polySimp_pullOutFactor0" (formula "7") (term "0,0,0,0,0,1,1"))
                                 (rule "add_literals" (formula "7") (term "1,0,0,0,0,0,1,1"))
                                 (rule "times_zero_1" (formula "7") (term "0,0,0,0,0,1,1"))
                                 (rule "leq_literals" (formula "7") (term "0,0,0,0,1,1"))
                                  (builtin "One Step Simplification" (formula "7"))
                                 (rule "elimGcdGeq" (formula "7") (term "0") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=add(Z(1(#)), l_1)"))
                                 (rule "sub_literals" (formula "7") (term "0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,0"))
                                 (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "7") (term "0,0,0,0,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "7") (term "1,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "7") (term "1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "7") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,1,0,0"))
                                 (rule "add_literals" (formula "7") (term "1,1,0,1,0,0"))
                                 (rule "times_zero_1" (formula "7") (term "1,0,1,0,0"))
                                 (rule "add_zero_right" (formula "7") (term "0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "7") (term "0,0,1,0,0"))
                                 (rule "mul_literals" (formula "7") (term "0,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "7") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "7") (term "0,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "7") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "7") (term "0,0,0,1,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,1,0,0"))
                                 (rule "add_literals" (formula "7") (term "1,1,0,1,0,0"))
                                 (rule "times_zero_1" (formula "7") (term "1,0,1,0,0"))
                                 (rule "add_zero_right" (formula "7") (term "0,1,0,0"))
                                 (rule "leq_literals" (formula "7") (term "1,0,0"))
                                  (builtin "One Step Simplification" (formula "7"))
                                 (rule "polySimp_addAssoc" (formula "7") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "7") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "7") (term "0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "7") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0" (formula "7") (term "0,0,0"))
                                 (rule "add_literals" (formula "7") (term "1,0,0,0"))
                                 (rule "times_zero_1" (formula "7") (term "0,0,0"))
                                 (rule "qeq_literals" (formula "7") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "7"))
                                 (rule "elimGcdLeq" (formula "6") (term "0") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_1)"))
                                 (rule "sub_literals" (formula "6") (term "0,0,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "6") (term "0,0,0,0,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,0"))
                                 (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "6") (term "1,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "6") (term "1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "6") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,1,0,0"))
                                 (rule "add_literals" (formula "6") (term "1,1,0,1,0,0"))
                                 (rule "times_zero_1" (formula "6") (term "1,0,1,0,0"))
                                 (rule "add_zero_right" (formula "6") (term "0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "6") (term "0,0,1,0,0"))
                                 (rule "mul_literals" (formula "6") (term "0,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "6") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "6") (term "0,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "6") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "6") (term "0,0,0,1,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,1,0,0"))
                                 (rule "add_literals" (formula "6") (term "1,1,0,1,0,0"))
                                 (rule "times_zero_1" (formula "6") (term "1,0,1,0,0"))
                                 (rule "add_zero_right" (formula "6") (term "0,1,0,0"))
                                 (rule "qeq_literals" (formula "6") (term "1,0,0"))
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "polySimp_addAssoc" (formula "6") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "6") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "6") (term "0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "6") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0" (formula "6") (term "0,0,0"))
                                 (rule "add_literals" (formula "6") (term "1,0,0,0"))
                                 (rule "times_zero_1" (formula "6") (term "0,0,0"))
                                 (rule "leq_literals" (formula "6") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "10"))
                                 (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                                 (rule "mul_literals" (formula "16") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0"))
                                 (rule "add_literals" (formula "16") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                 (rule "polySimp_elimOne" (formula "16") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "10"))
                                 (rule "polySimp_rightDist" (formula "36") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0"))
                                 (rule "mul_literals" (formula "36") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "36") (term "0"))
                                 (rule "add_literals" (formula "36") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "36"))
                                 (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                 (rule "elimGcdLeq_antec" (formula "36") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(1(1(9(0(7(8(6(3(5(#))))))))))"))
                                 (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0,0,0,1,0"))
                                 (rule "neg_literal" (formula "36") (term "0,0,0,0,0,1,0"))
                                 (rule "leq_literals" (formula "36") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "36"))
                                 (rule "mul_literals" (formula "36") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "36") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "36") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,0"))
                                 (rule "add_literals" (formula "36") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "36") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "36") (term "0,0"))
                                 (rule "qeq_literals" (formula "36") (term "0"))
                                  (builtin "One Step Simplification" (formula "36"))
                                 (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "10"))
                                 (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                 (rule "mul_literals" (formula "3") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "add_literals" (formula "3") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                 (rule "elimGcdLeq_antec" (formula "3") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcdRightDiv=Z(1(1(9(0(7(8(6(3(5(#))))))))))"))
                                 (rule "neg_literal" (formula "3") (term "0,0,0,0,0,1,0"))
                                 (rule "leq_literals" (formula "3") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                 (rule "mul_literals" (formula "3") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "3") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                 (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "3") (term "0,0"))
                                 (rule "qeq_literals" (formula "3") (term "0"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "nnf_imp2or" (formula "12") (term "1,0"))
                                 (rule "nnf_imp2or" (formula "13") (term "1,0,1,0"))
                                 (rule "nnf_imp2or" (formula "23") (term "1,0"))
                                 (rule "nnf_imp2or" (formula "24") (term "0"))
                                 (rule "commute_and" (formula "23") (term "0,0"))
                                 (rule "commute_and" (formula "12") (term "0,0"))
                                 (rule "commute_and" (formula "13") (term "0,0"))
                                 (rule "jdiv_axiom" (formula "15") (term "1,0"))
                                 (rule "eqSymm" (formula "15"))
                                 (rule "inEqSimp_subsumption1" (formula "15") (term "0,0") (ifseqformula "10"))
                                 (rule "leq_literals" (formula "15") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "15"))
                                 (rule "eqSymm" (formula "15"))
                                 (rule "applyEq" (formula "13") (term "1,1,0,0,0,1,0") (ifseqformula "15"))
                                 (rule "applyEqRigid" (formula "24") (term "1,1,1,0,0") (ifseqformula "15"))
                                 (rule "applyEqRigid" (formula "25") (term "1,1,0,0,0,0") (ifseqformula "15"))
                                 (rule "applyEq" (formula "12") (term "1,1,1,0,0") (ifseqformula "15"))
                                 (rule "applyEqRigid" (formula "16") (term "1,0") (ifseqformula "15"))
                                 (rule "applyEqRigid" (formula "22") (term "0") (ifseqformula "15"))
                                 (rule "applyEqRigid" (formula "13") (term "1,1,1,0,0") (ifseqformula "15"))
                                 (rule "arrayLengthNotNegative" (formula "20") (term "0"))
                                 (rule "applyEq" (formula "20") (term "0") (ifseqformula "21"))
                                 (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "10"))
                                 (rule "leq_literals" (formula "20") (term "0"))
                                  (builtin "One Step Simplification" (formula "20"))
                                 (rule "true_left" (formula "20"))
                                 (rule "arrayLengthIsAnInt" (formula "20") (term "0"))
                                  (builtin "One Step Simplification" (formula "20"))
                                 (rule "true_left" (formula "20"))
                                 (rule "nnf_imp2or" (formula "8") (term "0,0,1"))
                                 (rule "nnf_imp2or" (formula "8") (term "0,1,1"))
                                 (rule "nnf_imp2or" (formula "7") (term "0,1"))
                                 (rule "nnf_imp2or" (formula "25") (term "1,0"))
                                 (rule "nnf_imp2or" (formula "24") (term "0"))
                                 (rule "nnf_imp2or" (formula "12") (term "0"))
                                 (rule "nnf_imp2or" (formula "13") (term "0"))
                                 (rule "nnf_notAnd" (formula "25") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "25") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "25") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "25") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "25") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "25") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "25") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "25") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                                 (rule "mul_literals" (formula "25") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "24") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "24") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                                 (rule "mul_literals" (formula "24") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "24") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "12") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "12") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                 (rule "mul_literals" (formula "12") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "13") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
                                 (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "13") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                 (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "7") (term "0,0,1"))
                                 (rule "inEqSimp_notGeq" (formula "7") (term "1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0,1"))
                                 (rule "mul_literals" (formula "7") (term "0,1,1,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0,1"))
                                 (rule "inEqSimp_notLeq" (formula "7") (term "0,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0,1"))
                                 (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0,1"))
                                 (rule "add_literals" (formula "7") (term "0,0,0,0,0,0,1"))
                                 (rule "add_zero_left" (formula "7") (term "0,0,0,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "0,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "7") (term "1,0,0,0,1"))
                                 (rule "nnf_notAnd" (formula "25") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "25"))
                                 (rule "inEqSimp_notGeq" (formula "25") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,1,0,1,0"))
                                 (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,1,0"))
                                 (rule "add_literals" (formula "25") (term "0,0,0,1,0,1,0"))
                                 (rule "add_zero_left" (formula "25") (term "0,0,1,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,1,0"))
                                 (rule "nnf_notAnd" (formula "24") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "24"))
                                 (rule "inEqSimp_notLeq" (formula "24") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,1,0,1,0"))
                                 (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,1,0"))
                                 (rule "add_literals" (formula "24") (term "0,0,0,1,0,1,0"))
                                 (rule "add_zero_left" (formula "24") (term "0,0,1,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,1,0"))
                                 (rule "nnf_imp2or" (formula "13") (term "0,1,0"))
                                 (rule "nnf_notAnd" (formula "8") (term "0,0,0,1"))
                                 (rule "inEqSimp_notLeq" (formula "8") (term "0,0,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0,0,1"))
                                 (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0,0,1"))
                                 (rule "add_literals" (formula "8") (term "0,0,0,0,0,0,0,1"))
                                 (rule "add_zero_left" (formula "8") (term "0,0,0,0,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "0,0,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "8") (term "1,0,0,0,0,1"))
                                 (rule "inEqSimp_notGeq" (formula "8") (term "1,0,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0,0,1"))
                                 (rule "mul_literals" (formula "8") (term "0,1,1,0,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0,0,1"))
                                 (rule "nnf_notAnd" (formula "8") (term "0,0,1,1"))
                                 (rule "inEqSimp_notGeq" (formula "8") (term "1,0,0,1,1"))
                                 (rule "times_zero_1" (formula "8") (term "1,0,0,1,0,0,1,1"))
                                 (rule "add_zero_right" (formula "8") (term "0,0,1,0,0,1,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,1,1"))
                                 (rule "mul_literals" (formula "8") (term "1,1,0,0,1,1"))
                                 (rule "inEqSimp_notLeq" (formula "8") (term "0,0,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0,1,1"))
                                 (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0,1,1"))
                                 (rule "add_literals" (formula "8") (term "0,0,0,0,0,0,1,1"))
                                 (rule "add_zero_left" (formula "8") (term "0,0,0,0,0,1,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "0,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,1,1"))
                                 (rule "polySimp_elimOne" (formula "8") (term "1,0,0,0,1,1"))
                                 (rule "nnf_imp2or" (formula "25") (term "0,1,1,0"))
                                 (rule "jdiv_axiom" (formula "36") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "36") (term "0,0,2,1"))
                                 (rule "eqSymm" (formula "36"))
                                 (rule "applyEq" (formula "36") (term "1") (ifseqformula "37"))
                                 (rule "inEqSimp_subsumption6" (formula "36") (term "0,0") (ifseqformula "41"))
                                 (rule "greater_literals" (formula "36") (term "0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "36"))
                                 (rule "times_zero_1" (formula "36") (term "1,0,0,0"))
                                 (rule "leq_literals" (formula "36") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "36"))
                                 (rule "polyDiv_pullOut" (formula "36") (term "0") (inst "polyDivCoeff=l_0"))
                                 (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0,2,0"))
                                 (rule "equal_literals" (formula "36") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "36"))
                                 (rule "polySimp_pullOutFactor0" (formula "36") (term "0,0,0"))
                                 (rule "add_literals" (formula "36") (term "1,0,0,0"))
                                 (rule "times_zero_1" (formula "36") (term "0,0,0"))
                                 (rule "div_literals" (formula "36") (term "0,0"))
                                 (rule "add_zero_left" (formula "36") (term "0"))
                                  (builtin "One Step Simplification" (formula "36"))
                                 (rule "true_left" (formula "36"))
                                 (rule "nnf_imp2or" (formula "24") (term "0,1,1,0"))
                                 (rule "nnf_notAnd" (formula "13") (term "0,0,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "13") (term "0,1,1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,1,0"))
                                 (rule "inEqSimp_notLeq" (formula "13") (term "0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0,1,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,0,0,0,1,0"))
                                 (rule "add_zero_left" (formula "13") (term "0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "13") (term "1,0,0,0,1,0"))
                                 (rule "nnf_notAnd" (formula "13") (term "0,1,0,1,0"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch "result_2 <= -1 + l_0 * 2 TRUE"
                                    (rule "inEqSimp_homoInEq0" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "1,1,0"))
                                    (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1"))
                                    (rule "mul_literals" (formula "2") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                    (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "2"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0"))
                                    (rule "add_zero_right" (formula "1") (term "0"))
                                    (rule "leq_literals" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                                 (branch "result_2 <= -1 + l_0 * 2 FALSE"
                                    (rule "inEqSimp_leqRight" (formula "44"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "1,0,1,0"))
                                    (rule "polySimp_mulAssoc" (formula "2") (term "0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "2"))
                                    (rule "polySimp_rightDist" (formula "40") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0"))
                                    (rule "mul_literals" (formula "40") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "40") (term "0"))
                                    (rule "polySimp_pullOutFactor3" (formula "40") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "40") (term "0,0"))
                                    (rule "mul_literals" (formula "40") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "40"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "1"))
                                    (rule "polySimp_rightDist" (formula "40") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,1"))
                                    (rule "mul_literals" (formula "40") (term "0,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "2"))
                                    (rule "mul_literals" (formula "11") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                    (rule "add_literals" (formula "11") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1"))
                                    (rule "mul_literals" (formula "11") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                    (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "11"))
                                    (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0"))
                                    (rule "qeq_literals" (formula "1") (term "0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "1"))
                                    (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                                    (rule "mul_literals" (formula "20") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                    (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,0,0"))
                                    (rule "add_literals" (formula "20") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "20") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "20") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1"))
                                    (rule "mul_literals" (formula "20") (term "0,0,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "1"))
                                    (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                                    (rule "mul_literals" (formula "4") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                    (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "4") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1"))
                                    (rule "mul_literals" (formula "4") (term "0,0,1"))
                                    (rule "nnf_notAnd" (formula "28") (term "0,0,1,1,0"))
                                    (rule "nnf_notAnd" (formula "27") (term "0,0,1,1,0"))
                                    (rule "inEqSimp_notLeq" (formula "27") (term "0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "27") (term "0,0,0,0,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "27") (term "0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "27") (term "1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "27") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "27") (term "0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,1,1,0"))
                                    (rule "jdiv_axiom" (formula "6") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "0,0,2,1"))
                                    (rule "eqSymm" (formula "6"))
                                    (rule "applyEq" (formula "6") (term "1") (ifseqformula "7"))
                                    (rule "inEqSimp_subsumption6" (formula "6") (term "0,0") (ifseqformula "2"))
                                    (rule "greater_literals" (formula "6") (term "0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "times_zero_1" (formula "6") (term "1,0,0,0"))
                                    (rule "leq_literals" (formula "6") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "polyDiv_pullOut" (formula "6") (term "0") (inst "polyDivCoeff=l_1"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,2,0"))
                                    (rule "equal_literals" (formula "6") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "polySimp_homoEq" (formula "6"))
                                    (rule "polySimp_pullOutFactor0" (formula "6") (term "0,0,0,1,0"))
                                    (rule "add_literals" (formula "6") (term "1,0,0,0,1,0"))
                                    (rule "times_zero_1" (formula "6") (term "0,0,0,1,0"))
                                    (rule "div_literals" (formula "6") (term "0,0,1,0"))
                                    (rule "add_zero_left" (formula "6") (term "0,1,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "6") (term "0"))
                                    (rule "add_literals" (formula "6") (term "1,0"))
                                    (rule "times_zero_1" (formula "6") (term "0"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "true_left" (formula "6"))
                                    (rule "commute_or_2" (formula "14") (term "0"))
                                    (rule "cut_direct" (formula "47") (term "0"))
                                    (branch "CUT: pow(2, i_2_0) <= 2 + l_1 * 2 TRUE"
                                        (builtin "One Step Simplification" (formula "48"))
                                       (rule "applyEq" (formula "21") (term "0") (ifseqformula "48"))
                                       (rule "inEqSimp_homoInEq1" (formula "21"))
                                       (rule "times_zero_2" (formula "21") (term "1,0"))
                                       (rule "add_zero_right" (formula "21") (term "0"))
                                       (rule "applyEq" (formula "46") (term "0,1") (ifseqformula "48"))
                                       (rule "polySimp_homoEq" (formula "46") (term "1"))
                                       (rule "times_zero_2" (formula "46") (term "1,0,1"))
                                       (rule "add_zero_right" (formula "46") (term "0,1"))
                                       (rule "applyEq" (formula "42") (term "0") (ifseqformula "48"))
                                       (rule "inEqSimp_homoInEq1" (formula "42"))
                                       (rule "times_zero_2" (formula "42") (term "1,0"))
                                       (rule "add_zero_right" (formula "42") (term "0"))
                                       (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "48"))
                                       (rule "add_zero_right" (formula "1") (term "1"))
                                       (rule "applyEq" (formula "4") (term "0") (ifseqformula "48"))
                                       (rule "inEqSimp_homoInEq1" (formula "4"))
                                       (rule "times_zero_2" (formula "4") (term "1,0"))
                                       (rule "add_zero_right" (formula "4") (term "0"))
                                       (rule "applyEq" (formula "11") (term "0") (ifseqformula "48"))
                                       (rule "inEqSimp_homoInEq1" (formula "11"))
                                       (rule "times_zero_2" (formula "11") (term "1,0"))
                                       (rule "add_zero_right" (formula "11") (term "0"))
                                       (rule "polySimp_sepPosMonomial" (formula "46") (term "1"))
                                       (rule "mul_literals" (formula "46") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "21"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                                       (rule "mul_literals" (formula "21") (term "0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "42"))
                                       (rule "mul_literals" (formula "42") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1"))
                                       (rule "mul_literals" (formula "4") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "11"))
                                       (rule "mul_literals" (formula "11") (term "1"))
                                       (rule "inEqSimp_contradInEq5" (formula "42") (ifseqformula "44"))
                                       (rule "greater_literals" (formula "42") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "42"))
                                       (rule "times_zero_1" (formula "42") (term "1,0"))
                                       (rule "qeq_literals" (formula "42") (term "0"))
                                        (builtin "One Step Simplification" (formula "42"))
                                       (rule "closeFalse" (formula "42"))
                                    )
                                    (branch "CUT: pow(2, i_2_0) <= 2 + l_1 * 2 FALSE"
                                        (builtin "One Step Simplification" (formula "47"))
                                       (rule "true_left" (formula "47"))
                                       (rule "inEqSimp_leqRight" (formula "47"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "replace_known_left" (formula "47") (term "0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "47"))
                                       (rule "applyEq" (formula "5") (term "0") (ifseqformula "47"))
                                       (rule "inEqSimp_homoInEq1" (formula "5"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0"))
                                       (rule "mul_literals" (formula "5") (term "0,1,0"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                       (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                       (rule "add_zero_left" (formula "5") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor0" (formula "5") (term "0,0"))
                                       (rule "add_literals" (formula "5") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "5") (term "0,0"))
                                       (rule "add_zero_left" (formula "5") (term "0"))
                                       (rule "applyEq" (formula "43") (term "0") (ifseqformula "47"))
                                       (rule "inEqSimp_homoInEq1" (formula "43"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "43") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0"))
                                       (rule "mul_literals" (formula "43") (term "0,1,0"))
                                       (rule "polySimp_addComm1" (formula "43") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "43") (term "0,0"))
                                       (rule "add_literals" (formula "43") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "43") (term "0,0"))
                                       (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "47"))
                                       (rule "polySimp_addComm1" (formula "2") (term "1"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,1"))
                                       (rule "add_literals" (formula "2") (term "0,0,1"))
                                       (rule "applyEq" (formula "22") (term "0") (ifseqformula "47"))
                                       (rule "inEqSimp_homoInEq1" (formula "22"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0"))
                                       (rule "mul_literals" (formula "22") (term "0,1,0"))
                                       (rule "polySimp_addComm1" (formula "22") (term "0"))
                                       (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "22") (term "0,0,0"))
                                       (rule "add_literals" (formula "22") (term "0,0,0,0"))
                                       (rule "add_zero_left" (formula "22") (term "0,0,0"))
                                       (rule "applyEq" (formula "12") (term "0") (ifseqformula "47"))
                                       (rule "inEqSimp_homoInEq1" (formula "12"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0"))
                                       (rule "mul_literals" (formula "12") (term "0,1,0"))
                                       (rule "polySimp_addComm1" (formula "12") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                       (rule "add_literals" (formula "12") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "43"))
                                       (rule "polySimp_mulLiterals" (formula "43") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "22"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1"))
                                       (rule "polySimp_rightDist" (formula "22") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "12"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                       (rule "polySimp_rightDist" (formula "12") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                       (rule "mul_literals" (formula "12") (term "0,1"))
                                       (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                       (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                       (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "6") (term "0,0"))
                                       (rule "qeq_literals" (formula "6") (term "0"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "true_left" (formula "6"))
                                       (rule "elimGcdLeq_antec" (formula "11") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=add(Z(neglit(4(#))), l_1)"))
                                       (rule "neg_literal" (formula "11") (term "0,0,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0"))
                                       (rule "leq_literals" (formula "11") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "11"))
                                       (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                                       (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "11") (term "0,0"))
                                       (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "11") (term "0,0,0"))
                                       (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
                                       (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                                       (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "11") (term "0,0"))
                                       (rule "qeq_literals" (formula "11") (term "0"))
                                        (builtin "One Step Simplification" (formula "11"))
                                       (rule "inEqSimp_contradInEq0" (formula "9") (term "0") (ifseqformula "11"))
                                       (rule "inEqSimp_homoInEq1" (formula "9") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "9") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "9") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "9") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "9") (term "0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,0"))
                                       (rule "add_literals" (formula "9") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "9") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "9") (term "0,0,0"))
                                       (rule "leq_literals" (formula "9") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "9"))
                                       (rule "true_left" (formula "9"))
                                       (rule "inEqSimp_subsumption0" (formula "8") (term "0") (ifseqformula "10"))
                                       (rule "inEqSimp_homoInEq0" (formula "8") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "8") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "8") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "8") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "8") (term "0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,0"))
                                       (rule "add_literals" (formula "8") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "8") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "8") (term "0,0,0"))
                                       (rule "qeq_literals" (formula "8") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "elimGcdLeq_antec" (formula "41") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=mul(l_0, Z(2(#)))") (inst "elimGcdRightDiv=l_1"))
                                       (rule "polySimp_mulLiterals" (formula "41") (term "1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "41") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "41"))
                                       (rule "neg_literal" (formula "41") (term "0,0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,0"))
                                       (rule "add_literals" (formula "41") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "41") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "41") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,0"))
                                       (rule "add_literals" (formula "41") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "41") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "41") (term "0,0"))
                                       (rule "qeq_literals" (formula "41") (term "0"))
                                        (builtin "One Step Simplification" (formula "41"))
                                       (rule "elimGcdLeq_antec" (formula "5") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(0(#))"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0"))
                                       (rule "add_zero_right" (formula "5") (term "0,0,0,1,0"))
                                       (rule "leq_literals" (formula "5") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "neg_literal" (formula "5") (term "0,0,0,0,0"))
                                       (rule "times_zero_1" (formula "5") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "5") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                       (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "5") (term "0,0"))
                                       (rule "qeq_literals" (formula "5") (term "0"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "inEqSimp_subsumption0" (formula "40") (ifseqformula "5"))
                                       (rule "leq_literals" (formula "40") (term "0"))
                                        (builtin "One Step Simplification" (formula "40"))
                                       (rule "true_left" (formula "40"))
                                       (rule "inEqSimp_antiSymm" (formula "42") (ifseqformula "5"))
                                       (rule "applyEq" (formula "41") (term "0,1,1") (ifseqformula "42"))
                                       (rule "times_zero_2" (formula "41") (term "1,1"))
                                       (rule "add_zero_right" (formula "41") (term "1"))
                                       (rule "applyEqRigid" (formula "5") (term "0") (ifseqformula "42"))
                                       (rule "leq_literals" (formula "5"))
                                       (rule "true_left" (formula "5"))
                                       (rule "applyEq" (formula "42") (term "0") (ifseqformula "41"))
                                       (rule "qeq_literals" (formula "42"))
                                       (rule "true_left" (formula "42"))
                                       (rule "applyEq" (formula "9") (term "0") (ifseqformula "41"))
                                       (rule "inEqSimp_homoInEq0" (formula "9"))
                                       (rule "times_zero_2" (formula "9") (term "1,0"))
                                       (rule "add_zero_right" (formula "9") (term "0"))
                                       (rule "applyEq" (formula "2") (term "0,1,1") (ifseqformula "41"))
                                       (rule "times_zero_2" (formula "2") (term "1,1"))
                                       (rule "add_zero_right" (formula "2") (term "1"))
                                       (rule "applyEq" (formula "19") (term "0,1,1") (ifseqformula "41"))
                                       (rule "times_zero_2" (formula "19") (term "1,1"))
                                       (rule "add_zero_right" (formula "19") (term "1"))
                                       (rule "applyEqRigid" (formula "7") (term "1,1,1,0,0") (ifseqformula "41"))
                                       (rule "add_zero_right" (formula "7") (term "1,1,0,0"))
                                       (rule "applyEq" (formula "37") (term "0,0,0") (ifseqformula "41"))
                                       (rule "times_zero_2" (formula "37") (term "0,0"))
                                       (rule "jdiv_axiom_inline" (formula "37") (term "0"))
                                       (rule "div_literals" (formula "37") (term "1,0"))
                                       (rule "times_zero_2" (formula "37") (term "0,0,2,0"))
                                       (rule "qeq_literals" (formula "37") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "37"))
                                       (rule "eqSymm" (formula "37"))
                                       (rule "applyEqRigid" (formula "38") (term "0,0") (ifseqformula "40"))
                                       (rule "times_zero_2" (formula "38") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "38"))
                                       (rule "applyEq" (formula "37") (term "0,1") (ifseqformula "39"))
                                       (rule "times_zero_2" (formula "37") (term "1"))
                                       (rule "applyEqRigid" (formula "36") (term "0,1") (ifseqformula "39"))
                                       (rule "times_zero_2" (formula "36") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                       (rule "mul_literals" (formula "9") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "1"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                                       (rule "mul_literals" (formula "2") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "2") (term "0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0"))
                                       (rule "add_zero_right" (formula "2") (term "0"))
                                       (rule "leq_literals" (formula "2"))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                 )
                              )
                              (branch "Case 2"
                                 (rule "inEqSimp_ltRight" (formula "45"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulAssoc" (formula "23") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0,1,0,1,0"))
                                 (rule "inEqSimp_gtToGeq" (formula "5") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "6") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "12"))
                                 (rule "mul_literals" (formula "12") (term "1,0,0"))
                                 (rule "add_literals" (formula "12") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "35"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "35") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_gtToGeq" (formula "22") (term "1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0,1,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "20"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "20") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "15"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "15") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "5") (term "0,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "23") (term "0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulAssoc" (formula "23") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "0,1,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "38") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "38") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "23") (term "0,1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,1,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0,1,1"))
                                 (rule "inEqSimp_gtToGeq" (formula "1") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "1") (term "0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "38") (term "0,0,0"))
                                 (rule "add_literals" (formula "38") (term "0,0,0,0"))
                                 (rule "inEqSimp_gtToGeq" (formula "1") (term "0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "1") (term "0"))
                                 (rule "jmod_axiom" (formula "34") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "34") (term "1,0"))
                                 (rule "jmod_axiom" (formula "4") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                 (rule "polySimp_sepNegMonomial" (formula "34"))
                                 (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                 (rule "polySimp_sepNegMonomial" (formula "4"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "23") (term "0,1,1,0,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "0,1,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "23") (term "0,1,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "5") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "0,0"))
                                 (rule "polySimp_elimOne" (formula "5") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "6") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "0,0"))
                                 (rule "polySimp_elimOne" (formula "6") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "10") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0"))
                                 (rule "applyEq" (formula "17") (term "0") (ifseqformula "18"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "12"))
                                 (rule "mul_literals" (formula "12") (term "1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "11") (term "0,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "34"))
                                 (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                 (rule "polySimp_elimOne" (formula "34") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "21") (term "0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "21") (term "1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "0,1,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "21") (term "0,1,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "19"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                 (rule "polySimp_elimOne" (formula "19") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "15"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                 (rule "polySimp_elimOne" (formula "15") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0,0,1"))
                                 (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,1"))
                                 (rule "mul_literals" (formula "5") (term "0,1,0,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "22") (term "0,1,0,1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0,1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,0,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "22") (term "0,1,0,1,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "22") (term "1,1,0,1,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,1,1"))
                                 (rule "mul_literals" (formula "6") (term "0,1,0,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0,1,1"))
                                 (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0,0,1,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "37") (term "0,0"))
                                 (rule "polySimp_elimOne" (formula "37") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,1"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1,0,1"))
                                 (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "8"))
                                 (rule "leq_literals" (formula "16") (term "0"))
                                  (builtin "One Step Simplification" (formula "16"))
                                 (rule "true_left" (formula "16"))
                                 (rule "elimGcdLeq" (formula "21") (term "0,1,0,0,0,1,1,0") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i)"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "sub_literals" (formula "21") (term "0,0,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "21") (term "0,0,0,0,0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "21") (term "1,1,0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "21") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "21") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "21") (term "1,1,0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "21") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "21") (term "0,0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "21") (term "0,0,0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0,0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "21") (term "0,0,0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "21") (term "1,1,0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "21") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "21") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "qeq_literals" (formula "21") (term "1,0,0,1,0,0,0,1,1,0"))
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "21") (term "0,0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "21") (term "0,0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_zero_left" (formula "21") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0" (formula "21") (term "0,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "21") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "21") (term "0,0,0,1,0,0,0,1,1,0"))
                                 (rule "leq_literals" (formula "21") (term "0,0,1,0,0,0,1,1,0"))
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "elimGcdGeq" (formula "6") (term "1,0,0,1,1") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=m") (inst "elimGcdRightDiv=Z(0(#))"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0,1,0,0,1,1"))
                                 (rule "add_zero_right" (formula "6") (term "0,0,0,1,0,1,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,1,0,0,1,1"))
                                 (rule "add_zero_right" (formula "6") (term "0,0,0,0,0,1,0,0,1,1"))
                                 (rule "times_zero_1" (formula "6") (term "0,0,0,1,0,1,0,0,1,1"))
                                 (rule "times_zero_1" (formula "6") (term "1,0,0,0,0,0,1,0,0,1,1"))
                                 (rule "sub_literals" (formula "6") (term "0,0,0,0,0,0,1,0,0,1,1"))
                                 (rule "add_zero_left" (formula "6") (term "0,0,1,0,1,0,0,1,1"))
                                 (rule "add_zero_right" (formula "6") (term "0,0,0,0,0,1,0,0,1,1"))
                                 (rule "polySimp_pullOutFactor0" (formula "6") (term "0,1,0,1,0,0,1,1"))
                                 (rule "add_literals" (formula "6") (term "1,0,1,0,1,0,0,1,1"))
                                 (rule "times_zero_1" (formula "6") (term "0,1,0,1,0,0,1,1"))
                                 (rule "leq_literals" (formula "6") (term "1,0,1,0,0,1,1"))
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0,1,0,0,1,1"))
                                 (rule "add_literals" (formula "6") (term "1,1,0,0,1,0,0,1,1"))
                                 (rule "times_zero_1" (formula "6") (term "1,0,0,1,0,0,1,1"))
                                 (rule "add_zero_right" (formula "6") (term "0,0,1,0,0,1,1"))
                                 (rule "qeq_literals" (formula "6") (term "0,1,0,0,1,1"))
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "elimGcdLeq" (formula "21") (term "1,0,0,0,0,0,1,1,0") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i)"))
                                 (rule "sub_literals" (formula "21") (term "0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "21") (term "0,0,0,0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "21") (term "1,1,0,0,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "21") (term "1,0,0,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "21") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "21") (term "1,1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "21") (term "1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "21") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "21") (term "0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "21") (term "0,0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "21") (term "0,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "21") (term "0,0,0,1,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "21") (term "1,1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "21") (term "1,0,1,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "21") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "qeq_literals" (formula "21") (term "1,0,1,0,0,0,0,0,1,1,0"))
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "21") (term "0,0,0,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "add_zero_left" (formula "21") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0" (formula "21") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "21") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "21") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "leq_literals" (formula "21") (term "0,1,0,0,0,0,0,1,1,0"))
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "elimGcdGeq" (formula "21") (term "0,1,0,0,0,0,1,1,0") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcdRightDiv=Z(0(#))"))
                                 (rule "sub_literals" (formula "21") (term "0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "21") (term "0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "21") (term "0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_addLiterals" (formula "21") (term "0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "add_zero_left" (formula "21") (term "0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "21") (term "0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0" (formula "21") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "21") (term "1,0,1,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "21") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "leq_literals" (formula "21") (term "1,0,0,1,0,0,0,0,1,1,0"))
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "21") (term "1,1,0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "21") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "21") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "qeq_literals" (formula "21") (term "0,0,1,0,0,0,0,1,1,0"))
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "elimGcdGeq" (formula "21") (term "1,1,0,0,1,1,0") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcdRightDiv=Z(0(#))"))
                                 (rule "add_zero_right" (formula "21") (term "0,0,0,0,0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0,1,1,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "21") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,0,1,1,0,0,1,1,0"))
                                 (rule "sub_literals" (formula "21") (term "0,0,0,0,0,0,1,1,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,0,1,1,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "21") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "21") (term "0,0,0,0,0,1,1,0,0,1,1,0"))
                                 (rule "add_zero_left" (formula "21") (term "0,0,1,0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0,0,1,1,0,0,1,1,0"))
                                 (rule "add_literals" (formula "21") (term "1,1,0,0,0,1,1,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "21") (term "1,0,0,0,1,1,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "21") (term "0,0,0,1,1,0,0,1,1,0"))
                                 (rule "qeq_literals" (formula "21") (term "0,0,1,1,0,0,1,1,0"))
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "polySimp_pullOutFactor0" (formula "21") (term "0,0,1,1,0,0,1,1,0"))
                                 (rule "add_literals" (formula "21") (term "1,0,0,1,1,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "21") (term "0,0,1,1,0,0,1,1,0"))
                                 (rule "leq_literals" (formula "21") (term "0,1,1,0,0,1,1,0"))
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "newSym_eq" (formula "32") (inst "newSymDef=mul(result_1, Z(0(#)))") (inst "l=l_0"))
                                 (rule "times_zero_1" (formula "32") (term "1,1"))
                                 (rule "add_zero_right" (formula "32") (term "1"))
                                 (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "32"))
                                 (rule "eqSymm" (formula "33"))
                                 (rule "applyEq" (formula "6") (term "1,1,0,0,0,1") (ifseqformula "33"))
                                 (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "33"))
                                 (rule "inEqSimp_homoInEq1" (formula "6") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                 (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "33"))
                                 (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                 (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "33"))
                                 (rule "applyEq" (formula "1") (term "1,1,1") (ifseqformula "33"))
                                 (rule "polySimp_addComm0" (formula "1") (term "1,1"))
                                 (rule "applyEq" (formula "34") (term "1,1") (ifseqformula "33"))
                                 (rule "applyEq" (formula "1") (term "0,0,1") (ifseqformula "33"))
                                 (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0,0,1"))
                                 (rule "applyEq" (formula "5") (term "1,1,0,0,1") (ifseqformula "33"))
                                 (rule "applyEq" (formula "35") (term "0") (ifseqformula "33"))
                                 (rule "applyEq" (formula "1") (term "1,1,0,0") (ifseqformula "33"))
                                 (rule "applyEq" (formula "1") (term "1,0,2,1") (ifseqformula "33"))
                                 (rule "polySimp_addComm0" (formula "1") (term "0,2,1"))
                                 (rule "applyEq" (formula "31") (term "1") (ifseqformula "33"))
                                 (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "33"))
                                 (rule "applyEq" (formula "1") (term "0,0,2,0") (ifseqformula "33"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                 (rule "mul_literals" (formula "6") (term "0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0"))
                                 (rule "mul_literals" (formula "5") (term "0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,1"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,1"))
                                 (rule "elimGcdGeq_antec" (formula "35") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(0(#))"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,0"))
                                 (rule "add_zero_right" (formula "35") (term "0,0,0,1,0"))
                                 (rule "leq_literals" (formula "35") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "35"))
                                 (rule "times_zero_1" (formula "35") (term "1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "35") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0"))
                                 (rule "add_literals" (formula "35") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "35") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "35") (term "0,0"))
                                 (rule "leq_literals" (formula "35") (term "0"))
                                  (builtin "One Step Simplification" (formula "35"))
                                 (rule "elimGcdGeq" (formula "6") (term "1,0,0,0,1") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=n") (inst "elimGcdRightDiv=l_0"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,1,0,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0,1,0,0,0,1"))
                                 (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,0,0,1,0,0,0,1"))
                                 (rule "sub_literals" (formula "6") (term "0,0,0,0,0,0,0,1,0,0,0,1"))
                                 (rule "mul_literals" (formula "6") (term "0,0,0,0,0,1,0,1,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0,0,1,0,0,0,1"))
                                 (rule "add_literals" (formula "6") (term "1,1,0,0,0,1,0,0,0,1"))
                                 (rule "times_zero_1" (formula "6") (term "1,0,0,0,1,0,0,0,1"))
                                 (rule "add_zero_right" (formula "6") (term "0,0,0,1,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,1,0,1,0,0,0,1"))
                                 (rule "add_literals" (formula "6") (term "1,1,0,1,0,1,0,0,0,1"))
                                 (rule "times_zero_1" (formula "6") (term "1,0,1,0,1,0,0,0,1"))
                                 (rule "add_zero_right" (formula "6") (term "0,1,0,1,0,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,1,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0,0,1,0,0,0,1"))
                                 (rule "add_literals" (formula "6") (term "1,1,0,0,0,1,0,0,0,1"))
                                 (rule "times_zero_1" (formula "6") (term "1,0,0,0,1,0,0,0,1"))
                                 (rule "add_zero_right" (formula "6") (term "0,0,0,1,0,0,0,1"))
                                 (rule "qeq_literals" (formula "6") (term "0,0,1,0,0,0,1"))
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "0,0,0,1,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor0" (formula "6") (term "0,0,1,0,0,0,1"))
                                 (rule "add_literals" (formula "6") (term "1,0,0,1,0,0,0,1"))
                                 (rule "times_zero_1" (formula "6") (term "0,0,1,0,0,0,1"))
                                 (rule "leq_literals" (formula "6") (term "0,1,0,0,0,1"))
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "elimGcdGeq" (formula "5") (term "1,0,0,1") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=n") (inst "elimGcdRightDiv=l_0"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0,1,0,0,1"))
                                 (rule "mul_literals" (formula "5") (term "0,0,0,0,0,1,0,1,0,0,1"))
                                 (rule "sub_literals" (formula "5") (term "0,0,0,0,0,0,0,1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,1,0,0,1"))
                                 (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,0,0,1,0,0,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,1,0,1,0,0,1"))
                                 (rule "add_literals" (formula "5") (term "1,1,0,1,0,1,0,0,1"))
                                 (rule "times_zero_1" (formula "5") (term "1,0,1,0,1,0,0,1"))
                                 (rule "add_zero_right" (formula "5") (term "0,1,0,1,0,0,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0,0,1,0,0,1"))
                                 (rule "add_literals" (formula "5") (term "1,1,0,0,0,1,0,0,1"))
                                 (rule "times_zero_1" (formula "5") (term "1,0,0,0,1,0,0,1"))
                                 (rule "add_zero_right" (formula "5") (term "0,0,0,1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "0,0,1,0,1,0,0,1"))
                                 (rule "polySimp_pullOutFactor0" (formula "5") (term "0,1,0,1,0,0,1"))
                                 (rule "add_literals" (formula "5") (term "1,0,1,0,1,0,0,1"))
                                 (rule "times_zero_1" (formula "5") (term "0,1,0,1,0,0,1"))
                                 (rule "leq_literals" (formula "5") (term "1,0,1,0,0,1"))
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,1,0,0,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0,1,0,0,1"))
                                 (rule "add_literals" (formula "5") (term "1,1,0,0,1,0,0,1"))
                                 (rule "times_zero_1" (formula "5") (term "1,0,0,1,0,0,1"))
                                 (rule "add_zero_right" (formula "5") (term "0,0,1,0,0,1"))
                                 (rule "qeq_literals" (formula "5") (term "0,1,0,0,1"))
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "newSym_eq" (formula "4") (inst "newSymDef=mul(i_0, Z(0(#)))") (inst "l=l_1"))
                                 (rule "times_zero_1" (formula "4") (term "1,1"))
                                 (rule "add_zero_right" (formula "4") (term "1"))
                                 (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "4"))
                                 (rule "eqSymm" (formula "5"))
                                 (rule "applyEqRigid" (formula "4") (term "0,0") (ifseqformula "5"))
                                 (rule "applyEqRigid" (formula "41") (term "0,2,0") (ifseqformula "5"))
                                 (rule "applyEqRigid" (formula "3") (term "1,1") (ifseqformula "5"))
                                 (rule "applyEq" (formula "6") (term "1,1,0,0,0,1") (ifseqformula "5"))
                                 (rule "applyEqRigid" (formula "7") (term "1,1,0,0,0,1,1") (ifseqformula "5"))
                                 (rule "applyEqRigid" (formula "6") (term "0,0") (ifseqformula "5"))
                                 (rule "inEqSimp_homoInEq1" (formula "6") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                 (rule "applyEqRigid" (formula "40") (term "0,2,0") (ifseqformula "5"))
                                 (rule "applyEqRigid" (formula "39") (term "1,1,0") (ifseqformula "5"))
                                 (rule "applyEq" (formula "38") (term "1,1,0") (ifseqformula "5"))
                                 (rule "applyEqRigid" (formula "1") (term "0,0,1") (ifseqformula "5"))
                                 (rule "inEqSimp_homoInEq0" (formula "1") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0,0,1"))
                                 (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "5"))
                                 (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                 (rule "applyEq" (formula "1") (term "0,1,1,1") (ifseqformula "5"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1"))
                                 (rule "polySimp_addComm0" (formula "1") (term "1,1"))
                                 (rule "applyEq" (formula "2") (term "0") (ifseqformula "5"))
                                 (rule "applyEqRigid" (formula "1") (term "0,1,0,2,1") (ifseqformula "5"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0,2,1"))
                                 (rule "polySimp_addComm0" (formula "1") (term "0,2,1"))
                                 (rule "applyEqRigid" (formula "38") (term "1,1,1") (ifseqformula "5"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0"))
                                 (rule "mul_literals" (formula "6") (term "0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,1"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                 (rule "mul_literals" (formula "7") (term "0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0"))
                                 (rule "elimGcdGeq_antec" (formula "2") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcdRightDiv=Z(0(#))"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                 (rule "add_zero_right" (formula "2") (term "0,0,0,1,0"))
                                 (rule "leq_literals" (formula "2") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "2") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                 (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "2") (term "0,0"))
                                 (rule "leq_literals" (formula "2") (term "0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "elimGcdLeq" (formula "6") (term "0") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_1)"))
                                 (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "6") (term "0,0,0,0,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,0"))
                                 (rule "sub_literals" (formula "6") (term "0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,1,0,0"))
                                 (rule "add_literals" (formula "6") (term "1,1,0,1,0,0"))
                                 (rule "times_zero_1" (formula "6") (term "1,0,1,0,0"))
                                 (rule "add_zero_right" (formula "6") (term "0,1,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "6") (term "1,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "6") (term "1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "6") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "6") (term "0,0,1,0,0"))
                                 (rule "mul_literals" (formula "6") (term "0,0,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "6") (term "0,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "6") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "6") (term "0,0,0,1,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,1,0,0"))
                                 (rule "add_literals" (formula "6") (term "1,1,0,1,0,0"))
                                 (rule "times_zero_1" (formula "6") (term "1,0,1,0,0"))
                                 (rule "add_zero_right" (formula "6") (term "0,1,0,0"))
                                 (rule "qeq_literals" (formula "6") (term "1,0,0"))
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "6") (term "0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "6") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "6") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "6") (term "0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "6") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0" (formula "6") (term "0,0,0"))
                                 (rule "add_literals" (formula "6") (term "1,0,0,0"))
                                 (rule "times_zero_1" (formula "6") (term "0,0,0"))
                                 (rule "leq_literals" (formula "6") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "elimGcdLeq" (formula "7") (term "0,0,0,1,1") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=m") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_1)"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0,0,0,0,1,1"))
                                 (rule "mul_literals" (formula "7") (term "0,0,0,0,0,1,0,0,0,0,1,1"))
                                 (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0,0,0,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,0,0,0,1,1"))
                                 (rule "sub_literals" (formula "7") (term "0,0,0,0,0,0,0,0,0,0,1,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,1,0,0,0,0,1,1"))
                                 (rule "add_literals" (formula "7") (term "1,1,0,1,0,0,0,0,1,1"))
                                 (rule "times_zero_1" (formula "7") (term "1,0,1,0,0,0,0,1,1"))
                                 (rule "add_zero_right" (formula "7") (term "0,1,0,0,0,0,1,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0,0,0,0,0,1,1"))
                                 (rule "add_literals" (formula "7") (term "1,1,0,0,0,0,0,0,1,1"))
                                 (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0,0,1,1"))
                                 (rule "add_zero_right" (formula "7") (term "0,0,0,0,0,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "7") (term "0,0,1,0,0,0,0,1,1"))
                                 (rule "mul_literals" (formula "7") (term "0,0,0,1,0,0,0,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0,0,0,1,1"))
                                 (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "7") (term "0,1,0,0,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "7") (term "0,0,1,0,0,0,0,1,1"))
                                 (rule "add_literals" (formula "7") (term "0,0,0,1,0,0,0,0,1,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,1,0,0,0,0,1,1"))
                                 (rule "add_literals" (formula "7") (term "1,1,0,1,0,0,0,0,1,1"))
                                 (rule "times_zero_1" (formula "7") (term "1,0,1,0,0,0,0,1,1"))
                                 (rule "add_zero_right" (formula "7") (term "0,1,0,0,0,0,1,1"))
                                 (rule "qeq_literals" (formula "7") (term "1,0,0,0,0,1,1"))
                                  (builtin "One Step Simplification" (formula "7"))
                                 (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0,0,1,1"))
                                 (rule "add_literals" (formula "7") (term "0,0,0,0,0,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0,1,1"))
                                 (rule "polySimp_addComm1" (formula "7") (term "0,0,0,0,0,0,1,1"))
                                 (rule "add_literals" (formula "7") (term "0,0,0,0,0,0,0,1,1"))
                                 (rule "add_zero_left" (formula "7") (term "0,0,0,0,0,0,1,1"))
                                 (rule "polySimp_pullOutFactor0" (formula "7") (term "0,0,0,0,0,1,1"))
                                 (rule "add_literals" (formula "7") (term "1,0,0,0,0,0,1,1"))
                                 (rule "times_zero_1" (formula "7") (term "0,0,0,0,0,1,1"))
                                 (rule "leq_literals" (formula "7") (term "0,0,0,0,1,1"))
                                  (builtin "One Step Simplification" (formula "7"))
                                 (rule "elimGcdGeq" (formula "1") (term "0,1") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=add(Z(1(#)), l_1)"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0,1"))
                                 (rule "mul_literals" (formula "1") (term "0,0,0,0,0,1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,0,1"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,0,0,0,1"))
                                 (rule "sub_literals" (formula "1") (term "0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,1,0,0,1"))
                                 (rule "add_literals" (formula "1") (term "1,1,0,1,0,0,1"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,1,0,0,1"))
                                 (rule "add_zero_right" (formula "1") (term "0,1,0,0,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,0,1"))
                                 (rule "add_literals" (formula "1") (term "1,1,0,0,0,0,1"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,1"))
                                 (rule "add_zero_right" (formula "1") (term "0,0,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "0,0,1,0,0,1"))
                                 (rule "mul_literals" (formula "1") (term "0,0,0,1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0,0,1"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,1,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0,0,1,0,0,1"))
                                 (rule "add_literals" (formula "1") (term "0,0,0,1,0,0,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,1,0,0,1"))
                                 (rule "add_literals" (formula "1") (term "1,1,0,1,0,0,1"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,1,0,0,1"))
                                 (rule "add_zero_right" (formula "1") (term "0,1,0,0,1"))
                                 (rule "leq_literals" (formula "1") (term "1,0,0,1"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,1"))
                                 (rule "add_literals" (formula "1") (term "0,0,0,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0,1"))
                                 (rule "add_literals" (formula "1") (term "0,0,0,0,0,1"))
                                 (rule "add_zero_left" (formula "1") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor0" (formula "1") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "1") (term "1,0,0,0,1"))
                                 (rule "times_zero_1" (formula "1") (term "0,0,0,1"))
                                 (rule "qeq_literals" (formula "1") (term "0,0,1"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "10"))
                                 (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                                 (rule "mul_literals" (formula "16") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0"))
                                 (rule "add_literals" (formula "16") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                 (rule "polySimp_elimOne" (formula "16") (term "0"))
                                 (rule "elimGcdGeq" (formula "7") (term "0") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=add(Z(1(#)), l_1)"))
                                 (rule "mul_literals" (formula "7") (term "0,0,0,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0,0"))
                                 (rule "sub_literals" (formula "7") (term "0,0,0,0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,1,0,0"))
                                 (rule "add_literals" (formula "7") (term "1,1,0,1,0,0"))
                                 (rule "times_zero_1" (formula "7") (term "1,0,1,0,0"))
                                 (rule "add_zero_right" (formula "7") (term "0,1,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "7") (term "1,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "7") (term "1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "7") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "7") (term "0,0,1,0,0"))
                                 (rule "mul_literals" (formula "7") (term "0,0,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "7") (term "0,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "7") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "7") (term "0,0,0,1,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,1,0,0"))
                                 (rule "add_literals" (formula "7") (term "1,1,0,1,0,0"))
                                 (rule "times_zero_1" (formula "7") (term "1,0,1,0,0"))
                                 (rule "add_zero_right" (formula "7") (term "0,1,0,0"))
                                 (rule "leq_literals" (formula "7") (term "1,0,0"))
                                  (builtin "One Step Simplification" (formula "7"))
                                 (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "7") (term "0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "7") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "7") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "7") (term "0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "7") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0" (formula "7") (term "0,0,0"))
                                 (rule "add_literals" (formula "7") (term "1,0,0,0"))
                                 (rule "times_zero_1" (formula "7") (term "0,0,0"))
                                 (rule "qeq_literals" (formula "7") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "7"))
                                 (rule "elimGcdLeq" (formula "6") (term "0,0,0,1") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=n") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_1)"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,0,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0,0,0,0,1"))
                                 (rule "mul_literals" (formula "6") (term "0,0,0,0,0,1,0,0,0,0,1"))
                                 (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "sub_literals" (formula "6") (term "0,0,0,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,1,0,0,0,0,1"))
                                 (rule "add_literals" (formula "6") (term "1,1,0,1,0,0,0,0,1"))
                                 (rule "times_zero_1" (formula "6") (term "1,0,1,0,0,0,0,1"))
                                 (rule "add_zero_right" (formula "6") (term "0,1,0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0,0,0,0,0,1"))
                                 (rule "add_literals" (formula "6") (term "1,1,0,0,0,0,0,0,1"))
                                 (rule "times_zero_1" (formula "6") (term "1,0,0,0,0,0,0,1"))
                                 (rule "add_zero_right" (formula "6") (term "0,0,0,0,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "6") (term "0,0,1,0,0,0,0,1"))
                                 (rule "mul_literals" (formula "6") (term "0,0,0,1,0,0,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,0,0,0,0,1"))
                                 (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "6") (term "0,1,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "6") (term "0,0,1,0,0,0,0,1"))
                                 (rule "add_literals" (formula "6") (term "0,0,0,1,0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,1,0,0,0,0,1"))
                                 (rule "add_literals" (formula "6") (term "1,1,0,1,0,0,0,0,1"))
                                 (rule "times_zero_1" (formula "6") (term "1,0,1,0,0,0,0,1"))
                                 (rule "add_zero_right" (formula "6") (term "0,1,0,0,0,0,1"))
                                 (rule "qeq_literals" (formula "6") (term "1,0,0,0,0,1"))
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0,0,0,1"))
                                 (rule "add_literals" (formula "6") (term "0,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "6") (term "0,0,0,0,0,0,1"))
                                 (rule "add_literals" (formula "6") (term "0,0,0,0,0,0,0,1"))
                                 (rule "add_zero_left" (formula "6") (term "0,0,0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor0" (formula "6") (term "0,0,0,0,0,1"))
                                 (rule "add_literals" (formula "6") (term "1,0,0,0,0,0,1"))
                                 (rule "times_zero_1" (formula "6") (term "0,0,0,0,0,1"))
                                 (rule "leq_literals" (formula "6") (term "0,0,0,0,1"))
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "10"))
                                 (rule "polySimp_rightDist" (formula "36") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0"))
                                 (rule "mul_literals" (formula "36") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "36") (term "0"))
                                 (rule "add_literals" (formula "36") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "36"))
                                 (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                 (rule "elimGcdLeq_antec" (formula "36") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(1(1(9(0(7(8(6(3(5(#))))))))))"))
                                 (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0,1,0"))
                                 (rule "leq_literals" (formula "36") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "36"))
                                 (rule "mul_literals" (formula "36") (term "1,0,0,0,0,0"))
                                 (rule "neg_literal" (formula "36") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "36") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "36") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,0"))
                                 (rule "add_literals" (formula "36") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "36") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "36") (term "0,0"))
                                 (rule "qeq_literals" (formula "36") (term "0"))
                                  (builtin "One Step Simplification" (formula "36"))
                                 (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "10"))
                                 (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                 (rule "mul_literals" (formula "3") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "add_literals" (formula "3") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                 (rule "elimGcdLeq_antec" (formula "3") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcdRightDiv=Z(1(1(9(0(7(8(6(3(5(#))))))))))"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                                 (rule "neg_literal" (formula "3") (term "0,0,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0,0,1,0"))
                                 (rule "leq_literals" (formula "3") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "mul_literals" (formula "3") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "3") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                 (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "3") (term "0,0"))
                                 (rule "qeq_literals" (formula "3") (term "0"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "nnf_imp2or" (formula "12") (term "1,0"))
                                 (rule "nnf_imp2or" (formula "13") (term "1,0,1,0"))
                                 (rule "nnf_imp2or" (formula "23") (term "1,0"))
                                 (rule "nnf_imp2or" (formula "24") (term "0"))
                                 (rule "commute_and" (formula "12") (term "0,0"))
                                 (rule "commute_and" (formula "13") (term "0,0"))
                                 (rule "jdiv_axiom" (formula "15") (term "1,0"))
                                 (rule "eqSymm" (formula "15"))
                                 (rule "inEqSimp_subsumption1" (formula "15") (term "0,0") (ifseqformula "10"))
                                 (rule "leq_literals" (formula "15") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "15"))
                                 (rule "eqSymm" (formula "15"))
                                 (rule "applyEqRigid" (formula "24") (term "1,1,0,0,0") (ifseqformula "15"))
                                 (rule "applyEq" (formula "22") (term "0") (ifseqformula "15"))
                                 (rule "applyEqRigid" (formula "16") (term "1,0") (ifseqformula "15"))
                                 (rule "applyEqRigid" (formula "12") (term "1,1,1,0,0") (ifseqformula "15"))
                                 (rule "applyEq" (formula "13") (term "1,1,0,0,0,1,0") (ifseqformula "15"))
                                 (rule "applyEqRigid" (formula "25") (term "1,1,0,0,0,0") (ifseqformula "15"))
                                 (rule "applyEq" (formula "13") (term "1,1,1,0,0") (ifseqformula "15"))
                                 (rule "arrayLengthIsAnInt" (formula "20") (term "0"))
                                  (builtin "One Step Simplification" (formula "20"))
                                 (rule "true_left" (formula "20"))
                                 (rule "arrayLengthNotNegative" (formula "20") (term "0"))
                                 (rule "applyEq" (formula "20") (term "0") (ifseqformula "21"))
                                 (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "10"))
                                 (rule "leq_literals" (formula "20") (term "0"))
                                  (builtin "One Step Simplification" (formula "20"))
                                 (rule "true_left" (formula "20"))
                                 (rule "nnf_imp2or" (formula "8") (term "0,1,1"))
                                 (rule "nnf_imp2or" (formula "8") (term "0,0,1"))
                                 (rule "nnf_imp2or" (formula "7") (term "0,1"))
                                 (rule "nnf_imp2or" (formula "24") (term "0"))
                                 (rule "nnf_imp2or" (formula "25") (term "1,0"))
                                 (rule "nnf_imp2or" (formula "12") (term "0"))
                                 (rule "nnf_imp2or" (formula "13") (term "0"))
                                 (rule "nnf_notAnd" (formula "25") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "25") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "25") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "25") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                                 (rule "mul_literals" (formula "25") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "25") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "25") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "25") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "25") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "24") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "24") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "24") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "24") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "24") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "24") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "24") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "24") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                                 (rule "mul_literals" (formula "24") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "12") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "12") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                 (rule "mul_literals" (formula "12") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "13") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "13") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                 (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "7") (term "0,0,1"))
                                 (rule "inEqSimp_notLeq" (formula "7") (term "0,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0,1"))
                                 (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0,1"))
                                 (rule "add_literals" (formula "7") (term "0,0,0,0,0,0,1"))
                                 (rule "add_zero_left" (formula "7") (term "0,0,0,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "0,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "7") (term "1,0,0,0,1"))
                                 (rule "inEqSimp_notGeq" (formula "7") (term "1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0,1"))
                                 (rule "mul_literals" (formula "7") (term "0,1,1,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0,1"))
                                 (rule "nnf_notAnd" (formula "24") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "24"))
                                 (rule "inEqSimp_notLeq" (formula "24") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,1,0"))
                                 (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,1,0"))
                                 (rule "add_literals" (formula "24") (term "0,0,0,1,0,1,0"))
                                 (rule "add_zero_left" (formula "24") (term "0,0,1,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,1,0"))
                                 (rule "nnf_notAnd" (formula "25") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "25"))
                                 (rule "inEqSimp_notGeq" (formula "25") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,1,0,1,0"))
                                 (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,1,0"))
                                 (rule "add_literals" (formula "25") (term "0,0,0,1,0,1,0"))
                                 (rule "add_zero_left" (formula "25") (term "0,0,1,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,1,0"))
                                 (rule "nnf_imp2or" (formula "13") (term "0,1,0"))
                                 (rule "nnf_notAnd" (formula "8") (term "0,0,1,1"))
                                 (rule "inEqSimp_notGeq" (formula "8") (term "1,0,0,1,1"))
                                 (rule "times_zero_1" (formula "8") (term "1,0,0,1,0,0,1,1"))
                                 (rule "add_zero_right" (formula "8") (term "0,0,1,0,0,1,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,1,1"))
                                 (rule "mul_literals" (formula "8") (term "1,1,0,0,1,1"))
                                 (rule "inEqSimp_notLeq" (formula "8") (term "0,0,0,1,1"))
                                 (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0,1,1"))
                                 (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0,1,1"))
                                 (rule "add_literals" (formula "8") (term "0,0,0,0,0,0,1,1"))
                                 (rule "add_zero_left" (formula "8") (term "0,0,0,0,0,1,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "0,0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,1,1"))
                                 (rule "polySimp_elimOne" (formula "8") (term "1,0,0,0,1,1"))
                                 (rule "nnf_notAnd" (formula "8") (term "0,0,0,1"))
                                 (rule "inEqSimp_notGeq" (formula "8") (term "1,0,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0,0,1"))
                                 (rule "mul_literals" (formula "8") (term "0,1,1,0,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0,0,1"))
                                 (rule "inEqSimp_notLeq" (formula "8") (term "0,0,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0,0,1"))
                                 (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0,0,1"))
                                 (rule "add_literals" (formula "8") (term "0,0,0,0,0,0,0,1"))
                                 (rule "add_zero_left" (formula "8") (term "0,0,0,0,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "0,0,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "8") (term "1,0,0,0,0,1"))
                                 (rule "jdiv_axiom" (formula "36") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "36") (term "0,0,2,1"))
                                 (rule "eqSymm" (formula "36"))
                                 (rule "applyEqRigid" (formula "36") (term "1") (ifseqformula "37"))
                                 (rule "inEqSimp_subsumption6" (formula "36") (term "0,0") (ifseqformula "41"))
                                 (rule "times_zero_1" (formula "36") (term "1,1,0,0,0"))
                                 (rule "greater_literals" (formula "36") (term "0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "36"))
                                 (rule "leq_literals" (formula "36") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "36"))
                                 (rule "polyDiv_pullOut" (formula "36") (term "0") (inst "polyDivCoeff=l_0"))
                                 (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0,2,0"))
                                 (rule "equal_literals" (formula "36") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "36"))
                                 (rule "polySimp_pullOutFactor0" (formula "36") (term "0,0,0"))
                                 (rule "add_literals" (formula "36") (term "1,0,0,0"))
                                 (rule "times_zero_1" (formula "36") (term "0,0,0"))
                                 (rule "div_literals" (formula "36") (term "0,0"))
                                 (rule "add_zero_left" (formula "36") (term "0"))
                                  (builtin "One Step Simplification" (formula "36"))
                                 (rule "true_left" (formula "36"))
                                 (rule "nnf_imp2or" (formula "24") (term "0,1,1,0"))
                                 (rule "nnf_imp2or" (formula "25") (term "0,1,1,0"))
                                 (rule "nnf_notAnd" (formula "13") (term "0,0,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "13") (term "0,1,1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,1,0"))
                                 (rule "inEqSimp_notLeq" (formula "13") (term "0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0,1,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,0,0,0,1,0"))
                                 (rule "add_zero_left" (formula "13") (term "0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "13") (term "1,0,0,0,1,0"))
                                 (rule "nnf_notAnd" (formula "13") (term "0,1,0,1,0"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "jdiv_axiom" (formula "5") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "0,0,2,1"))
                                 (rule "eqSymm" (formula "5"))
                                 (rule "applyEqRigid" (formula "5") (term "1") (ifseqformula "6"))
                                 (rule "inEqSimp_subsumption6" (formula "5") (term "0,0") (ifseqformula "2"))
                                 (rule "times_zero_1" (formula "5") (term "1,1,0,0,0"))
                                 (rule "greater_literals" (formula "5") (term "0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "leq_literals" (formula "5") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "polyDiv_pullOut" (formula "5") (term "0") (inst "polyDivCoeff=l_1"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,2,0"))
                                 (rule "equal_literals" (formula "5") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "polySimp_homoEq" (formula "5"))
                                 (rule "polySimp_pullOutFactor0" (formula "5") (term "0,0,0,1,0"))
                                 (rule "add_literals" (formula "5") (term "1,0,0,0,1,0"))
                                 (rule "times_zero_1" (formula "5") (term "0,0,0,1,0"))
                                 (rule "div_literals" (formula "5") (term "0,0,1,0"))
                                 (rule "add_zero_left" (formula "5") (term "0,1,0"))
                                 (rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
                                 (rule "add_literals" (formula "5") (term "1,0"))
                                 (rule "times_zero_1" (formula "5") (term "0"))
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "true_left" (formula "5"))
                                 (rule "nnf_notAnd" (formula "24") (term "0,0,1,1,0"))
                                 (rule "inEqSimp_notLeq" (formula "24") (term "0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "24") (term "0,0,0,0,0,0,1,1,0"))
                                 (rule "add_zero_left" (formula "24") (term "0,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "24") (term "1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "24") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "24") (term "0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1,1,0"))
                                 (rule "nnf_notAnd" (formula "25") (term "0,0,1,1,0"))
                                 (rule "cut_direct" (formula "43") (term "0"))
                                 (branch "CUT: pow(2, i_2_0) <= 2 + l_1 * 2 TRUE"
                                     (builtin "One Step Simplification" (formula "44"))
                                    (rule "applyEq" (formula "42") (term "0,1") (ifseqformula "44"))
                                    (rule "polySimp_homoEq" (formula "42") (term "1"))
                                    (rule "times_zero_2" (formula "42") (term "1,0,1"))
                                    (rule "add_zero_right" (formula "42") (term "0,1"))
                                    (rule "applyEq" (formula "1") (term "0,0,0") (ifseqformula "44"))
                                    (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0"))
                                    (rule "times_zero_2" (formula "1") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0,0"))
                                    (rule "applyEq" (formula "1") (term "0,1,1,0") (ifseqformula "44"))
                                    (rule "times_zero_2" (formula "1") (term "1,1,0"))
                                    (rule "add_zero_right" (formula "1") (term "1,0"))
                                    (rule "applyEq" (formula "1") (term "0,1,0,2,0") (ifseqformula "44"))
                                    (rule "times_zero_2" (formula "1") (term "1,0,2,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,2,0"))
                                    (rule "polySimp_sepPosMonomial" (formula "42") (term "1"))
                                    (rule "mul_literals" (formula "42") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "inEqSimp_contradInEq0" (formula "42") (term "0") (ifseqformula "43"))
                                    (rule "inEqSimp_homoInEq1" (formula "42") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "42") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "42") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "42") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "42") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "42") (term "0,0,0"))
                                    (rule "add_literals" (formula "42") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "42") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "42") (term "0,0,0"))
                                    (rule "leq_literals" (formula "42") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "42"))
                                    (rule "true_left" (formula "42"))
                                    (rule "elimGcdGeq" (formula "1") (term "0,0") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(1(#))"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,0,1,0,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,0,0,0,0"))
                                    (rule "sub_literals" (formula "1") (term "0,0,0,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,0,0,0,1,0,0,0"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0,1,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "1") (term "0,0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,1,0,0,0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0,1,0,0,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,1,0,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,1,0,0,0"))
                                    (rule "leq_literals" (formula "1") (term "1,0,0,0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "polySimp_pullOutFactor0" (formula "1") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "1") (term "1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "1") (term "0,0,0,0"))
                                    (rule "qeq_literals" (formula "1") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "inEqSimp_commuteGeq" (formula "1"))
                                    (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "42"))
                                    (rule "mul_literals" (formula "10") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                    (rule "add_literals" (formula "10") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                    (rule "mul_literals" (formula "10") (term "1"))
                                    (rule "elimGcdGeq_antec" (formula "10") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcdRightDiv=Z(3(#))"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0,1,0"))
                                    (rule "leq_literals" (formula "10") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "10"))
                                    (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "10") (term "0,0,0,0"))
                                    (rule "add_zero_right" (formula "10") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                                    (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "10") (term "0,0"))
                                    (rule "leq_literals" (formula "10") (term "0"))
                                     (builtin "One Step Simplification" (formula "10"))
                                    (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "10"))
                                    (rule "leq_literals" (formula "2") (term "0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "42"))
                                    (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                                    (rule "mul_literals" (formula "19") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "19") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                    (rule "add_literals" (formula "19") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                    (rule "polySimp_elimOne" (formula "19") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "43"))
                                    (rule "polySimp_rightDist" (formula "40") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0"))
                                    (rule "mul_literals" (formula "40") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "40") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "40") (term "0,0"))
                                    (rule "add_literals" (formula "40") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "40"))
                                    (rule "polySimp_mulLiterals" (formula "40") (term "0"))
                                    (rule "elimGcdLeq_antec" (formula "40") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=add(Z(0(#)), l_1)"))
                                    (rule "add_zero_left" (formula "40") (term "1,1"))
                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,0,1,0"))
                                    (rule "add_zero_left" (formula "40") (term "1,1,0,0,0,0,1,0"))
                                    (rule "leq_literals" (formula "40") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "40"))
                                    (rule "neg_literal" (formula "40") (term "0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "40") (term "0,0"))
                                    (rule "add_literals" (formula "40") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "40") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "40") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "40") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "40") (term "0,0,0"))
                                    (rule "add_literals" (formula "40") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "40") (term "0,0"))
                                    (rule "add_literals" (formula "40") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "40") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "40") (term "0,0"))
                                    (rule "qeq_literals" (formula "40") (term "0"))
                                     (builtin "One Step Simplification" (formula "40"))
                                    (rule "inEqSimp_contradInEq0" (formula "7") (term "0") (ifseqformula "40"))
                                    (rule "inEqSimp_homoInEq1" (formula "7") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0"))
                                    (rule "add_literals" (formula "7") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "7") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "7") (term "0,0,0"))
                                    (rule "leq_literals" (formula "7") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "7"))
                                    (rule "true_left" (formula "7"))
                                    (rule "inEqSimp_contradInEq0" (formula "1") (term "0,0") (ifseqformula "39"))
                                    (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0,0,0"))
                                    (rule "leq_literals" (formula "1") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "inEqSimp_commuteLeq" (formula "1"))
                                    (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "18"))
                                    (rule "mul_literals" (formula "16") (term "0,0"))
                                    (rule "add_zero_left" (formula "16") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                    (rule "mul_literals" (formula "16") (term "1"))
                                    (rule "inEqSimp_subsumption6" (formula "16") (ifseqformula "8"))
                                    (rule "greater_literals" (formula "16") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "16"))
                                    (rule "mul_literals" (formula "16") (term "1,0"))
                                    (rule "leq_literals" (formula "16") (term "0"))
                                     (builtin "One Step Simplification" (formula "16"))
                                    (rule "true_left" (formula "16"))
                                    (rule "inEqSimp_exactShadow3" (formula "41") (ifseqformula "39"))
                                    (rule "times_zero_1" (formula "41") (term "0,0"))
                                    (rule "add_zero_left" (formula "41") (term "0"))
                                    (rule "inEqSimp_subsumption1" (formula "41") (ifseqformula "8"))
                                    (rule "leq_literals" (formula "41") (term "0"))
                                     (builtin "One Step Simplification" (formula "41"))
                                    (rule "true_left" (formula "41"))
                                    (rule "nnf_notOr" (formula "25") (term "1,0,0,1,1,0"))
                                    (rule "inEqSimp_notLeq" (formula "25") (term "0,1,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "25") (term "0,1,0,0,0,1,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,1,0,0,1,1,0"))
                                    (rule "add_literals" (formula "25") (term "0,0,0,0,1,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "25") (term "0,0,0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0,1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "25") (term "1,0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "25") (term "1,1,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "25") (term "1,0,0,1,1,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "25") (term "0,0,1,1,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "25") (term "1,1,1,0,0,1,1,0"))
                                    (rule "nnf_notAnd" (formula "25") (term "0,0,0,1,1,0"))
                                    (rule "commute_or_2" (formula "11") (term "0"))
                                    (rule "commute_or" (formula "24") (term "0,0"))
                                    (rule "commute_or" (formula "25") (term "0,0"))
                                    (rule "commute_or" (formula "6") (term "0,0,1"))
                                    (rule "nnf_notAnd" (formula "25") (term "0,0,0,0,1,1,0"))
                                    (rule "nnf_notOr" (formula "25") (term "1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_notLeq" (formula "25") (term "0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "25") (term "0,1,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,1,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "25") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "25") (term "0,0,0,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "25") (term "1,0,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "25") (term "1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,1,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "25") (term "0,1,1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "25") (term "1,1,1,1,0,0,0,1,1,0"))
                                    (rule "div_axiom" (formula "14") (term "1") (inst "quotient=quotient_0"))
                                    (rule "qeq_literals" (formula "14") (term "0,1,1"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "equal_literals" (formula "14") (term "0"))
                                     (builtin "One Step Simplification" (formula "14"))
                                    (rule "mul_literals" (formula "14") (term "1,1,1"))
                                    (rule "andLeft" (formula "14"))
                                    (rule "andLeft" (formula "14"))
                                    (rule "polySimp_addComm1" (formula "16") (term "1"))
                                    (rule "add_literals" (formula "16") (term "0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "15"))
                                    (rule "inEqSimp_homoInEq1" (formula "16"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "16") (term "0"))
                                    (rule "applyEq" (formula "12") (term "1,0,0,0,1,0") (ifseqformula "14"))
                                    (rule "applyEqRigid" (formula "12") (term "1,1,0,0") (ifseqformula "14"))
                                    (rule "applyEqRigid" (formula "18") (term "1,0") (ifseqformula "14"))
                                    (rule "applyEqRigid" (formula "25") (term "0") (ifseqformula "14"))
                                    (rule "inEqSimp_homoInEq1" (formula "25"))
                                    (rule "polySimp_addComm1" (formula "25") (term "0"))
                                    (rule "applyEq" (formula "27") (term "1,1,0,0") (ifseqformula "14"))
                                    (rule "applyEqRigid" (formula "11") (term "1,1,0") (ifseqformula "14"))
                                    (rule "applyEq" (formula "28") (term "1,1,0,0") (ifseqformula "14"))
                                    (rule "applyEq" (formula "17") (term "1") (ifseqformula "14"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "16"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "1"))
                                    (rule "polySimp_rightDist" (formula "16") (term "1"))
                                    (rule "mul_literals" (formula "16") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "25"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1"))
                                    (rule "mul_literals" (formula "25") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "16"))
                                    (rule "polySimp_rightDist" (formula "43") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0"))
                                    (rule "mul_literals" (formula "43") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "43") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "43") (term "0,0"))
                                    (rule "add_literals" (formula "43") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "43") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "43"))
                                    (rule "polySimp_mulLiterals" (formula "43") (term "0"))
                                    (rule "elimGcdLeq_antec" (formula "43") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=quotient_0"))
                                    (rule "neg_literal" (formula "43") (term "0,0,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "43") (term "1,0,1,0"))
                                    (rule "leq_literals" (formula "43") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "43"))
                                    (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "43") (term "0,0"))
                                    (rule "add_literals" (formula "43") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "43") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "43") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "43") (term "0,0"))
                                    (rule "add_literals" (formula "43") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "43") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "43") (term "0,0"))
                                    (rule "qeq_literals" (formula "43") (term "0"))
                                     (builtin "One Step Simplification" (formula "43"))
                                    (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "16"))
                                    (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                                    (rule "mul_literals" (formula "22") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "22") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                                    (rule "add_literals" (formula "22") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "22") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                    (rule "polySimp_elimOne" (formula "22") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "26"))
                                    (rule "times_zero_1" (formula "25") (term "0,0"))
                                    (rule "add_zero_left" (formula "25") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                                    (rule "mul_literals" (formula "25") (term "1"))
                                    (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "16"))
                                    (rule "mul_literals" (formula "9") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                    (rule "add_literals" (formula "9") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                    (rule "mul_literals" (formula "9") (term "1"))
                                    (rule "elimGcdGeq_antec" (formula "9") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(4(#))"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0"))
                                    (rule "leq_literals" (formula "9") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "9") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "9") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                                    (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "9") (term "0,0"))
                                    (rule "leq_literals" (formula "9") (term "0"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "9"))
                                    (rule "leq_literals" (formula "26") (term "0"))
                                     (builtin "One Step Simplification" (formula "26"))
                                    (rule "true_left" (formula "26"))
                                    (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "17"))
                                    (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                    (rule "mul_literals" (formula "3") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                    (rule "add_literals" (formula "3") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "3") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                    (rule "elimGcdLeq_antec" (formula "3") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcdRightDiv=quotient_0"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                                    (rule "neg_literal" (formula "3") (term "0,0,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,1,0"))
                                    (rule "leq_literals" (formula "3") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                    (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "3") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                    (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "3") (term "0,0"))
                                    (rule "qeq_literals" (formula "3") (term "0"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "12"))
                                    (rule "polySimp_mulAssoc" (formula "17") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "17") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                    (rule "elimGcdLeq_antec" (formula "17") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(2(1(9(0(7(8(6(3(5(#))))))))))"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,0,1,0"))
                                    (rule "neg_literal" (formula "17") (term "0,0,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0"))
                                    (rule "leq_literals" (formula "17") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "17"))
                                    (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "17") (term "0,0,0,0"))
                                    (rule "add_zero_right" (formula "17") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0"))
                                    (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "17") (term "0,0"))
                                    (rule "qeq_literals" (formula "17") (term "0"))
                                     (builtin "One Step Simplification" (formula "17"))
                                    (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "51"))
                                    (rule "polySimp_mulAssoc" (formula "18") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                    (rule "polySimp_addComm0" (formula "18") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1"))
                                    (rule "mul_literals" (formula "18") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
                                    (rule "elimGcdGeq_antec" (formula "18") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), quotient_0)"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,0"))
                                    (rule "leq_literals" (formula "18") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
                                    (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "18") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
                                    (rule "add_literals" (formula "18") (term "0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0,0,0"))
                                    (rule "add_literals" (formula "18") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
                                    (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "18") (term "0,0"))
                                    (rule "leq_literals" (formula "18") (term "0"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "inEqSimp_exactShadow3" (formula "50") (ifseqformula "48"))
                                    (rule "times_zero_1" (formula "50") (term "0,0"))
                                    (rule "add_zero_left" (formula "50") (term "0"))
                                    (rule "inEqSimp_subsumption1" (formula "50") (ifseqformula "10"))
                                    (rule "leq_literals" (formula "50") (term "0"))
                                     (builtin "One Step Simplification" (formula "50"))
                                    (rule "true_left" (formula "50"))
                                    (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "3"))
                                    (rule "mul_literals" (formula "9") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                    (rule "mul_literals" (formula "9") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "11"))
                                    (rule "leq_literals" (formula "9") (term "0"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "true_left" (formula "9"))
                                    (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "26"))
                                    (rule "times_zero_1" (formula "23") (term "0,0"))
                                    (rule "add_zero_left" (formula "23") (term "0"))
                                    (rule "inEqSimp_subsumption6" (formula "23") (ifseqformula "10"))
                                    (rule "greater_literals" (formula "23") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "mul_literals" (formula "23") (term "1,0"))
                                    (rule "leq_literals" (formula "23") (term "0"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "true_left" (formula "23"))
                                    (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "2"))
                                    (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                                    (rule "mul_literals" (formula "18") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0"))
                                    (rule "add_literals" (formula "18") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                    (rule "polySimp_elimOne" (formula "18") (term "0"))
                                    (rule "nnf_notOr" (formula "33") (term "0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_notLeq" (formula "33") (term "0,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "33") (term "0,1,0,0,0,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "33") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "33") (term "0,0,0,0,0,0,0,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "33") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "0,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "33") (term "1,0,0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "33") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "33") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0,0,0,0,1,1,0"))
                                    (rule "nnf_notOr" (formula "33") (term "1,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "33") (term "0,1,0,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "33") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "33") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,1,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "33") (term "1,0,1,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "33") (term "1,1,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,1,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,1,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "33") (term "1,1,1,0,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "33") (term "1,1,1,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,1,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "33") (term "0,1,1,1,0,0,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "33") (term "1,1,1,1,0,0,0,0,1,1,0"))
                                    (rule "cut_direct" (formula "7") (term "0"))
                                    (branch "CUT: l_0 <= -1 + l_1 TRUE"
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "inEqSimp_subsumption0" (formula "48") (ifseqformula "7"))
                                       (rule "inEqSimp_homoInEq0" (formula "48") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "48") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "48") (term "1,0,0"))
                                       (rule "mul_literals" (formula "48") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "48") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "48") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0"))
                                       (rule "add_literals" (formula "48") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "48") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "48") (term "0,0"))
                                       (rule "qeq_literals" (formula "48") (term "0"))
                                        (builtin "One Step Simplification" (formula "48"))
                                       (rule "true_left" (formula "48"))
                                       (rule "inEqSimp_exactShadow3" (formula "50") (ifseqformula "7"))
                                       (rule "times_zero_1" (formula "50") (term "0,0"))
                                       (rule "add_zero_left" (formula "50") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "50"))
                                       (rule "mul_literals" (formula "50") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "50") (ifseqformula "10"))
                                       (rule "leq_literals" (formula "50") (term "0"))
                                        (builtin "One Step Simplification" (formula "50"))
                                       (rule "true_left" (formula "50"))
                                       (rule "commute_or_2" (formula "33") (term "0,1,1,0"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "1,0") (ifseqformula "36"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "37"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "34") (term "0") (ifseqformula "38"))
                                       (rule "replace_known_left" (formula "34") (term "0") (ifseqformula "35"))
                                        (builtin "One Step Simplification" (formula "34"))
                                       (rule "true_left" (formula "34"))
                                       (rule "commute_or" (formula "16") (term "0,0"))
                                       (rule "shift_paren_or" (formula "17") (term "0,1,0"))
                                       (rule "commute_and" (formula "36") (term "1,0,0,1,1,0"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "38"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "ifthenelse_split" (formula "4") (term "0"))
                                       (branch "l_0 >= 1 TRUE"
                                          (rule "inEqSimp_homoInEq1" (formula "5"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "5") (term "0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                          (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "5") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "1"))
                                          (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "5"))
                                          (rule "andLeft" (formula "8"))
                                          (rule "inEqSimp_homoInEq1" (formula "8"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "8") (term "0"))
                                          (rule "add_literals" (formula "8") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "8") (term "1,0"))
                                          (rule "add_literals" (formula "8") (term "0"))
                                          (rule "leq_literals" (formula "8"))
                                          (rule "closeFalse" (formula "8"))
                                       )
                                       (branch "l_0 >= 1 FALSE"
                                          (rule "inEqSimp_geqRight" (formula "57"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_homoInEq1" (formula "5"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                          (rule "polySimp_mulAssoc" (formula "5") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                          (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0,0"))
                                          (rule "add_literals" (formula "5") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "5") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "5") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                          (rule "add_literals" (formula "5") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "5") (term "1,0"))
                                          (rule "add_zero_right" (formula "5") (term "0"))
                                          (rule "inEqSimp_invertInEq0" (formula "5"))
                                          (rule "times_zero_2" (formula "5") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                          (rule "inEqSimp_subsumption6" (formula "5") (ifseqformula "14"))
                                          (rule "greater_literals" (formula "5") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "mul_literals" (formula "5") (term "1,0"))
                                          (rule "leq_literals" (formula "5") (term "0"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "true_left" (formula "5"))
                                          (rule "inEqSimp_subsumption0" (formula "50") (ifseqformula "1"))
                                          (rule "leq_literals" (formula "50") (term "0"))
                                           (builtin "One Step Simplification" (formula "50"))
                                          (rule "true_left" (formula "50"))
                                          (rule "inEqSimp_antiSymm" (formula "52") (ifseqformula "1"))
                                          (rule "applyEq" (formula "10") (term "0") (ifseqformula "52"))
                                          (rule "inEqSimp_homoInEq0" (formula "10"))
                                          (rule "mul_literals" (formula "10") (term "1,0"))
                                          (rule "add_zero_right" (formula "10") (term "0"))
                                          (rule "applyEqRigid" (formula "53") (term "0") (ifseqformula "52"))
                                          (rule "qeq_literals" (formula "53"))
                                          (rule "true_left" (formula "53"))
                                          (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "52"))
                                          (rule "leq_literals" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "applyEq" (formula "50") (term "0,1,1") (ifseqformula "51"))
                                          (rule "times_zero_2" (formula "50") (term "1,1"))
                                          (rule "add_zero_right" (formula "50") (term "1"))
                                          (rule "applyEqRigid" (formula "47") (term "0,0,0") (ifseqformula "51"))
                                          (rule "times_zero_2" (formula "47") (term "0,0"))
                                          (rule "jdiv_axiom_inline" (formula "47") (term "0"))
                                          (rule "qeq_literals" (formula "47") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "47"))
                                          (rule "div_literals" (formula "47") (term "0"))
                                          (rule "eqSymm" (formula "47"))
                                          (rule "applyEq" (formula "48") (term "0") (ifseqformula "50"))
                                          (rule "inEqSimp_commuteLeq" (formula "48"))
                                          (rule "applyEq" (formula "10") (term "1,1,0,0,0") (ifseqformula "50"))
                                          (rule "add_zero_right" (formula "10") (term "1,0,0,0"))
                                          (rule "applyEq" (formula "47") (term "0,1") (ifseqformula "50"))
                                          (rule "times_zero_2" (formula "47") (term "1"))
                                          (rule "applyEq" (formula "46") (term "0,1") (ifseqformula "50"))
                                          (rule "times_zero_2" (formula "46") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                          (rule "mul_literals" (formula "9") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "12"))
                                          (rule "leq_literals" (formula "9") (term "0"))
                                           (builtin "One Step Simplification" (formula "9"))
                                          (rule "true_left" (formula "9"))
                                          (rule "inEqSimp_subsumption1" (formula "48") (ifseqformula "13"))
                                          (rule "leq_literals" (formula "48") (term "0"))
                                           (builtin "One Step Simplification" (formula "48"))
                                          (rule "true_left" (formula "48"))
                                          (rule "inEqSimp_subsumption1" (formula "47") (ifseqformula "12"))
                                          (rule "leq_literals" (formula "47") (term "0"))
                                           (builtin "One Step Simplification" (formula "47"))
                                          (rule "true_left" (formula "47"))
                                          (rule "commute_or_2" (formula "16") (term "0,0,1,0"))
                                          (rule "inEqSimp_or_weaken2" (formula "16") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "16") (term "1,0,1,0,1,0"))
                                          (rule "add_literals" (formula "16") (term "0,1,0,1,0,1,0"))
                                          (rule "add_zero_left" (formula "16") (term "1,0,1,0,1,0"))
                                           (builtin "One Step Simplification" (formula "16"))
                                          (rule "commute_or" (formula "34") (term "0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "9") (term "0"))
                                          (rule "distr_forallAnd" (formula "9"))
                                          (rule "andLeft" (formula "9"))
                                          (rule "commute_or_2" (formula "9") (term "0"))
                                          (rule "shift_paren_or" (formula "10") (term "0"))
                                          (rule "commute_or" (formula "9") (term "0,0"))
                                          (rule "commute_and" (formula "36") (term "0,0,0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "17") (term "0,0,1,0"))
                                          (rule "cnf_rightDist" (formula "36") (term "0,0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "36") (term "0,0,0,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "36") (term "1,0,0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "36") (term "0,1,0,0,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "36") (term "0,0,0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "36") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "all_pull_out3" (formula "35") (term "1,0"))
                                          (rule "shift_paren_or" (formula "35") (term "0,1,0"))
                                          (rule "shift_paren_or" (formula "35") (term "0,0,1,0"))
                                          (rule "commute_or_2" (formula "35") (term "0,0,0,1,0"))
                                          (rule "all_pull_out3" (formula "17") (term "0"))
                                          (rule "shift_paren_or" (formula "17") (term "0,0"))
                                          (rule "shift_paren_or" (formula "17") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "17") (term "0,0,0,0"))
                                          (rule "commute_or" (formula "17") (term "0,0,0,0,0"))
                                          (rule "shift_paren_and" (formula "36") (term "0,0,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "36") (term "0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "36") (term "0,0,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "36") (term "1,0,0,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "36"))
                                          (rule "cnf_rightDist" (formula "36") (term "0,0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "36") (term "1,0,0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "36") (term "0,1,0,0,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "36") (term "0,1,0,0,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "36"))
                                          (rule "cnf_rightDist" (formula "36") (term "0,0,0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "36") (term "1,0,0,0,0,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "36"))
                                          (rule "all_pull_out3" (formula "35") (term "0"))
                                          (rule "shift_paren_or" (formula "35") (term "0,0"))
                                          (rule "shift_paren_or" (formula "35") (term "0,0,0"))
                                          (rule "shift_paren_or" (formula "35") (term "0,0,0,0"))
                                          (rule "commute_or_2" (formula "35") (term "0,0,0,0,0"))
                                          (rule "commute_or" (formula "35") (term "0,0,0,0,0,0"))
                                          (rule "cnf_rightDist" (formula "36") (term "0,0,0,0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "36") (term "1,0,0,0,0,0,0,1,1,0"))
                                          (rule "shift_paren_or" (formula "36") (term "0,0,0,0,0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "36") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "36"))
                                          (rule "allLeft" (formula "16") (inst "t=i_1_0"))
                                          (rule "replace_known_left" (formula "16") (term "0,0,0,0") (ifseqformula "35"))
                                           (builtin "One Step Simplification" (formula "16"))
                                          (rule "inEqSimp_contradInEq1" (formula "16") (term "1,0") (ifseqformula "33"))
                                          (rule "qeq_literals" (formula "16") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "16"))
                                          (rule "inEqSimp_contradInEq0" (formula "16") (term "1") (ifseqformula "34"))
                                          (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "16") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "16") (term "0,0,1"))
                                          (rule "polySimp_addComm0" (formula "16") (term "0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
                                          (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "16") (term "0,0,1"))
                                          (rule "leq_literals" (formula "16") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "16"))
                                          (rule "cnf_rightDist" (formula "37") (term "0,0,1,0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "37") (term "0,0,0,1,0,0,0,1,1,0"))
                                          (rule "shift_paren_and" (formula "37") (term "0,0,0,1,1,0"))
                                          (rule "shift_paren_and" (formula "37") (term "0,0,0,0,1,1,0"))
                                          (rule "allLeft" (formula "9") (inst "t=i_1_0"))
                                          (rule "replace_known_left" (formula "9") (term "0,0,0") (ifseqformula "36"))
                                           (builtin "One Step Simplification" (formula "9"))
                                          (rule "inEqSimp_contradInEq1" (formula "9") (term "0") (ifseqformula "34"))
                                          (rule "qeq_literals" (formula "9") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "9"))
                                          (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "35"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "9") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                          (rule "polySimp_elimOne" (formula "9") (term "0"))
                                          (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "9"))
                                          (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                          (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "5") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
                                          (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                          (rule "add_literals" (formula "5") (term "0,0"))
                                          (rule "qeq_literals" (formula "5") (term "0"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "true_left" (formula "5"))
                                          (rule "inEqSimp_antiSymm" (formula "23") (ifseqformula "8"))
                                          (rule "applyEq" (formula "55") (term "0,0,2,0") (ifseqformula "23"))
                                          (rule "polySimp_mulComm0" (formula "55") (term "0,2,0"))
                                          (rule "polySimp_rightDist" (formula "55") (term "0,2,0"))
                                          (rule "mul_literals" (formula "55") (term "0,0,2,0"))
                                          (rule "applyEqRigid" (formula "9") (term "1") (ifseqformula "23"))
                                          (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "23"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "0,0"))
                                          (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                          (rule "mul_literals" (formula "6") (term "0,0,0"))
                                          (rule "applyEq" (formula "53") (term "0,1,1") (ifseqformula "23"))
                                          (rule "polySimp_mulComm0" (formula "53") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "53") (term "1,1"))
                                          (rule "mul_literals" (formula "53") (term "0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "53") (term "1"))
                                          (rule "add_literals" (formula "53") (term "0,1"))
                                          (rule "add_zero_left" (formula "53") (term "1"))
                                          (rule "applyEq" (formula "4") (term "0") (ifseqformula "23"))
                                          (rule "inEqSimp_homoInEq0" (formula "4"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                          (rule "mul_literals" (formula "4") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                          (rule "add_literals" (formula "4") (term "0,0"))
                                          (rule "applyEqRigid" (formula "8") (term "0") (ifseqformula "23"))
                                          (rule "inEqSimp_homoInEq0" (formula "8"))
                                          (rule "polySimp_pullOutFactor1" (formula "8") (term "0"))
                                          (rule "add_literals" (formula "8") (term "1,0"))
                                          (rule "times_zero_1" (formula "8") (term "0"))
                                          (rule "qeq_literals" (formula "8"))
                                          (rule "true_left" (formula "8"))
                                          (rule "applyEq" (formula "30") (term "0,1,1") (ifseqformula "22"))
                                          (rule "polySimp_mulComm0" (formula "30") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "30") (term "1,1"))
                                          (rule "mul_literals" (formula "30") (term "0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "30") (term "1"))
                                          (rule "add_literals" (formula "30") (term "0,1"))
                                          (rule "applyEq" (formula "9") (term "1,1,0") (ifseqformula "22"))
                                          (rule "applyEqRigid" (formula "23") (term "0") (ifseqformula "22"))
                                          (rule "inEqSimp_homoInEq1" (formula "23"))
                                          (rule "polySimp_pullOutFactor1" (formula "23") (term "0"))
                                          (rule "add_literals" (formula "23") (term "1,0"))
                                          (rule "times_zero_1" (formula "23") (term "0"))
                                          (rule "leq_literals" (formula "23"))
                                          (rule "true_left" (formula "23"))
                                          (rule "applyEq" (formula "12") (term "0") (ifseqformula "22"))
                                          (rule "inEqSimp_homoInEq1" (formula "12"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                          (rule "mul_literals" (formula "12") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                          (rule "add_literals" (formula "12") (term "0,0"))
                                          (rule "applyEqRigid" (formula "54") (term "0,0,2,0") (ifseqformula "22"))
                                          (rule "polySimp_mulComm0" (formula "54") (term "0,2,0"))
                                          (rule "polySimp_rightDist" (formula "54") (term "0,2,0"))
                                          (rule "mul_literals" (formula "54") (term "0,0,2,0"))
                                          (rule "applyEqRigid" (formula "5") (term "0,1,1") (ifseqformula "22"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "5") (term "1,1"))
                                          (rule "mul_literals" (formula "5") (term "0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "5") (term "1"))
                                          (rule "add_literals" (formula "5") (term "0,1"))
                                          (rule "applyEq" (formula "1") (term "0,0,2,1,0") (ifseqformula "22"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "0,2,1,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "0,2,1,0"))
                                          (rule "mul_literals" (formula "1") (term "0,0,2,1,0"))
                                          (rule "applyEqRigid" (formula "10") (term "1,1,0") (ifseqformula "22"))
                                          (rule "applyEqRigid" (formula "7") (term "0,1") (ifseqformula "22"))
                                          (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                          (rule "polySimp_rightDist" (formula "7") (term "1"))
                                          (rule "mul_literals" (formula "7") (term "0,1"))
                                          (rule "applyEq" (formula "6") (term "1") (ifseqformula "22"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                          (rule "polySimp_elimOne" (formula "4") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                          (rule "polySimp_elimOne" (formula "11") (term "0"))
                                          (rule "inEqSimp_subsumption0" (formula "22") (ifseqformula "49"))
                                          (rule "inEqSimp_homoInEq0" (formula "22") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,0"))
                                          (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                          (rule "add_literals" (formula "22") (term "0,0"))
                                          (rule "qeq_literals" (formula "22") (term "0"))
                                           (builtin "One Step Simplification" (formula "22"))
                                          (rule "true_left" (formula "22"))
                                          (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "21"))
                                          (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "4") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                          (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                          (rule "add_literals" (formula "4") (term "0,0"))
                                          (rule "qeq_literals" (formula "4") (term "0"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "true_left" (formula "4"))
                                          (rule "inEqSimp_subsumption0" (formula "26") (ifseqformula "25"))
                                          (rule "inEqSimp_homoInEq0" (formula "26") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "26") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "26") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0"))
                                          (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0,0"))
                                          (rule "add_literals" (formula "26") (term "0,0"))
                                          (rule "qeq_literals" (formula "26") (term "0"))
                                           (builtin "One Step Simplification" (formula "26"))
                                          (rule "true_left" (formula "26"))
                                          (rule "inEqSimp_antiSymm" (formula "20") (ifseqformula "46"))
                                          (rule "applyEq" (formula "33") (term "1,1,1,0,0,1,1,0") (ifseqformula "20"))
                                          (rule "applyEqRigid" (formula "33") (term "1,1,1,1,1,0,0,0,1,1,0") (ifseqformula "20"))
                                          (rule "applyEq" (formula "33") (term "1,1,1,1,0,1,0,0,0,0,0,1,1,0") (ifseqformula "20"))
                                          (rule "applyEqRigid" (formula "22") (term "0,0") (ifseqformula "20"))
                                          (rule "applyEq" (formula "43") (term "1,0") (ifseqformula "20"))
                                          (rule "applyEq" (formula "21") (term "0") (ifseqformula "20"))
                                          (rule "inEqSimp_homoInEq1" (formula "21"))
                                          (rule "polySimp_mulLiterals" (formula "21") (term "1,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "21") (term "0"))
                                          (rule "add_literals" (formula "21") (term "1,0"))
                                          (rule "times_zero_1" (formula "21") (term "0"))
                                          (rule "leq_literals" (formula "21"))
                                          (rule "true_left" (formula "21"))
                                          (rule "applyEq" (formula "31") (term "1,0,1,0,0,0,0") (ifseqformula "20"))
                                          (rule "applyEq" (formula "32") (term "1,1,1,1,1,1,0,0,0,0,0,1,1,0") (ifseqformula "20"))
                                          (rule "applyEq" (formula "26") (term "0") (ifseqformula "20"))
                                          (rule "inEqSimp_homoInEq1" (formula "26"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "26") (term "0"))
                                          (rule "applyEq" (formula "32") (term "1,0,1,0,0,0,1,1,0") (ifseqformula "20"))
                                          (rule "applyEqRigid" (formula "31") (term "1,0,1,1,1,0,0") (ifseqformula "20"))
                                          (rule "applyEqRigid" (formula "46") (term "0") (ifseqformula "20"))
                                          (rule "inEqSimp_homoInEq0" (formula "46"))
                                          (rule "polySimp_mulLiterals" (formula "46") (term "1,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "46") (term "0"))
                                          (rule "add_literals" (formula "46") (term "1,0"))
                                          (rule "times_zero_1" (formula "46") (term "0"))
                                          (rule "qeq_literals" (formula "46"))
                                          (rule "true_left" (formula "46"))
                                          (rule "applyEq" (formula "32") (term "1,1,0,1,1,0,0,0,0,0,1,1,0") (ifseqformula "20"))
                                          (rule "applyEq" (formula "32") (term "1,1,1,1,1,0,0,0,0,0,0,0,1,1,0") (ifseqformula "20"))
                                          (rule "applyEq" (formula "32") (term "1,1,1,1,1,0,0,0,0,0,0,1,1,0") (ifseqformula "20"))
                                          (rule "applyEq" (formula "11") (term "0") (ifseqformula "20"))
                                          (rule "applyEqRigid" (formula "17") (term "0,0") (ifseqformula "20"))
                                          (rule "applyEqRigid" (formula "32") (term "1,1,1,1,1,0,0,0,0,1,1,0") (ifseqformula "20"))
                                          (rule "applyEqRigid" (formula "12") (term "0") (ifseqformula "20"))
                                          (rule "applyEq" (formula "32") (term "1,0,1,0,1,0") (ifseqformula "20"))
                                          (rule "applyEqRigid" (formula "32") (term "1,1,1,0,0,0,0,0,0,0,0,1,1,0") (ifseqformula "20"))
                                          (rule "applyEq" (formula "32") (term "1,1,0,1,0,0,0,0,0,0,1,1,0") (ifseqformula "20"))
                                          (rule "applyEq" (formula "27") (term "1") (ifseqformula "20"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "26"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                                          (rule "mul_literals" (formula "26") (term "0,1"))
                                          (rule "inEqSimp_subsumption6" (formula "11") (ifseqformula "10"))
                                          (rule "mul_literals" (formula "11") (term "1,1,0"))
                                          (rule "greater_literals" (formula "11") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "11"))
                                          (rule "leq_literals" (formula "11") (term "0"))
                                           (builtin "One Step Simplification" (formula "11"))
                                          (rule "true_left" (formula "11"))
                                          (rule "inEqSimp_subsumption4" (formula "11") (ifseqformula "17"))
                                          (rule "mul_literals" (formula "11") (term "0,1,0"))
                                          (rule "greater_literals" (formula "11") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "11"))
                                          (rule "leq_literals" (formula "11") (term "0"))
                                           (builtin "One Step Simplification" (formula "11"))
                                          (rule "true_left" (formula "11"))
                                          (rule "elimGcdGeq" (formula "29") (term "1,0,1,0,0,0,0,0,0,1,1,0") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcdRightDiv=quotient_0"))
                                          (rule "sub_literals" (formula "29") (term "0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1,0,1,0,1,0,0,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "29") (term "0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0,1,0,1,0,0,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "29") (term "0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,1,0,1,0,1,0,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "29") (term "1,1,0,1,0,1,0,1,0,0,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "29") (term "1,0,1,0,1,0,1,0,0,0,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "29") (term "0,1,0,1,0,1,0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,0,0,1,0,1,0,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "29") (term "1,1,0,0,0,1,0,1,0,0,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "29") (term "1,0,0,0,1,0,1,0,0,0,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "29") (term "0,0,0,1,0,1,0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "29") (term "0,0,1,0,1,0,1,0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "29") (term "0,1,0,1,0,1,0,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "29") (term "1,0,1,0,1,0,1,0,0,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "29") (term "0,1,0,1,0,1,0,0,0,0,0,0,1,1,0"))
                                          (rule "leq_literals" (formula "29") (term "1,0,1,0,1,0,0,0,0,0,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "29"))
                                          (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,1,0,1,0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,0,1,0,1,0,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "29") (term "1,1,0,0,1,0,1,0,0,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "29") (term "1,0,0,1,0,1,0,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "29") (term "0,0,1,0,1,0,0,0,0,0,0,1,1,0"))
                                          (rule "qeq_literals" (formula "29") (term "0,1,0,1,0,0,0,0,0,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "29"))
                                          (rule "polyDiv_pullOut" (formula "15") (term "0") (inst "polyDivCoeff=quotient_0"))
                                          (rule "equal_literals" (formula "15") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "15") (term "0,0,0"))
                                          (rule "add_literals" (formula "15") (term "1,0,0,0"))
                                          (rule "times_zero_1" (formula "15") (term "0,0,0"))
                                          (rule "div_literals" (formula "15") (term "0,0"))
                                          (rule "add_zero_left" (formula "15") (term "0"))
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "true_left" (formula "15"))
                                          (rule "elimGcdGeq" (formula "28") (term "0,1,0,0,0,1,1,0") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcdRightDiv=quotient_0"))
                                          (rule "sub_literals" (formula "28") (term "0,0,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "28") (term "0,0,0,0,0,1,0,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "28") (term "1,1,0,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "28") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "28") (term "1,1,0,1,0,0,1,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "28") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "28") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "28") (term "1,1,0,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "28") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "qeq_literals" (formula "28") (term "0,0,0,1,0,0,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "28"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "28") (term "0,0,0,1,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "28") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "28") (term "0,0,0,1,0,0,0,1,1,0"))
                                          (rule "leq_literals" (formula "28") (term "0,0,1,0,0,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "28"))
                                          (rule "elimGcdGeq" (formula "28") (term "1,1,0,0,1,1,0") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcdRightDiv=quotient_0"))
                                          (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0,0,0,1,1,0,0,1,1,0"))
                                          (rule "sub_literals" (formula "28") (term "0,0,0,0,0,0,0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0,1,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "28") (term "0,0,0,0,0,1,0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,0,0,1,1,0,0,1,1,0"))
                                          (rule "add_literals" (formula "28") (term "1,1,0,0,0,1,1,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "28") (term "1,0,0,0,1,1,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "28") (term "0,0,0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,1,0,1,1,0,0,1,1,0"))
                                          (rule "add_literals" (formula "28") (term "1,1,0,1,0,1,1,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "28") (term "1,0,1,0,1,1,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "28") (term "0,1,0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,0,0,1,1,0,0,1,1,0"))
                                          (rule "add_literals" (formula "28") (term "1,1,0,0,0,1,1,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "28") (term "1,0,0,0,1,1,0,0,1,1,0"))
                                          (rule "add_literals" (formula "28") (term "0,0,0,1,1,0,0,1,1,0"))
                                          (rule "qeq_literals" (formula "28") (term "0,0,1,1,0,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "28"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "0,0,0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "28") (term "0,0,1,1,0,0,1,1,0"))
                                          (rule "add_literals" (formula "28") (term "1,0,0,1,1,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "28") (term "0,0,1,1,0,0,1,1,0"))
                                          (rule "leq_literals" (formula "28") (term "0,1,1,0,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "28"))
                                          (rule "elimGcdGeq" (formula "28") (term "1,1,0,0,0,0,0,0,0,0,1,1,0") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcdRightDiv=quotient_0"))
                                          (rule "sub_literals" (formula "28") (term "0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,0,1,1,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0,1,1,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "28") (term "0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,0,0,1,1,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "28") (term "1,1,0,0,0,1,1,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "28") (term "1,0,0,0,1,1,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "28") (term "0,0,0,1,1,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,1,0,1,1,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "28") (term "1,1,0,1,0,1,1,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "28") (term "1,0,1,0,1,1,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "28") (term "0,1,0,1,1,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,0,0,1,1,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "28") (term "1,1,0,0,0,1,1,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "28") (term "1,0,0,0,1,1,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "28") (term "0,0,0,1,1,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "qeq_literals" (formula "28") (term "0,0,1,1,0,0,0,0,0,0,0,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "28"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "0,0,0,1,1,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "28") (term "0,0,1,1,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "28") (term "1,0,0,1,1,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "28") (term "0,0,1,1,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "leq_literals" (formula "28") (term "0,1,1,0,0,0,0,0,0,0,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "28"))
                                          (rule "elimGcdGeq" (formula "28") (term "1,0,1,1,0,0,0,0,0,1,1,0") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcdRightDiv=quotient_0"))
                                          (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0,1,0,1,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,0,1,0,1,1,0,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "28") (term "0,0,0,0,0,1,0,1,0,1,1,0,0,0,0,0,1,1,0"))
                                          (rule "sub_literals" (formula "28") (term "0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,1,0,1,0,1,1,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "28") (term "1,1,0,1,0,1,0,1,1,0,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "28") (term "1,0,1,0,1,0,1,1,0,0,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "28") (term "0,1,0,1,0,1,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,0,0,1,0,1,1,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "28") (term "1,1,0,0,0,1,0,1,1,0,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "28") (term "1,0,0,0,1,0,1,1,0,0,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "28") (term "0,0,0,1,0,1,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "0,0,1,0,1,0,1,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "28") (term "0,1,0,1,0,1,1,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "28") (term "1,0,1,0,1,0,1,1,0,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "28") (term "0,1,0,1,0,1,1,0,0,0,0,0,1,1,0"))
                                          (rule "leq_literals" (formula "28") (term "1,0,1,0,1,1,0,0,0,0,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "28"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,1,0,1,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,0,1,0,1,1,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "28") (term "1,1,0,0,1,0,1,1,0,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "28") (term "1,0,0,1,0,1,1,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "28") (term "0,0,1,0,1,1,0,0,0,0,0,1,1,0"))
                                          (rule "qeq_literals" (formula "28") (term "0,1,0,1,1,0,0,0,0,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "28"))
                                          (rule "inEqSimp_antiSymm" (formula "6") (ifseqformula "25"))
                                          (rule "applyEqRigid" (formula "7") (term "0") (ifseqformula "6"))
                                          (rule "inEqSimp_homoInEq1" (formula "7"))
                                          (rule "polySimp_pullOutFactor1" (formula "7") (term "0"))
                                          (rule "add_literals" (formula "7") (term "1,0"))
                                          (rule "times_zero_1" (formula "7") (term "0"))
                                          (rule "leq_literals" (formula "7"))
                                          (rule "true_left" (formula "7"))
                                          (rule "applyEq" (formula "11") (term "0,1,0,2,0") (ifseqformula "6"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,0,2,0"))
                                          (rule "polySimp_rightDist" (formula "11") (term "1,0,2,0"))
                                          (rule "mul_literals" (formula "11") (term "0,1,0,2,0"))
                                          (rule "polySimp_addAssoc" (formula "11") (term "0,2,0"))
                                          (rule "add_literals" (formula "11") (term "0,0,2,0"))
                                          (rule "applyEqRigid" (formula "25") (term "0") (ifseqformula "6"))
                                          (rule "inEqSimp_homoInEq0" (formula "25"))
                                          (rule "polySimp_pullOutFactor1" (formula "25") (term "0"))
                                          (rule "add_literals" (formula "25") (term "1,0"))
                                          (rule "times_zero_1" (formula "25") (term "0"))
                                          (rule "qeq_literals" (formula "25"))
                                          (rule "true_left" (formula "25"))
                                          (rule "applyEqRigid" (formula "25") (term "0,0,2,0") (ifseqformula "6"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "0,2,0"))
                                          (rule "polySimp_rightDist" (formula "25") (term "0,2,0"))
                                          (rule "mul_literals" (formula "25") (term "0,0,2,0"))
                                          (rule "close" (formula "42") (ifseqformula "25"))
                                       )
                                    )
                                    (branch "CUT: l_0 <= -1 + l_1 FALSE"
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "true_left" (formula "7"))
                                       (rule "inEqSimp_leqRight" (formula "53"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1"))
                                       (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "47"))
                                       (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "2"))
                                       (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                       (rule "add_literals" (formula "2") (term "1,0"))
                                       (rule "times_zero_1" (formula "2") (term "0"))
                                       (rule "leq_literals" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "applyEqRigid" (formula "50") (term "0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "47") (term "0") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "47"))
                                       (rule "polySimp_pullOutFactor1" (formula "47") (term "0"))
                                       (rule "add_literals" (formula "47") (term "1,0"))
                                       (rule "times_zero_1" (formula "47") (term "0"))
                                       (rule "qeq_literals" (formula "47"))
                                       (rule "true_left" (formula "47"))
                                       (rule "applyEqRigid" (formula "46") (term "0") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "46") (term "0") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "2") (term "0,1,0") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "46") (term "0,1,1") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "44") (term "0,0,0") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "6") (term "0") (ifseqformula "44"))
                                       (rule "applyEqRigid" (formula "2") (term "0,0,2,0") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "44") (term "0,1") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "42") (term "0,1") (ifseqformula "1"))
                                       (rule "applyEqRigid" (formula "43") (term "1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "2") (term "0,1,0,1") (ifseqformula "1"))
                                       (rule "polySimp_pullOutFactor0" (formula "2") (term "0,1"))
                                       (rule "add_literals" (formula "2") (term "1,0,1"))
                                       (rule "times_zero_1" (formula "2") (term "0,1"))
                                       (rule "add_zero_left" (formula "2") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "2") (term "0,0") (ifseqformula "8"))
                                       (rule "leq_literals" (formula "2") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "inEqSimp_commuteGeq" (formula "2"))
                                       (rule "inEqSimp_subsumption1" (formula "45") (ifseqformula "8"))
                                       (rule "leq_literals" (formula "45") (term "0"))
                                        (builtin "One Step Simplification" (formula "45"))
                                       (rule "true_left" (formula "45"))
                                       (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "2"))
                                       (rule "andLeft" (formula "5"))
                                       (rule "inEqSimp_homoInEq1" (formula "5"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "5") (term "0"))
                                       (rule "add_literals" (formula "5") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "5") (term "1,0"))
                                       (rule "add_zero_right" (formula "5") (term "0"))
                                       (rule "leq_literals" (formula "5"))
                                       (rule "closeFalse" (formula "5"))
                                    )
                                 )
                                 (branch "CUT: pow(2, i_2_0) <= 2 + l_1 * 2 FALSE"
                                     (builtin "One Step Simplification" (formula "43"))
                                    (rule "true_left" (formula "43"))
                                    (rule "inEqSimp_leqRight" (formula "43"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                    (rule "mul_literals" (formula "1") (term "0,1"))
                                    (rule "replace_known_left" (formula "43") (term "0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "43"))
                                    (rule "applyEq" (formula "2") (term "0,1,1,0") (ifseqformula "43"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,1,0"))
                                    (rule "mul_literals" (formula "2") (term "0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0"))
                                    (rule "polySimp_addComm0" (formula "2") (term "1,0"))
                                    (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "43"))
                                    (rule "inEqSimp_homoInEq0" (formula "2") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,0,0"))
                                    (rule "applyEq" (formula "2") (term "0,1,0,2,0") (ifseqformula "43"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,2,0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,0,2,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,2,0"))
                                    (rule "mul_literals" (formula "2") (term "0,1,0,2,0"))
                                    (rule "polySimp_addComm0" (formula "2") (term "0,2,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                                    (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                    (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                    (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                    (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "5") (term "0,0"))
                                    (rule "qeq_literals" (formula "5") (term "0"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "true_left" (formula "5"))
                                    (rule "elimGcdGeq" (formula "2") (term "0,0") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=add(Z(2(#)), l_1)"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,0,0,0,0,1,0,0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,0,0,0,0"))
                                    (rule "sub_literals" (formula "2") (term "0,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0,0,0,0,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "2") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,1,0,0,0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0,1,0,0,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0,1,0,0,0"))
                                    (rule "add_zero_right" (formula "2") (term "0,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "0,0,1,0,0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,0,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,1,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,1,0,0,0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0,1,0,0,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0,1,0,0,0"))
                                    (rule "add_zero_right" (formula "2") (term "0,1,0,0,0"))
                                    (rule "leq_literals" (formula "2") (term "1,0,0,0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "2") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0" (formula "2") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "2") (term "1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "2") (term "0,0,0,0"))
                                    (rule "qeq_literals" (formula "2") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "11"))
                                    (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "elimGcdLeq_antec" (formula "1") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcdRightDiv=Z(0(1(9(0(7(8(6(3(5(#))))))))))"))
                                    (rule "leq_literals" (formula "1") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "neg_literal" (formula "1") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "1") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0"))
                                    (rule "qeq_literals" (formula "1") (term "0"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "1"))
                                    (rule "leq_literals" (formula "5") (term "0"))
                                     (builtin "One Step Simplification" (formula "5"))
                                    (rule "true_left" (formula "5"))
                                    (rule "nnf_notAnd" (formula "25") (term "0,0,0,1,1,0"))
                                    (rule "nnf_notOr" (formula "25") (term "1,0,0,1,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "25") (term "1,1,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "25") (term "1,0,0,1,1,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "25") (term "0,0,1,1,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "25") (term "1,1,1,0,0,1,1,0"))
                                    (rule "inEqSimp_notLeq" (formula "25") (term "0,1,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "25") (term "0,1,0,0,0,1,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,1,0,0,1,1,0"))
                                    (rule "add_literals" (formula "25") (term "0,0,0,0,1,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "25") (term "0,0,0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0,1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "25") (term "1,0,1,0,0,1,1,0"))
                                    (rule "commute_or_2" (formula "12") (term "0"))
                                    (rule "commute_or" (formula "24") (term "0,0"))
                                    (rule "commute_or" (formula "25") (term "0,0"))
                                    (rule "commute_or" (formula "7") (term "0,0,1"))
                                    (rule "nnf_notOr" (formula "25") (term "1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_notLeq" (formula "25") (term "0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "25") (term "0,1,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,1,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "25") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "25") (term "0,0,0,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "25") (term "1,0,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "25") (term "1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,1,1,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "25") (term "0,1,1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "25") (term "1,1,1,1,0,0,0,1,1,0"))
                                    (rule "nnf_notAnd" (formula "25") (term "0,0,0,0,1,1,0"))
                                    (rule "commute_or" (formula "8") (term "0,0,1,1"))
                                    (rule "nnf_notOr" (formula "25") (term "0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_notLeq" (formula "25") (term "0,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "25") (term "0,0,0,0,0,0,0,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "25") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "25") (term "1,0,0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "25") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "25") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0,0,0,1,1,0"))
                                    (rule "nnf_notOr" (formula "25") (term "1,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "25") (term "1,1,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,1,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,1,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,1,1,0,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,1,1,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "25") (term "0,1,1,1,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,1,0,0,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "25") (term "1,1,1,1,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "25") (term "0,1,0,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "25") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "25") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,1,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "25") (term "1,0,1,0,0,0,0,1,1,0"))
                                    (rule "commute_or" (formula "8") (term "0,0,0,1"))
                                    (rule "cut_direct" (formula "8") (term "0"))
                                    (branch "CUT: l_0 >= 1 + l_1 TRUE"
                                        (builtin "One Step Simplification" (formula "9"))
                                       (rule "andLeft" (formula "9"))
                                       (rule "replace_known_left" (formula "3") (term "0,1") (ifseqformula "8"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "inEqSimp_contradInEq1" (formula "7") (term "0") (ifseqformula "8"))
                                       (rule "inEqSimp_homoInEq1" (formula "7") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "7") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "7") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "7") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "7") (term "0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0"))
                                       (rule "add_literals" (formula "7") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "7") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "7") (term "0,0,0"))
                                       (rule "leq_literals" (formula "7") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "true_left" (formula "7"))
                                       (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "39"))
                                       (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                       (rule "mul_literals" (formula "7") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "7") (term "0"))
                                       (rule "add_literals" (formula "7") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                       (rule "polySimp_elimOne" (formula "7") (term "0"))
                                       (rule "div_axiom" (formula "16") (term "1") (inst "quotient=quotient_0"))
                                       (rule "qeq_literals" (formula "16") (term "0,1,1"))
                                        (builtin "One Step Simplification" (formula "16"))
                                       (rule "equal_literals" (formula "16") (term "0"))
                                        (builtin "One Step Simplification" (formula "16"))
                                       (rule "mul_literals" (formula "16") (term "1,1,1"))
                                       (rule "andLeft" (formula "16"))
                                       (rule "andLeft" (formula "16"))
                                       (rule "polySimp_addComm1" (formula "18") (term "1"))
                                       (rule "add_literals" (formula "18") (term "0,1"))
                                       (rule "inEqSimp_commuteLeq" (formula "17"))
                                       (rule "inEqSimp_homoInEq1" (formula "18"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "18") (term "0"))
                                       (rule "applyEq" (formula "29") (term "1,1,0,0") (ifseqformula "16"))
                                       (rule "applyEq" (formula "14") (term "1,1,0,0") (ifseqformula "16"))
                                       (rule "applyEqRigid" (formula "14") (term "1,0,0,0,1,0") (ifseqformula "16"))
                                       (rule "applyEqRigid" (formula "13") (term "1,1,0") (ifseqformula "16"))
                                       (rule "applyEq" (formula "28") (term "1,1,0,0") (ifseqformula "16"))
                                       (rule "applyEqRigid" (formula "26") (term "0") (ifseqformula "16"))
                                       (rule "inEqSimp_homoInEq1" (formula "26"))
                                       (rule "polySimp_addComm1" (formula "26") (term "0"))
                                       (rule "applyEqRigid" (formula "20") (term "1,0") (ifseqformula "16"))
                                       (rule "applyEqRigid" (formula "19") (term "1") (ifseqformula "16"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "18"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
                                       (rule "mul_literals" (formula "18") (term "0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "26"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "1"))
                                       (rule "polySimp_rightDist" (formula "26") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                                       (rule "mul_literals" (formula "26") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "26") (term "1,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "18"))
                                       (rule "polySimp_rightDist" (formula "43") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0"))
                                       (rule "mul_literals" (formula "43") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "43") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "43") (term "0,0"))
                                       (rule "add_literals" (formula "43") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "43") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "43"))
                                       (rule "polySimp_mulLiterals" (formula "43") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "43") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=quotient_0"))
                                       (rule "neg_literal" (formula "43") (term "0,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "43") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "43"))
                                       (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "43") (term "0,0"))
                                       (rule "add_literals" (formula "43") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "43") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "43") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "43") (term "0,0"))
                                       (rule "add_literals" (formula "43") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "43") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "43") (term "0,0"))
                                       (rule "qeq_literals" (formula "43") (term "0"))
                                        (builtin "One Step Simplification" (formula "43"))
                                       (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "26"))
                                       (rule "times_zero_1" (formula "25") (term "0,0"))
                                       (rule "add_zero_left" (formula "25") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                                       (rule "mul_literals" (formula "25") (term "1"))
                                       (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "18"))
                                       (rule "mul_literals" (formula "11") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                       (rule "add_literals" (formula "11") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                       (rule "mul_literals" (formula "11") (term "1"))
                                       (rule "elimGcdGeq_antec" (formula "11") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(4(#))"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "11") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "11"))
                                       (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "11") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                                       (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "11") (term "0,0"))
                                       (rule "leq_literals" (formula "11") (term "0"))
                                        (builtin "One Step Simplification" (formula "11"))
                                       (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "11"))
                                       (rule "leq_literals" (formula "26") (term "0"))
                                        (builtin "One Step Simplification" (formula "26"))
                                       (rule "true_left" (formula "26"))
                                       (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "19"))
                                       (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                       (rule "mul_literals" (formula "24") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "24") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                                       (rule "add_literals" (formula "24") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "24") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                       (rule "polySimp_elimOne" (formula "24") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "19"))
                                       (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                       (rule "mul_literals" (formula "2") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), quotient_0)"))
                                       (rule "leq_literals" (formula "2") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                       (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "2") (term "0,0"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                       (rule "add_zero_left" (formula "2") (term "0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "2") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "2") (term "0,0"))
                                       (rule "qeq_literals" (formula "2") (term "0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "14"))
                                       (rule "polySimp_mulAssoc" (formula "19") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "19") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "19") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(2(1(9(0(7(8(6(3(5(#))))))))))"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0"))
                                       (rule "neg_literal" (formula "19") (term "0,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "19") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "19"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "19") (term "0,0,0,0"))
                                       (rule "add_zero_right" (formula "19") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                                       (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "19") (term "0,0"))
                                       (rule "qeq_literals" (formula "19") (term "0"))
                                        (builtin "One Step Simplification" (formula "19"))
                                       (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "47"))
                                       (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                       (rule "mul_literals" (formula "8") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "8") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                       (rule "polySimp_elimOne" (formula "8") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "49") (ifseqformula "47"))
                                       (rule "times_zero_1" (formula "49") (term "0,0"))
                                       (rule "add_zero_left" (formula "49") (term "0"))
                                       (rule "inEqSimp_subsumption1" (formula "49") (ifseqformula "12"))
                                       (rule "leq_literals" (formula "49") (term "0"))
                                        (builtin "One Step Simplification" (formula "49"))
                                       (rule "true_left" (formula "49"))
                                       (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "2"))
                                       (rule "times_zero_1" (formula "5") (term "0,0"))
                                       (rule "add_zero_left" (formula "5") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                       (rule "mul_literals" (formula "5") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "13"))
                                       (rule "leq_literals" (formula "5") (term "0"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "true_left" (formula "5"))
                                       (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "26"))
                                       (rule "times_zero_1" (formula "24") (term "0,0"))
                                       (rule "add_zero_left" (formula "24") (term "0"))
                                       (rule "inEqSimp_subsumption6" (formula "24") (ifseqformula "12"))
                                       (rule "greater_literals" (formula "24") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "24"))
                                       (rule "mul_literals" (formula "24") (term "1,0"))
                                       (rule "leq_literals" (formula "24") (term "0"))
                                        (builtin "One Step Simplification" (formula "24"))
                                       (rule "true_left" (formula "24"))
                                       (rule "commute_or_2" (formula "32") (term "0,1,1,0"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "1,0") (ifseqformula "35"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "36"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "33") (term "0") (ifseqformula "37"))
                                       (rule "replace_known_left" (formula "33") (term "0") (ifseqformula "34"))
                                        (builtin "One Step Simplification" (formula "33"))
                                       (rule "true_left" (formula "33"))
                                       (rule "commute_or" (formula "17") (term "0,0"))
                                       (rule "cnf_rightDist" (formula "12") (term "0"))
                                       (rule "cnf_rightDist" (formula "11") (term "0"))
                                       (rule "commute_and" (formula "35") (term "1,0,0,1,1,0"))
                                       (rule "shift_paren_or" (formula "18") (term "0,1,0"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "37"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "distr_forallAnd" (formula "13"))
                                       (rule "andLeft" (formula "13"))
                                       (rule "distr_forallAnd" (formula "12"))
                                       (rule "andLeft" (formula "12"))
                                       (rule "commute_and" (formula "38") (term "0,0,0,0,0,1,1,0"))
                                       (rule "commute_or_2" (formula "14") (term "0"))
                                       (rule "commute_or_2" (formula "12") (term "0"))
                                       (rule "shift_paren_or" (formula "15") (term "0"))
                                       (rule "shift_paren_or" (formula "13") (term "0"))
                                       (rule "commute_or" (formula "14") (term "0,0"))
                                       (rule "ifthenelse_split" (formula "7") (term "0"))
                                       (branch "l_0 >= 2 + l_1 TRUE"
                                          (rule "inEqSimp_homoInEq1" (formula "8"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "8") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "8") (term "0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                          (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "8") (term "0"))
                                          (rule "add_literals" (formula "8") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "8") (term "1,0"))
                                          (rule "add_zero_right" (formula "8") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                          (rule "polySimp_addComm0" (formula "8") (term "0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "8") (term "0"))
                                          (rule "add_literals" (formula "8") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "8") (term "1,0"))
                                          (rule "add_literals" (formula "8") (term "0"))
                                          (rule "leq_literals" (formula "8"))
                                          (rule "closeFalse" (formula "8"))
                                       )
                                       (branch "l_0 >= 2 + l_1 FALSE"
                                          (rule "inEqSimp_geqRight" (formula "57"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "8"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "8") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "8") (term "0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,1,0"))
                                          (rule "mul_literals" (formula "8") (term "0,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                          (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "8") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "8") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                          (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "8") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                          (rule "polySimp_elimOne" (formula "8") (term "0"))
                                          (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "19"))
                                          (rule "leq_literals" (formula "8") (term "0"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "true_left" (formula "8"))
                                          (rule "inEqSimp_antiSymm" (formula "11") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "50") (term "0,0,0") (ifseqformula "11"))
                                          (rule "polySimp_mulComm0" (formula "50") (term "0,0"))
                                          (rule "polySimp_rightDist" (formula "50") (term "0,0"))
                                          (rule "mul_literals" (formula "50") (term "0,0,0"))
                                          (rule "applyEq" (formula "54") (term "0,1,1") (ifseqformula "11"))
                                          (rule "polySimp_mulComm0" (formula "54") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "54") (term "1,1"))
                                          (rule "mul_literals" (formula "54") (term "0,1,1"))
                                          (rule "polySimp_addAssoc" (formula "54") (term "1"))
                                          (rule "add_literals" (formula "54") (term "0,1"))
                                          (rule "applyEq" (formula "14") (term "1,1,1,0,0") (ifseqformula "11"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "1,1,0,0"))
                                          (rule "add_literals" (formula "14") (term "0,1,1,0,0"))
                                          (rule "add_zero_left" (formula "14") (term "1,1,0,0"))
                                          (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "11"))
                                          (rule "inEqSimp_homoInEq0" (formula "1"))
                                          (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                          (rule "add_literals" (formula "1") (term "1,0"))
                                          (rule "times_zero_1" (formula "1") (term "0"))
                                          (rule "qeq_literals" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "applyEq" (formula "53") (term "0") (ifseqformula "10"))
                                          (rule "applyEqRigid" (formula "12") (term "1,1,0,0,0") (ifseqformula "10"))
                                          (rule "polySimp_addAssoc" (formula "12") (term "1,0,0,0"))
                                          (rule "add_literals" (formula "12") (term "0,1,0,0,0"))
                                          (rule "add_zero_left" (formula "12") (term "1,0,0,0"))
                                          (rule "applyEqRigid" (formula "51") (term "0") (ifseqformula "10"))
                                          (rule "inEqSimp_homoInEq0" (formula "51"))
                                          (rule "polySimp_mulComm0" (formula "51") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "51") (term "1,0"))
                                          (rule "mul_literals" (formula "51") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "51") (term "0"))
                                          (rule "add_literals" (formula "51") (term "0,0"))
                                          (rule "applyEqRigid" (formula "11") (term "0") (ifseqformula "10"))
                                          (rule "inEqSimp_homoInEq1" (formula "11"))
                                          (rule "polySimp_pullOutFactor1" (formula "11") (term "0"))
                                          (rule "add_literals" (formula "11") (term "1,0"))
                                          (rule "times_zero_1" (formula "11") (term "0"))
                                          (rule "leq_literals" (formula "11"))
                                          (rule "true_left" (formula "11"))
                                          (rule "applyEqRigid" (formula "51") (term "0") (ifseqformula "10"))
                                          (rule "inEqSimp_homoInEq0" (formula "51"))
                                          (rule "polySimp_mulComm0" (formula "51") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "51") (term "1,0"))
                                          (rule "mul_literals" (formula "51") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "51") (term "0"))
                                          (rule "polySimp_addComm0" (formula "51") (term "0,0"))
                                          (rule "applyEq" (formula "48") (term "1") (ifseqformula "10"))
                                          (rule "applyEq" (formula "49") (term "0,1") (ifseqformula "10"))
                                          (rule "polySimp_mulComm0" (formula "49") (term "1"))
                                          (rule "polySimp_rightDist" (formula "49") (term "1"))
                                          (rule "mul_literals" (formula "49") (term "0,1"))
                                          (rule "applyEqRigid" (formula "47") (term "0,1") (ifseqformula "10"))
                                          (rule "polySimp_mulComm0" (formula "47") (term "1"))
                                          (rule "polySimp_rightDist" (formula "47") (term "1"))
                                          (rule "mul_literals" (formula "47") (term "0,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "52"))
                                          (rule "mul_literals" (formula "52") (term "1"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "50"))
                                          (rule "polySimp_mulLiterals" (formula "50") (term "0"))
                                          (rule "polySimp_elimOne" (formula "50") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "50"))
                                          (rule "polySimp_mulLiterals" (formula "50") (term "0"))
                                          (rule "polySimp_elimOne" (formula "50") (term "0"))
                                          (rule "inEqSimp_subsumption1" (formula "50") (ifseqformula "7"))
                                          (rule "leq_literals" (formula "50") (term "0"))
                                           (builtin "One Step Simplification" (formula "50"))
                                          (rule "true_left" (formula "50"))
                                          (rule "commute_or_2" (formula "20") (term "0,0,1,0"))
                                          (rule "inEqSimp_or_weaken2" (formula "20") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "20") (term "1,0,1,0,1,0"))
                                          (rule "add_literals" (formula "20") (term "0,1,0,1,0,1,0"))
                                          (rule "add_zero_left" (formula "20") (term "1,0,1,0,1,0"))
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "commute_or" (formula "36") (term "0,0,1,1,0"))
                                          (rule "commute_or" (formula "11") (term "0,0"))
                                          (rule "commute_or" (formula "20") (term "0,0,1,0"))
                                          (rule "cnf_rightDist" (formula "37") (term "0,0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "37") (term "0,0,0,0,0,1,1,0"))
                                          (rule "jdiv_axiom" (formula "48") (term "0"))
                                          (rule "eqSymm" (formula "48"))
                                          (rule "polySimp_mulComm0" (formula "48") (term "0,0,2,0"))
                                          (rule "polySimp_rightDist" (formula "48") (term "0,0,2,0"))
                                          (rule "mul_literals" (formula "48") (term "0,0,0,2,0"))
                                          (rule "polySimp_mulLiterals" (formula "48") (term "1,0,0,2,0"))
                                          (rule "applyEqRigid" (formula "48") (term "1") (ifseqformula "49"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "0,0"))
                                          (rule "mul_literals" (formula "48") (term "1,0,0"))
                                          (rule "inEqSimp_subsumption6" (formula "48") (term "0,0") (ifseqformula "7"))
                                          (rule "greater_literals" (formula "48") (term "0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "48"))
                                          (rule "mul_literals" (formula "48") (term "1,0,0,0"))
                                          (rule "leq_literals" (formula "48") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "48"))
                                          (rule "polyDiv_pullOut" (formula "48") (term "0") (inst "polyDivCoeff=l_1"))
                                          (rule "equal_literals" (formula "48") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "48"))
                                          (rule "polySimp_mulLiterals" (formula "48") (term "1,0,0,0"))
                                          (rule "polySimp_homoEq" (formula "48"))
                                          (rule "polySimp_pullOutFactor0b" (formula "48") (term "0,0,0,1,0"))
                                          (rule "add_literals" (formula "48") (term "1,1,0,0,0,1,0"))
                                          (rule "times_zero_1" (formula "48") (term "1,0,0,0,1,0"))
                                          (rule "add_zero_right" (formula "48") (term "0,0,0,1,0"))
                                          (rule "div_literals" (formula "48") (term "0,0,1,0"))
                                          (rule "polySimp_pullOutFactor1" (formula "48") (term "0"))
                                          (rule "add_literals" (formula "48") (term "1,0"))
                                          (rule "times_zero_1" (formula "48") (term "0"))
                                           (builtin "One Step Simplification" (formula "48"))
                                          (rule "true_left" (formula "48"))
                                          (rule "cnf_rightDist" (formula "37") (term "1,0,0,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "37") (term "0,0,0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "37") (term "0,1,0,0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "37") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "all_pull_out3" (formula "36") (term "1,0"))
                                          (rule "shift_paren_or" (formula "36") (term "0,1,0"))
                                          (rule "shift_paren_or" (formula "36") (term "0,0,1,0"))
                                          (rule "commute_or_2" (formula "36") (term "0,0,0,1,0"))
                                          (rule "all_pull_out3" (formula "20") (term "0"))
                                          (rule "shift_paren_or" (formula "20") (term "0,0"))
                                          (rule "shift_paren_or" (formula "20") (term "0,0,0"))
                                          (rule "commute_or_2" (formula "20") (term "0,0,0,0"))
                                          (rule "commute_or" (formula "20") (term "0,0,0,0,0"))
                                          (rule "allLeft" (formula "19") (inst "t=i_1_0"))
                                          (rule "replace_known_left" (formula "19") (term "0,0,0,0") (ifseqformula "36"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0") (ifseqformula "34"))
                                          (rule "qeq_literals" (formula "19") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "inEqSimp_contradInEq0" (formula "19") (term "1") (ifseqformula "35"))
                                          (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "19") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "19") (term "0,0,1"))
                                          (rule "polySimp_addComm0" (formula "19") (term "0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                                          (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "19") (term "0,0,1"))
                                          (rule "leq_literals" (formula "19") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "allLeft" (formula "13") (inst "t=i_1_0"))
                                          (rule "replace_known_left" (formula "13") (term "0,0,0") (ifseqformula "37"))
                                           (builtin "One Step Simplification" (formula "13"))
                                          (rule "inEqSimp_contradInEq1" (formula "13") (term "0") (ifseqformula "35"))
                                          (rule "qeq_literals" (formula "13") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "13"))
                                          (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "36"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "13") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                          (rule "polySimp_elimOne" (formula "13") (term "0"))
                                          (rule "shift_paren_and" (formula "39") (term "0,0,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "39") (term "0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "39") (term "0,0,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "39") (term "1,0,0,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "39"))
                                          (rule "all_pull_out3" (formula "38") (term "0"))
                                          (rule "shift_paren_or" (formula "38") (term "0,0"))
                                          (rule "shift_paren_or" (formula "38") (term "0,0,0"))
                                          (rule "shift_paren_or" (formula "38") (term "0,0,0,0"))
                                          (rule "commute_or_2" (formula "38") (term "0,0,0,0,0"))
                                          (rule "commute_or" (formula "38") (term "0,0,0,0,0,0"))
                                          (rule "cnf_rightDist" (formula "39") (term "0,0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "39") (term "1,0,0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "39") (term "0,1,0,0,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "39") (term "0,1,0,0,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "39"))
                                          (rule "cnf_rightDist" (formula "39") (term "0,0,0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "39") (term "1,0,0,0,0,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "39"))
                                          (rule "cnf_rightDist" (formula "39") (term "0,0,0,0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "39") (term "1,0,0,0,0,0,0,1,1,0"))
                                          (rule "shift_paren_or" (formula "39") (term "0,0,0,0,0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "39") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "39"))
                                          (rule "cnf_rightDist" (formula "39") (term "0,0,1,0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "39") (term "0,0,0,1,0,0,0,1,1,0"))
                                          (rule "shift_paren_and" (formula "39") (term "0,0,0,1,1,0"))
                                          (rule "shift_paren_and" (formula "39") (term "0,0,0,0,1,1,0"))
                                          (rule "shift_paren_and" (formula "39") (term "0,0,0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "39") (term "0,1,1,0"))
                                          (rule "commute_or" (formula "39") (term "0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "39") (term "0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "39") (term "1,0,0,1,1,0"))
                                          (rule "commute_or" (formula "39") (term "0,1,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "39") (term "0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "39") (term "1,0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "39") (term "0,1,0,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "39") (term "0,0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "39") (term "1,0,0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "39") (term "0,1,0,0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "39") (term "0,0,1,0,0,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "39") (term "0,0,0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "39") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "39") (term "0,1,0,0,0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "39") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "39") (term "0,0,0,0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "39") (term "1,0,0,0,0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "39") (term "0,1,0,0,0,0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "39") (term "0,0,1,0,0,0,0,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "39") (term "0,0,0,0,0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "39") (term "1,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "39") (term "0,1,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "39") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "39") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "shift_paren_or" (formula "39") (term "0,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "39") (term "0,1,1,0"))
                                          (rule "commute_or" (formula "39") (term "0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "39") (term "1,0,1,1,0"))
                                          (rule "commute_or_2" (formula "39") (term "1,1,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "39"))
                                          (rule "cnf_rightDist" (formula "39") (term "0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "39") (term "1,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "39") (term "0,1,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "39") (term "0,1,0,1,1,0"))
                                          (rule "commute_or_2" (formula "39") (term "1,0,1,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "39") (term "0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "39") (term "1,0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "39") (term "0,1,0,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "39") (term "0,0,1,0,1,1,0"))
                                          (rule "commute_or_2" (formula "39") (term "1,0,0,1,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "39"))
                                          (rule "cnf_rightDist" (formula "39") (term "0,0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "39") (term "1,0,0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "39") (term "0,1,0,0,0,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "39"))
                                          (rule "cnf_rightDist" (formula "39") (term "0,0,0,1,0,1,1,0"))
                                          (rule "commute_or_2" (formula "39") (term "1,0,0,0,1,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "39") (term "0,0,0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "39") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "39") (term "0,1,0,0,0,0,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "39"))
                                          (rule "cnf_rightDist" (formula "39") (term "0,0,0,0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "39") (term "1,0,0,0,0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "39") (term "0,1,0,0,0,0,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "39") (term "0,0,0,0,1,0,1,1,0"))
                                          (rule "commute_or_2" (formula "39") (term "1,0,0,0,0,1,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "39"))
                                          (rule "commute_or_2" (formula "39") (term "0,0,1,0,0,0,0,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "39") (term "0,0,0,0,0,1,0,1,1,0"))
                                          (rule "commute_or_2" (formula "39") (term "1,0,0,0,0,0,1,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "39"))
                                          (rule "cnf_rightDist" (formula "39") (term "0,0,0,0,0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "39") (term "1,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "39") (term "0,1,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "39") (term "0,0,0,0,0,1,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "39"))
                                          (rule "commute_or" (formula "39") (term "0,0,0,0,0,0,1,0,1,1,0"))
                                          (rule "commute_or_2" (formula "39") (term "0,1,0,0,0,0,0,1,0,1,1,0"))
                                          (rule "commute_or" (formula "39") (term "0,0,1,0,0,0,0,0,1,0,1,1,0"))
                                           (builtin "One Step Simplification" (formula "39"))
                                          (rule "cnf_rightDist" (formula "39") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "39") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "shift_paren_or" (formula "39") (term "0,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "39") (term "0,0,1,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "39") (term "0,1,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "shift_paren_or" (formula "39") (term "0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "shift_paren_and" (formula "39") (term "0,1,1,0"))
                                          (rule "shift_paren_and" (formula "39") (term "0,0,1,1,0"))
                                          (rule "shift_paren_and" (formula "39") (term "0,0,0,1,1,0"))
                                          (rule "shift_paren_and" (formula "39") (term "0,0,0,0,1,1,0"))
                                          (rule "shift_paren_and" (formula "39") (term "0,0,0,0,0,1,1,0"))
                                          (rule "all_pull_out3" (formula "39") (term "1,0"))
                                          (rule "cnf_rightDist" (formula "39") (term "0,1,0"))
                                          (rule "commute_or_2" (formula "39") (term "1,0,1,0"))
                                          (rule "commute_or_2" (formula "39") (term "0,1,0,1,0"))
                                          (rule "cnf_rightDist" (formula "39") (term "0,0,1,0"))
                                          (rule "commute_or_2" (formula "39") (term "1,0,0,1,0"))
                                          (rule "commute_or_2" (formula "39") (term "0,1,0,0,1,0"))
                                          (rule "shift_paren_or" (formula "39") (term "0,0,1,0,1,0"))
                                          (rule "commute_or_2" (formula "39") (term "0,0,1,0,0,1,0"))
                                          (rule "commute_or" (formula "39") (term "0,0,0,1,0,1,0"))
                                          (rule "cnf_rightDist" (formula "39") (term "0,0,0,1,0"))
                                          (rule "commute_or_2" (formula "39") (term "1,0,0,0,1,0"))
                                          (rule "commute_or_2" (formula "39") (term "0,1,0,0,0,1,0"))
                                          (rule "commute_or_2" (formula "39") (term "0,0,1,0,0,0,1,0"))
                                          (rule "cnf_rightDist" (formula "39") (term "0,0,0,0,1,0"))
                                          (rule "commute_or_2" (formula "39") (term "1,0,0,0,0,1,0"))
                                          (rule "commute_or_2" (formula "39") (term "0,1,0,0,0,0,1,0"))
                                          (rule "shift_paren_or" (formula "39") (term "0,0,0,1,0,0,1,0"))
                                          (rule "commute_or_2" (formula "39") (term "0,0,1,0,0,0,0,1,0"))
                                          (rule "commute_or" (formula "39") (term "0,0,0,0,1,0,0,1,0"))
                                          (rule "cnf_rightDist" (formula "39") (term "0,0,0,0,0,1,0"))
                                          (rule "commute_or_2" (formula "39") (term "1,0,0,0,0,0,1,0"))
                                          (rule "commute_or_2" (formula "39") (term "0,1,0,0,0,0,0,1,0"))
                                          (rule "shift_paren_or" (formula "39") (term "0,0,0,1,0,0,0,1,0"))
                                          (rule "commute_or_2" (formula "39") (term "0,0,0,1,0,0,0,0,1,0"))
                                          (rule "commute_or_2" (formula "39") (term "0,0,1,0,0,0,0,0,1,0"))
                                          (rule "commute_or" (formula "39") (term "0,0,0,0,1,0,0,0,1,0"))
                                          (rule "cnf_rightDist" (formula "39") (term "0,0,0,0,0,0,1,0"))
                                          (rule "commute_or_2" (formula "39") (term "1,0,0,0,0,0,0,1,0"))
                                          (rule "commute_or_2" (formula "39") (term "0,1,0,0,0,0,0,0,1,0"))
                                          (rule "commute_or_2" (formula "39") (term "0,0,1,0,0,0,0,0,0,1,0"))
                                          (rule "cnf_rightDist" (formula "39") (term "0,0,0,0,0,0,0,1,0"))
                                          (rule "commute_or_2" (formula "39") (term "1,0,0,0,0,0,0,0,1,0"))
                                          (rule "commute_or_2" (formula "39") (term "0,1,0,0,0,0,0,0,0,1,0"))
                                          (rule "shift_paren_or" (formula "39") (term "0,0,0,0,1,0,0,0,0,1,0"))
                                          (rule "shift_paren_or" (formula "39") (term "0,0,0,1,0,0,0,0,0,1,0"))
                                          (rule "commute_or_2" (formula "39") (term "0,0,1,0,0,0,0,0,0,0,1,0"))
                                          (rule "commute_or" (formula "39") (term "0,0,0,0,0,1,0,0,0,0,1,0"))
                                          (rule "commute_or" (formula "39") (term "0,0,0,0,1,0,0,0,0,0,1,0"))
                                          (rule "cnf_rightDist" (formula "39") (term "0,0,0,0,0,0,0,0,1,0"))
                                          (rule "commute_or_2" (formula "39") (term "1,0,0,0,0,0,0,0,0,1,0"))
                                          (rule "commute_or_2" (formula "39") (term "0,1,0,0,0,0,0,0,0,0,1,0"))
                                          (rule "shift_paren_or" (formula "39") (term "0,0,0,1,0,0,0,0,0,0,1,0"))
                                          (rule "commute_or_2" (formula "39") (term "0,0,1,0,0,0,0,0,0,0,0,1,0"))
                                          (rule "commute_or" (formula "39") (term "0,0,0,0,1,0,0,0,0,0,0,1,0"))
                                          (rule "allLeft" (formula "12") (inst "t=quotient_0"))
                                          (rule "inEqSimp_commuteLeq" (formula "12") (term "1,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "12") (term "1"))
                                          (rule "inEqSimp_contradInEq0" (formula "12") (term "1,0") (ifseqformula "5"))
                                          (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0"))
                                          (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "12") (term "0,0,0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "12") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "12") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "12") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "12") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "12"))
                                          (rule "allLeft" (formula "13") (inst "t=i_1_0"))
                                          (rule "inEqSimp_commuteGeq" (formula "13") (term "1"))
                                          (rule "applyEq" (formula "13") (term "0,0,0,0") (ifseqformula "39"))
                                          (rule "eqSymm" (formula "13") (term "0,0,0"))
                                          (rule "replace_known_right" (formula "13") (term "0,0,0") (ifseqformula "61"))
                                           (builtin "One Step Simplification" (formula "13"))
                                          (rule "true_left" (formula "13"))
                                          (rule "cnf_rightDist" (formula "40") (term "0,0,0,0,0,0,0,0,0,1,0"))
                                          (rule "commute_or_2" (formula "40") (term "1,0,0,0,0,0,0,0,0,0,1,0"))
                                          (rule "shift_paren_or" (formula "40") (term "0,0,0,1,0,0,0,0,0,0,0,1,0"))
                                          (rule "allLeft" (formula "11") (inst "t=quotient_0"))
                                          (rule "inEqSimp_commuteLeq" (formula "11") (term "1,0"))
                                          (rule "inEqSimp_commuteGeq" (formula "11") (term "1"))
                                          (rule "inEqSimp_contradInEq0" (formula "11") (term "1,0") (ifseqformula "5"))
                                          (rule "inEqSimp_homoInEq1" (formula "11") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0"))
                                          (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "11") (term "0,0,0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "11") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "11") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "11") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "11") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "11"))
                                          (rule "allLeft" (formula "12") (inst "t=i_1_0"))
                                          (rule "replace_known_left" (formula "12") (term "0,0,0") (ifseqformula "40"))
                                           (builtin "One Step Simplification" (formula "12"))
                                          (rule "inEqSimp_commuteGeq" (formula "12") (term "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "23") (term "0") (ifseqformula "44"))
                                          (rule "replace_known_left" (formula "23") (term "0") (ifseqformula "24"))
                                           (builtin "One Step Simplification" (formula "23"))
                                          (rule "true_left" (formula "23"))
                                          (rule "commute_or_2" (formula "42") (term "0,1,0,0,0,0,0,0,0,0,0,1,0"))
                                          (rule "shift_paren_or" (formula "42") (term "0,0,0,1,0,0,0,0,0,0,0,0,1,0"))
                                          (rule "commute_or" (formula "42") (term "0,0,0,0,1,0,0,0,0,0,0,0,1,0"))
                                          (rule "cnf_rightDist" (formula "42") (term "0,0,0,0,0,0,0,0,0,0,1,0"))
                                          (rule "commute_or_2" (formula "42") (term "1,0,0,0,0,0,0,0,0,0,0,1,0"))
                                          (rule "allLeft" (formula "25") (inst "t=l_1"))
                                          (rule "replace_known_right" (formula "25") (term "0,0,0,0,0,0") (ifseqformula "58"))
                                           (builtin "One Step Simplification" (formula "25"))
                                          (rule "inEqSimp_contradInEq0" (formula "25") (term "1,0,0,0") (ifseqformula "5"))
                                          (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0,0"))
                                          (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0,0"))
                                          (rule "polySimp_addComm0" (formula "25") (term "0,0,0,1,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "25") (term "1,1,0,0,1,0,0,0"))
                                          (rule "times_zero_1" (formula "25") (term "1,0,0,1,0,0,0"))
                                          (rule "add_literals" (formula "25") (term "0,0,1,0,0,0"))
                                          (rule "leq_literals" (formula "25") (term "0,1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "25"))
                                          (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0,0,0") (ifseqformula "7"))
                                          (rule "qeq_literals" (formula "25") (term "0,1,0,0,0"))
                                           (builtin "One Step Simplification" (formula "25"))
                                          (rule "commute_or_2" (formula "25") (term "0"))
                                          (rule "commute_or_2" (formula "43") (term "0,0,1,0,0,0,0,0,0,0,0,0,1,0"))
                                          (rule "commute_or_2" (formula "43") (term "0,1,0,0,0,0,0,0,0,0,0,0,1,0"))
                                          (rule "commute_or" (formula "43") (term "0,0,0,0,1,0,0,0,0,0,0,0,0,1,0"))
                                          (rule "cnf_rightDist" (formula "43") (term "0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                          (rule "commute_or_2" (formula "43") (term "1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                          (rule "cut_direct" (formula "14") (term "1"))
                                          (branch "CUT: pow(2, i_2_0) <= quotient_0 * 2 TRUE"
                                              (builtin "One Step Simplification" (formula "15"))
                                             (rule "true_left" (formula "15"))
                                             (rule "replace_known_left" (formula "11") (term "1") (ifseqformula "14"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "true_left" (formula "11"))
                                             (rule "inEqSimp_subsumption0" (formula "30") (ifseqformula "13"))
                                             (rule "inEqSimp_homoInEq0" (formula "30") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "30") (term "0,0"))
                                             (rule "add_literals" (formula "30") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "30") (term "1,0,0"))
                                             (rule "add_literals" (formula "30") (term "0,0"))
                                             (rule "qeq_literals" (formula "30") (term "0"))
                                              (builtin "One Step Simplification" (formula "30"))
                                             (rule "true_left" (formula "30"))
                                             (rule "inEqSimp_antiSymm" (formula "29") (ifseqformula "13"))
                                             (rule "applyEq" (formula "42") (term "1,0,1,0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "29"))
                                             (rule "applyEqRigid" (formula "11") (term "0,1") (ifseqformula "29"))
                                             (rule "inEqSimp_commuteLeq" (formula "11") (term "1"))
                                             (rule "applyEq" (formula "42") (term "1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "27") (term "0,0") (ifseqformula "29"))
                                             (rule "applyEqRigid" (formula "42") (term "1,1,1,1,1,0,0,0,0,1,0") (ifseqformula "29"))
                                             (rule "applyEqRigid" (formula "12") (term "1,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "20") (term "0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "42") (term "1,1,1,1,1,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "42") (term "1,1,0,1,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "42") (term "1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "42") (term "1,0,1,0,0,0,1,0,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "42") (term "1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "42") (term "1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "42") (term "1,1,0,1,0,0,0,0,0,1,0") (ifseqformula "29"))
                                             (rule "applyEqRigid" (formula "42") (term "1,1,0,1,0,0,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "42") (term "1,1,0,1,0,0,0,0,1,0") (ifseqformula "29"))
                                             (rule "applyEqRigid" (formula "42") (term "1,1,0,1,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "42") (term "1,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "21") (term "0") (ifseqformula "29"))
                                             (rule "applyEqRigid" (formula "42") (term "1,0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "42") (term "1,1,1,1,1,0,0,1,0") (ifseqformula "29"))
                                             (rule "applyEqRigid" (formula "42") (term "1,0,1,0,0,0,1,0,0,0,0,0,0,1,0") (ifseqformula "29"))
                                             (rule "applyEqRigid" (formula "36") (term "0") (ifseqformula "29"))
                                             (rule "inEqSimp_homoInEq1" (formula "36"))
                                             (rule "polySimp_mulLiterals" (formula "36") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "36") (term "0"))
                                             (rule "applyEqRigid" (formula "6") (term "0") (ifseqformula "29"))
                                             (rule "inEqSimp_homoInEq1" (formula "6"))
                                             (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "6") (term "0"))
                                             (rule "applyEqRigid" (formula "42") (term "1,0,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "42") (term "1,1,1,1,1,0,0,0,0,0,0,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "42") (term "1,1,0,1,0,0,1,0") (ifseqformula "29"))
                                             (rule "applyEqRigid" (formula "42") (term "1,1,1,1,1,0,0,0,0,0,0,0,0,1,0") (ifseqformula "29"))
                                             (rule "applyEqRigid" (formula "52") (term "1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "42") (term "1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "29"))
                                             (rule "applyEq" (formula "42") (term "1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "29"))
                                             (rule "applyEqRigid" (formula "42") (term "1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "29"))
                                             (rule "applyEqRigid" (formula "13") (term "0") (ifseqformula "29"))
                                             (rule "inEqSimp_homoInEq0" (formula "13"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "13") (term "0"))
                                             (rule "add_literals" (formula "13") (term "1,0"))
                                             (rule "times_zero_1" (formula "13") (term "0"))
                                             (rule "qeq_literals" (formula "13"))
                                             (rule "true_left" (formula "13"))
                                             (rule "applyEqRigid" (formula "41") (term "1,0,1,0,0,0,0,1,0,0,0,0,1,0") (ifseqformula "28"))
                                             (rule "applyEq" (formula "41") (term "1,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0") (ifseqformula "28"))
                                             (rule "applyEqRigid" (formula "41") (term "1,1,1,0,0,0,0,0,0,1,0") (ifseqformula "28"))
                                             (rule "applyEqRigid" (formula "40") (term "1,0,1,1,1,0,0") (ifseqformula "28"))
                                             (rule "applyEq" (formula "41") (term "1,1,1,1,1,0,0,0,1,0") (ifseqformula "28"))
                                             (rule "applyEq" (formula "41") (term "1,0,1,0,0,0,1,0,0,0,1,0") (ifseqformula "28"))
                                             (rule "applyEq" (formula "29") (term "0") (ifseqformula "28"))
                                             (rule "inEqSimp_homoInEq1" (formula "29"))
                                             (rule "polySimp_mulLiterals" (formula "29") (term "1,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "29") (term "0"))
                                             (rule "add_literals" (formula "29") (term "1,0"))
                                             (rule "times_zero_1" (formula "29") (term "0"))
                                             (rule "leq_literals" (formula "29"))
                                             (rule "true_left" (formula "29"))
                                             (rule "applyEqRigid" (formula "40") (term "1,1,0,1,0,0,0,0,0,0,0,1,0") (ifseqformula "28"))
                                             (rule "applyEq" (formula "40") (term "1,1,1,1,1,0,0,0,0,0,1,0") (ifseqformula "28"))
                                             (rule "applyEqRigid" (formula "40") (term "1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "28"))
                                             (rule "applyEqRigid" (formula "39") (term "1,0,1,0,0,0,0") (ifseqformula "28"))
                                             (rule "applyEqRigid" (formula "40") (term "1,0,1,0,0,1,0,1,0") (ifseqformula "28"))
                                             (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "28"))
                                             (rule "applyEq" (formula "35") (term "1") (ifseqformula "28"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "34"))
                                             (rule "polySimp_mulComm0" (formula "34") (term "1"))
                                             (rule "polySimp_rightDist" (formula "34") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "34") (term "1,1"))
                                             (rule "mul_literals" (formula "34") (term "0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                             (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                             (rule "polySimp_rightDist" (formula "6") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                             (rule "mul_literals" (formula "6") (term "0,1"))
                                             (rule "inEqSimp_subsumption6" (formula "19") (ifseqformula "18"))
                                             (rule "greater_literals" (formula "19") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "mul_literals" (formula "19") (term "1,0"))
                                             (rule "leq_literals" (formula "19") (term "0"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "true_left" (formula "19"))
                                             (rule "inEqSimp_subsumption0" (formula "32") (ifseqformula "33"))
                                             (rule "inEqSimp_homoInEq0" (formula "32") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "32") (term "1,0,0"))
                                             (rule "mul_literals" (formula "32") (term "0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "32") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "32") (term "0,0"))
                                             (rule "add_literals" (formula "32") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "32") (term "1,0,0"))
                                             (rule "add_literals" (formula "32") (term "0,0"))
                                             (rule "qeq_literals" (formula "32") (term "0"))
                                              (builtin "One Step Simplification" (formula "32"))
                                             (rule "true_left" (formula "32"))
                                             (rule "inEqSimp_contradInEq3" (formula "11") (term "1") (ifseqformula "35"))
                                             (rule "greater_literals" (formula "11") (term "0,0,1"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "polySimp_rightDist" (formula "11") (term "0,0,1"))
                                             (rule "mul_literals" (formula "11") (term "0,0,0,1"))
                                             (rule "inEqSimp_homoInEq1" (formula "11") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "11") (term "0,1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0,0,1"))
                                             (rule "polySimp_addComm0" (formula "11") (term "0,0,0,1"))
                                             (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0,1"))
                                             (rule "add_literals" (formula "11") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "11") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "11") (term "0,0,1"))
                                             (rule "leq_literals" (formula "11") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "inEqSimp_subsumption4" (formula "19") (ifseqformula "26"))
                                             (rule "mul_literals" (formula "19") (term "0,1,0"))
                                             (rule "greater_literals" (formula "19") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "leq_literals" (formula "19") (term "0"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "true_left" (formula "19"))
                                             (rule "elimGcdLeq_antec" (formula "6") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcdRightDiv=add(Z(neglit(2(#))), quotient_0)"))
                                             (rule "leq_literals" (formula "6") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "neg_literal" (formula "6") (term "0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                             (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "6") (term "0,0"))
                                             (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "6") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "6") (term "0,0,0"))
                                             (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                             (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                             (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                             (rule "add_literals" (formula "6") (term "0,0"))
                                             (rule "qeq_literals" (formula "6") (term "0"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "6"))
                                             (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                             (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                             (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
                                             (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                             (rule "add_literals" (formula "5") (term "0,0"))
                                             (rule "qeq_literals" (formula "5") (term "0"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "true_left" (formula "5"))
                                             (rule "elimGcdGeq" (formula "36") (term "1,0,1,0,0,0,0,0,0,0,1,0") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcdRightDiv=quotient_0"))
                                             (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,0,1,0,1,0,0,0,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "36") (term "0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0,0,1,0,1,0,0,0,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,1,0"))
                                             (rule "sub_literals" (formula "36") (term "0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,1,0,1,0,1,0,0,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "36") (term "1,1,0,1,0,1,0,1,0,0,0,0,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "36") (term "1,0,1,0,1,0,1,0,0,0,0,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "36") (term "0,1,0,1,0,1,0,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,0,0,1,0,1,0,0,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "36") (term "1,1,0,0,0,1,0,1,0,0,0,0,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "36") (term "1,0,0,0,1,0,1,0,0,0,0,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "36") (term "0,0,0,1,0,1,0,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "36") (term "0,0,1,0,1,0,1,0,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "36") (term "0,1,0,1,0,1,0,0,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "36") (term "1,0,1,0,1,0,1,0,0,0,0,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "36") (term "0,1,0,1,0,1,0,0,0,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "36") (term "1,0,1,0,1,0,0,0,0,0,0,0,1,0"))
                                              (builtin "One Step Simplification" (formula "36"))
                                             (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,1,0,1,0,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,0,1,0,1,0,0,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "36") (term "1,1,0,0,1,0,1,0,0,0,0,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "36") (term "1,0,0,1,0,1,0,0,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "36") (term "0,0,1,0,1,0,0,0,0,0,0,0,1,0"))
                                             (rule "qeq_literals" (formula "36") (term "0,1,0,1,0,0,0,0,0,0,0,1,0"))
                                              (builtin "One Step Simplification" (formula "36"))
                                             (rule "elimGcdGeq" (formula "12") (term "1,0") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=n") (inst "elimGcdRightDiv=quotient_0"))
                                             (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0,0,1,0"))
                                             (rule "sub_literals" (formula "12") (term "0,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,1,0"))
                                             (rule "mul_literals" (formula "12") (term "0,0,0,0,0,1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,1,0,1,0"))
                                             (rule "add_literals" (formula "12") (term "1,1,0,1,0,1,0"))
                                             (rule "times_zero_1" (formula "12") (term "1,0,1,0,1,0"))
                                             (rule "add_zero_right" (formula "12") (term "0,1,0,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0,0,1,0"))
                                             (rule "add_literals" (formula "12") (term "1,1,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "12") (term "1,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "12") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "0,0,1,0,1,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "12") (term "0,1,0,1,0"))
                                             (rule "add_literals" (formula "12") (term "1,0,1,0,1,0"))
                                             (rule "times_zero_1" (formula "12") (term "0,1,0,1,0"))
                                             (rule "leq_literals" (formula "12") (term "1,0,1,0"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0,1,0"))
                                             (rule "add_literals" (formula "12") (term "1,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "12") (term "1,0,0,1,0"))
                                             (rule "add_literals" (formula "12") (term "0,0,1,0"))
                                             (rule "qeq_literals" (formula "12") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "elimGcdGeq" (formula "11") (term "1,0") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=n") (inst "elimGcdRightDiv=quotient_0"))
                                             (rule "mul_literals" (formula "11") (term "0,0,0,0,0,1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,1,0"))
                                             (rule "sub_literals" (formula "11") (term "0,0,0,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,1,0,1,0"))
                                             (rule "add_literals" (formula "11") (term "1,1,0,1,0,1,0"))
                                             (rule "times_zero_1" (formula "11") (term "1,0,1,0,1,0"))
                                             (rule "add_zero_right" (formula "11") (term "0,1,0,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0,0,1,0"))
                                             (rule "add_literals" (formula "11") (term "1,1,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "11") (term "1,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "11") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0,1,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "11") (term "0,1,0,1,0"))
                                             (rule "add_literals" (formula "11") (term "1,0,1,0,1,0"))
                                             (rule "times_zero_1" (formula "11") (term "0,1,0,1,0"))
                                             (rule "leq_literals" (formula "11") (term "1,0,1,0"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0,1,0"))
                                             (rule "add_literals" (formula "11") (term "1,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "11") (term "1,0,0,1,0"))
                                             (rule "add_literals" (formula "11") (term "0,0,1,0"))
                                             (rule "qeq_literals" (formula "11") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "polyDiv_pullOut" (formula "23") (term "0") (inst "polyDivCoeff=quotient_0"))
                                             (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,2,0"))
                                             (rule "equal_literals" (formula "23") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "23"))
                                             (rule "polySimp_pullOutFactor0" (formula "23") (term "0,0,0"))
                                             (rule "add_literals" (formula "23") (term "1,0,0,0"))
                                             (rule "times_zero_1" (formula "23") (term "0,0,0"))
                                             (rule "div_literals" (formula "23") (term "0,0"))
                                             (rule "add_zero_left" (formula "23") (term "0"))
                                              (builtin "One Step Simplification" (formula "23"))
                                             (rule "true_left" (formula "23"))
                                             (rule "elimGcdGeq" (formula "35") (term "1,0,1,0,0,1,0") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcdRightDiv=quotient_0"))
                                             (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,0,1,0,1,0,0,1,0"))
                                             (rule "mul_literals" (formula "35") (term "0,0,0,0,0,1,0,1,0,1,0,0,1,0"))
                                             (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0,0,1,0,1,0,0,1,0"))
                                             (rule "sub_literals" (formula "35") (term "0,0,0,0,0,0,0,1,0,1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,0,1,0,1,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,1,0,1,0,1,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "1,1,0,1,0,1,0,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "35") (term "1,0,1,0,1,0,1,0,0,1,0"))
                                             (rule "add_zero_right" (formula "35") (term "0,1,0,1,0,1,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0,0,1,0,1,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "1,1,0,0,0,1,0,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "35") (term "1,0,0,0,1,0,1,0,0,1,0"))
                                             (rule "add_zero_right" (formula "35") (term "0,0,0,1,0,1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "35") (term "0,0,1,0,1,0,1,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "35") (term "0,1,0,1,0,1,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "1,0,1,0,1,0,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "35") (term "0,1,0,1,0,1,0,0,1,0"))
                                             (rule "leq_literals" (formula "35") (term "1,0,1,0,1,0,0,1,0"))
                                              (builtin "One Step Simplification" (formula "35"))
                                             (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,1,0,1,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0,1,0,1,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "1,1,0,0,1,0,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "35") (term "1,0,0,1,0,1,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "0,0,1,0,1,0,0,1,0"))
                                             (rule "qeq_literals" (formula "35") (term "0,1,0,1,0,0,1,0"))
                                              (builtin "One Step Simplification" (formula "35"))
                                             (rule "elimGcdGeq" (formula "35") (term "1,0,1,0,0,0,1,0") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcdRightDiv=quotient_0"))
                                             (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,0,1,0,1,0,0,0,1,0"))
                                             (rule "sub_literals" (formula "35") (term "0,0,0,0,0,0,0,1,0,1,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0,0,1,0,1,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,0,1,0,1,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "35") (term "0,0,0,0,0,1,0,1,0,1,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0,0,1,0,1,0,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "1,1,0,0,0,1,0,1,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "35") (term "1,0,0,0,1,0,1,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "35") (term "0,0,0,1,0,1,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,1,0,1,0,1,0,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "1,1,0,1,0,1,0,1,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "35") (term "1,0,1,0,1,0,1,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "35") (term "0,1,0,1,0,1,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,1,0,1,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0,0,1,0,1,0,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "1,1,0,0,0,1,0,1,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "35") (term "1,0,0,0,1,0,1,0,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "0,0,0,1,0,1,0,0,0,1,0"))
                                             (rule "qeq_literals" (formula "35") (term "0,0,1,0,1,0,0,0,1,0"))
                                              (builtin "One Step Simplification" (formula "35"))
                                             (rule "polySimp_mulComm0" (formula "35") (term "0,0,0,1,0,1,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "35") (term "0,0,1,0,1,0,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "1,0,0,1,0,1,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "35") (term "0,0,1,0,1,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "35") (term "0,1,0,1,0,0,0,1,0"))
                                              (builtin "One Step Simplification" (formula "35"))
                                             (rule "elimGcdGeq" (formula "35") (term "1,0,1,0,0,0,0,0,0,0,0,0,1,0") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcdRightDiv=quotient_0"))
                                             (rule "sub_literals" (formula "35") (term "0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "35") (term "0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "1,1,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "35") (term "1,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "35") (term "0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "1,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "35") (term "1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "35") (term "0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "1,1,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "35") (term "1,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "qeq_literals" (formula "35") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0"))
                                              (builtin "One Step Simplification" (formula "35"))
                                             (rule "polySimp_mulComm0" (formula "35") (term "0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "35") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "1,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "35") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "35") (term "0,1,0,1,0,0,0,0,0,0,0,0,0,1,0"))
                                              (builtin "One Step Simplification" (formula "35"))
                                             (rule "elimGcdGeq" (formula "35") (term "1,0,1,0,0,0,0,1,0") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcdRightDiv=quotient_0"))
                                             (rule "mul_literals" (formula "35") (term "0,0,0,0,0,1,0,1,0,1,0,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,0,1,0,1,0,0,0,0,1,0"))
                                             (rule "sub_literals" (formula "35") (term "0,0,0,0,0,0,0,1,0,1,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,0,1,0,1,0,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,1,0,1,0,1,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "1,1,0,1,0,1,0,1,0,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "35") (term "1,0,1,0,1,0,1,0,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "35") (term "0,1,0,1,0,1,0,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0,0,1,0,1,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "1,1,0,0,0,1,0,1,0,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "35") (term "1,0,0,0,1,0,1,0,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "35") (term "0,0,0,1,0,1,0,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "35") (term "0,0,1,0,1,0,1,0,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "35") (term "0,1,0,1,0,1,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "1,0,1,0,1,0,1,0,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "35") (term "0,1,0,1,0,1,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "35") (term "1,0,1,0,1,0,0,0,0,1,0"))
                                              (builtin "One Step Simplification" (formula "35"))
                                             (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,1,0,1,0,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0,1,0,1,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "1,1,0,0,1,0,1,0,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "35") (term "1,0,0,1,0,1,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "0,0,1,0,1,0,0,0,0,1,0"))
                                             (rule "qeq_literals" (formula "35") (term "0,1,0,1,0,0,0,0,1,0"))
                                              (builtin "One Step Simplification" (formula "35"))
                                             (rule "elimGcdGeq" (formula "35") (term "1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcdRightDiv=quotient_0"))
                                             (rule "mul_literals" (formula "35") (term "0,0,0,0,0,1,0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "sub_literals" (formula "35") (term "0,0,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,1,0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "1,1,0,1,0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "35") (term "1,0,1,0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "35") (term "0,1,0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "1,1,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "35") (term "1,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "35") (term "0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "35") (term "0,0,1,0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "35") (term "0,1,0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "1,0,1,0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "35") (term "0,1,0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "35") (term "1,0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                              (builtin "One Step Simplification" (formula "35"))
                                             (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "1,1,0,0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "35") (term "1,0,0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "0,0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "qeq_literals" (formula "35") (term "0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                              (builtin "One Step Simplification" (formula "35"))
                                             (rule "elimGcdGeq" (formula "35") (term "1,1,0,0,0,0,0,0,1,0") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcdRightDiv=quotient_0"))
                                             (rule "sub_literals" (formula "35") (term "0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,0,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "35") (term "0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,0,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0,0,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "1,1,0,0,0,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "35") (term "1,0,0,0,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "35") (term "0,0,0,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,1,0,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "1,1,0,1,0,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "35") (term "1,0,1,0,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "35") (term "0,1,0,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0,0,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "1,1,0,0,0,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "35") (term "1,0,0,0,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "0,0,0,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "qeq_literals" (formula "35") (term "0,0,1,1,0,0,0,0,0,0,1,0"))
                                              (builtin "One Step Simplification" (formula "35"))
                                             (rule "polySimp_mulComm0" (formula "35") (term "0,0,0,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "35") (term "0,0,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "1,0,0,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "35") (term "0,0,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "35") (term "0,1,1,0,0,0,0,0,0,1,0"))
                                              (builtin "One Step Simplification" (formula "35"))
                                             (rule "elimGcdGeq" (formula "35") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcdRightDiv=quotient_0"))
                                             (rule "sub_literals" (formula "35") (term "0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "35") (term "0,0,0,0,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "1,1,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "35") (term "1,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "35") (term "0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "1,1,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "35") (term "1,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "35") (term "0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "35") (term "0,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "35") (term "0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "1,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "35") (term "0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "35") (term "1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                              (builtin "One Step Simplification" (formula "35"))
                                             (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "1,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "35") (term "1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "qeq_literals" (formula "35") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                              (builtin "One Step Simplification" (formula "35"))
                                             (rule "elimGcdGeq" (formula "35") (term "1,0,1,0,1,0") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcdRightDiv=quotient_0"))
                                             (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0,0,1,0,1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,0,1,0,1,0,1,0"))
                                             (rule "mul_literals" (formula "35") (term "0,0,0,0,0,1,0,1,0,1,0,1,0"))
                                             (rule "sub_literals" (formula "35") (term "0,0,0,0,0,0,0,1,0,1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,0,1,0,1,0,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,1,0,1,0,1,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "1,1,0,1,0,1,0,1,0,1,0"))
                                             (rule "times_zero_1" (formula "35") (term "1,0,1,0,1,0,1,0,1,0"))
                                             (rule "add_zero_right" (formula "35") (term "0,1,0,1,0,1,0,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0,0,1,0,1,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "1,1,0,0,0,1,0,1,0,1,0"))
                                             (rule "times_zero_1" (formula "35") (term "1,0,0,0,1,0,1,0,1,0"))
                                             (rule "add_zero_right" (formula "35") (term "0,0,0,1,0,1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "35") (term "0,0,1,0,1,0,1,0,1,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "35") (term "0,1,0,1,0,1,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "1,0,1,0,1,0,1,0,1,0"))
                                             (rule "times_zero_1" (formula "35") (term "0,1,0,1,0,1,0,1,0"))
                                             (rule "leq_literals" (formula "35") (term "1,0,1,0,1,0,1,0"))
                                              (builtin "One Step Simplification" (formula "35"))
                                             (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,1,0,1,0,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0,1,0,1,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "1,1,0,0,1,0,1,0,1,0"))
                                             (rule "times_zero_1" (formula "35") (term "1,0,0,1,0,1,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "0,0,1,0,1,0,1,0"))
                                             (rule "qeq_literals" (formula "35") (term "0,1,0,1,0,1,0"))
                                              (builtin "One Step Simplification" (formula "35"))
                                             (rule "elimGcdGeq" (formula "35") (term "1,0,1,0,0,0,0,0,1,0") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcdRightDiv=quotient_0"))
                                             (rule "mul_literals" (formula "35") (term "0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,0,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,0,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "sub_literals" (formula "35") (term "0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,1,0,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "1,1,0,1,0,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "35") (term "1,0,1,0,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "35") (term "0,1,0,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0,0,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "1,1,0,0,0,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "35") (term "1,0,0,0,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "35") (term "0,0,0,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "35") (term "0,0,1,0,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "35") (term "0,1,0,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "1,0,1,0,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "35") (term "0,1,0,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "35") (term "1,0,1,0,1,0,0,0,0,0,1,0"))
                                              (builtin "One Step Simplification" (formula "35"))
                                             (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "1,1,0,0,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "35") (term "1,0,0,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "0,0,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "qeq_literals" (formula "35") (term "0,1,0,1,0,0,0,0,0,1,0"))
                                              (builtin "One Step Simplification" (formula "35"))
                                             (rule "inEqSimp_antiSymm" (formula "13") (ifseqformula "10"))
                                             (rule "applyEq" (formula "10") (term "0") (ifseqformula "13"))
                                             (rule "inEqSimp_homoInEq0" (formula "10"))
                                             (rule "polySimp_pullOutFactor1" (formula "10") (term "0"))
                                             (rule "add_literals" (formula "10") (term "1,0"))
                                             (rule "times_zero_1" (formula "10") (term "0"))
                                             (rule "qeq_literals" (formula "10"))
                                             (rule "true_left" (formula "10"))
                                             (rule "applyEqRigid" (formula "33") (term "0,0,2,0") (ifseqformula "12"))
                                             (rule "close" (formula "50") (ifseqformula "33"))
                                          )
                                          (branch "CUT: pow(2, i_2_0) <= quotient_0 * 2 FALSE"
                                              (builtin "One Step Simplification" (formula "14"))
                                             (rule "notLeft" (formula "14"))
                                             (rule "replace_known_right" (formula "11") (term "1") (ifseqformula "58"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "notLeft" (formula "11"))
                                             (rule "inEqSimp_leqRight" (formula "58"))
                                             (rule "polySimp_mulAssoc" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "inEqSimp_subsumption1" (formula "29") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "29") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,0"))
                                             (rule "add_literals" (formula "29") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "29") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "29") (term "0,0"))
                                             (rule "qeq_literals" (formula "29") (term "0"))
                                              (builtin "One Step Simplification" (formula "29"))
                                             (rule "true_left" (formula "29"))
                                             (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "29"))
                                             (rule "applyEqRigid" (formula "42") (term "1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "13") (term "0,1") (ifseqformula "1"))
                                             (rule "inEqSimp_commuteLeq" (formula "13") (term "1"))
                                             (rule "applyEqRigid" (formula "22") (term "0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "22"))
                                             (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0"))
                                             (rule "mul_literals" (formula "22") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                             (rule "add_literals" (formula "22") (term "0,0"))
                                             (rule "applyEqRigid" (formula "42") (term "1,1,0,1,0,0,0,0,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "42") (term "1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "42") (term "1,1,1,1,1,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "42") (term "1,0,1,0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "42") (term "1,1,1,1,1,0,0,0,0,1,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "42") (term "1,0,1,0,0,0,1,0,0,0,1,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "42") (term "1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "42") (term "1,1,0,1,0,0,1,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "52") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "42") (term "1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "42") (term "1,1,1,1,1,0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "42") (term "1,0,1,0,0,0,1,0,0,1,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "30") (term "0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "30"))
                                             (rule "polySimp_pullOutFactor1" (formula "30") (term "0"))
                                             (rule "add_literals" (formula "30") (term "1,0"))
                                             (rule "times_zero_1" (formula "30") (term "0"))
                                             (rule "qeq_literals" (formula "30"))
                                             (rule "true_left" (formula "30"))
                                             (rule "applyEqRigid" (formula "41") (term "1,1,0,1,0,1,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "41") (term "1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "41") (term "1,1,1,1,1,0,1,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "2"))
                                             (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                             (rule "add_literals" (formula "2") (term "1,0"))
                                             (rule "times_zero_1" (formula "2") (term "0"))
                                             (rule "leq_literals" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "applyEq" (formula "40") (term "1,1,1,1,1,0,0,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "40") (term "1,1,1,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "40") (term "1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "7") (term "0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "7"))
                                             (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                             (rule "mul_literals" (formula "7") (term "0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0"))
                                             (rule "polySimp_addComm1" (formula "7") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                             (rule "add_literals" (formula "7") (term "0,0,0"))
                                             (rule "applyEqRigid" (formula "40") (term "1,1,1,1,1,0,0,0,0,0,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "40") (term "1,0,1,0,0,1,0,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "40") (term "1,0,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "40") (term "1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "40") (term "1,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "40") (term "1,0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "14") (term "1,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "34") (term "0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "34"))
                                             (rule "polySimp_mulComm0" (formula "34") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "34") (term "1,0"))
                                             (rule "mul_literals" (formula "34") (term "0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0"))
                                             (rule "polySimp_addComm1" (formula "34") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                                             (rule "add_literals" (formula "34") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "34") (term "0,0"))
                                             (rule "applyEqRigid" (formula "40") (term "1,1,0,1,0,0,0,0,0,1,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "40") (term "1,1,0,1,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "39") (term "1,0,1,0,0,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "40") (term "1,0,1,0,0,0,0,1,0,0,0,0,1,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "40") (term "1,1,0,1,0,0,0,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "40") (term "1,1,1,1,1,0,0,0,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "40") (term "1,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "20") (term "0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "20"))
                                             (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                             (rule "mul_literals" (formula "20") (term "0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                             (rule "add_literals" (formula "20") (term "0,0"))
                                             (rule "applyEqRigid" (formula "40") (term "1,0,1,0,0,0,1,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "39") (term "1,0,1,1,1,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "40") (term "1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "40") (term "1,1,0,1,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "35") (term "1") (ifseqformula "1"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                             (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                             (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                             (rule "polySimp_rightDist" (formula "7") (term "1"))
                                             (rule "mul_literals" (formula "7") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "34"))
                                             (rule "polySimp_mulLiterals" (formula "34") (term "1"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "20"))
                                             (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                             (rule "inEqSimp_contradInEq3" (formula "12") (term "1") (ifseqformula "36"))
                                             (rule "greater_literals" (formula "12") (term "0,0,1"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "polySimp_rightDist" (formula "12") (term "0,0,1"))
                                             (rule "mul_literals" (formula "12") (term "0,0,0,1"))
                                             (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,1"))
                                             (rule "mul_literals" (formula "12") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "12") (term "0,0,1"))
                                             (rule "polySimp_addComm1" (formula "12") (term "0,0,0,1"))
                                             (rule "add_literals" (formula "12") (term "0,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0,1"))
                                             (rule "add_literals" (formula "12") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "12") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "12") (term "0,0,1"))
                                             (rule "leq_literals" (formula "12") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "inEqSimp_subsumption6" (formula "20") (ifseqformula "19"))
                                             (rule "mul_literals" (formula "20") (term "1,1,0"))
                                             (rule "greater_literals" (formula "20") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "leq_literals" (formula "20") (term "0"))
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "true_left" (formula "20"))
                                             (rule "inEqSimp_subsumption4" (formula "7") (ifseqformula "6"))
                                             (rule "greater_literals" (formula "7") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                             (rule "mul_literals" (formula "7") (term "0,0,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                             (rule "polySimp_pullOutFactor1" (formula "7") (term "0,0"))
                                             (rule "add_literals" (formula "7") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "7") (term "0,0"))
                                             (rule "qeq_literals" (formula "7") (term "0"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "true_left" (formula "7"))
                                             (rule "elimGcdLeq_antec" (formula "19") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(1(1(9(0(7(8(6(3(5(#))))))))))"))
                                             (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "19") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0"))
                                             (rule "neg_literal" (formula "19") (term "0,0,0,0,0,0"))
                                             (rule "polySimp_addLiterals" (formula "19") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "19") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                                             (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "19") (term "0,0"))
                                             (rule "qeq_literals" (formula "19") (term "0"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "inEqSimp_subsumption0" (formula "26") (ifseqformula "19"))
                                             (rule "leq_literals" (formula "26") (term "0"))
                                              (builtin "One Step Simplification" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "elimGcdGeq" (formula "36") (term "1,0,1,0,0,0,1,0") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcdRightDiv=add(Z(1(#)), quotient_0)"))
                                             (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,0,1,0,1,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "36") (term "0,0,0,0,0,1,0,1,0,1,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0,0,1,0,1,0,0,0,1,0"))
                                             (rule "sub_literals" (formula "36") (term "0,0,0,0,0,0,0,1,0,1,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0,0,0,1,0,1,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,1,0,1,0,1,0,0,0,1,0"))
                                             (rule "add_literals" (formula "36") (term "1,1,0,1,0,1,0,1,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "36") (term "1,0,1,0,1,0,1,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "36") (term "0,1,0,1,0,1,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,0,0,1,0,1,0,0,0,1,0"))
                                             (rule "add_literals" (formula "36") (term "1,1,0,0,0,1,0,1,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "36") (term "1,0,0,0,1,0,1,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "36") (term "0,0,0,1,0,1,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "36") (term "0,0,1,0,1,0,1,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "36") (term "0,0,0,1,0,1,0,1,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,1,0,1,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0,1,0,1,0,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "36") (term "0,1,0,1,0,1,0,0,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "36") (term "0,0,1,0,1,0,1,0,0,0,1,0"))
                                             (rule "add_literals" (formula "36") (term "0,0,0,1,0,1,0,1,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,1,0,1,0,1,0,0,0,1,0"))
                                             (rule "add_literals" (formula "36") (term "1,1,0,1,0,1,0,1,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "36") (term "1,0,1,0,1,0,1,0,0,0,1,0"))
                                             (rule "add_literals" (formula "36") (term "0,1,0,1,0,1,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "36") (term "1,0,1,0,1,0,0,0,1,0"))
                                              (builtin "One Step Simplification" (formula "36"))
                                             (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,1,0,1,0,0,0,1,0"))
                                             (rule "add_literals" (formula "36") (term "0,0,0,0,1,0,1,0,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,1,0,0,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "36") (term "0,0,0,1,0,1,0,0,0,1,0"))
                                             (rule "add_literals" (formula "36") (term "0,0,0,0,1,0,1,0,0,0,1,0"))
                                             (rule "add_zero_left" (formula "36") (term "0,0,0,1,0,1,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "36") (term "0,0,1,0,1,0,0,0,1,0"))
                                             (rule "add_literals" (formula "36") (term "1,0,0,1,0,1,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "36") (term "0,0,1,0,1,0,0,0,1,0"))
                                             (rule "qeq_literals" (formula "36") (term "0,1,0,1,0,0,0,1,0"))
                                              (builtin "One Step Simplification" (formula "36"))
                                             (rule "elimGcdGeq" (formula "13") (term "1,0") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=n") (inst "elimGcdRightDiv=add(Z(1(#)), quotient_0)"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0,1,0"))
                                             (rule "mul_literals" (formula "13") (term "0,0,0,0,0,1,0,1,0"))
                                             (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,1,0"))
                                             (rule "sub_literals" (formula "13") (term "0,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,1,0,1,0"))
                                             (rule "add_literals" (formula "13") (term "1,1,0,1,0,1,0"))
                                             (rule "times_zero_1" (formula "13") (term "1,0,1,0,1,0"))
                                             (rule "add_zero_right" (formula "13") (term "0,1,0,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0,0,1,0"))
                                             (rule "add_literals" (formula "13") (term "1,1,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "13") (term "1,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "13") (term "0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "13") (term "0,0,1,0,1,0"))
                                             (rule "mul_literals" (formula "13") (term "0,0,0,1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "13") (term "0,1,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "13") (term "0,0,1,0,1,0"))
                                             (rule "add_literals" (formula "13") (term "0,0,0,1,0,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,1,0,1,0"))
                                             (rule "add_literals" (formula "13") (term "1,1,0,1,0,1,0"))
                                             (rule "times_zero_1" (formula "13") (term "1,0,1,0,1,0"))
                                             (rule "add_literals" (formula "13") (term "0,1,0,1,0"))
                                             (rule "leq_literals" (formula "13") (term "1,0,1,0"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,1,0"))
                                             (rule "add_literals" (formula "13") (term "0,0,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "13") (term "0,0,0,1,0"))
                                             (rule "add_literals" (formula "13") (term "0,0,0,0,1,0"))
                                             (rule "add_zero_left" (formula "13") (term "0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "13") (term "0,0,1,0"))
                                             (rule "add_literals" (formula "13") (term "1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "13") (term "0,0,1,0"))
                                             (rule "qeq_literals" (formula "13") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "elimGcdGeq" (formula "12") (term "1,0") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=n") (inst "elimGcdRightDiv=add(Z(1(#)), quotient_0)"))
                                             (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0,0,1,0"))
                                             (rule "sub_literals" (formula "12") (term "0,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "12") (term "0,0,0,0,0,1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0,0,1,0"))
                                             (rule "add_literals" (formula "12") (term "1,1,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "12") (term "1,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "12") (term "0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,1,0,1,0"))
                                             (rule "add_literals" (formula "12") (term "1,1,0,1,0,1,0"))
                                             (rule "times_zero_1" (formula "12") (term "1,0,1,0,1,0"))
                                             (rule "add_zero_right" (formula "12") (term "0,1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "12") (term "0,0,1,0,1,0"))
                                             (rule "mul_literals" (formula "12") (term "0,0,0,1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "12") (term "0,0,0,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "12") (term "0,1,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "12") (term "0,0,1,0,1,0"))
                                             (rule "add_literals" (formula "12") (term "0,0,0,1,0,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,1,0,1,0"))
                                             (rule "add_literals" (formula "12") (term "1,1,0,1,0,1,0"))
                                             (rule "times_zero_1" (formula "12") (term "1,0,1,0,1,0"))
                                             (rule "add_literals" (formula "12") (term "0,1,0,1,0"))
                                             (rule "leq_literals" (formula "12") (term "1,0,1,0"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "12") (term "0,0,0,1,0"))
                                             (rule "add_literals" (formula "12") (term "0,0,0,0,1,0"))
                                             (rule "add_zero_left" (formula "12") (term "0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "12") (term "0,0,1,0"))
                                             (rule "add_literals" (formula "12") (term "1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "12") (term "0,0,1,0"))
                                             (rule "qeq_literals" (formula "12") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "polyDiv_pullOut" (formula "25") (term "0") (inst "polyDivCoeff=quotient_0"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,2,0"))
                                             (rule "equal_literals" (formula "25") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,0,0"))
                                             (rule "add_literals" (formula "25") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "25") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "25") (term "0,0,0"))
                                             (rule "div_literals" (formula "25") (term "0,0"))
                                             (rule "add_zero_left" (formula "25") (term "0"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "true_left" (formula "25"))
                                             (rule "elimGcdGeq" (formula "35") (term "1,0,1,0,0,1,0") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcdRightDiv=add(Z(1(#)), quotient_0)"))
                                             (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,0,1,0,1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,0,1,0,1,0,0,1,0"))
                                             (rule "sub_literals" (formula "35") (term "0,0,0,0,0,0,0,1,0,1,0,0,1,0"))
                                             (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0,0,1,0,1,0,0,1,0"))
                                             (rule "mul_literals" (formula "35") (term "0,0,0,0,0,1,0,1,0,1,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0,0,1,0,1,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "1,1,0,0,0,1,0,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "35") (term "1,0,0,0,1,0,1,0,0,1,0"))
                                             (rule "add_zero_right" (formula "35") (term "0,0,0,1,0,1,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,1,0,1,0,1,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "1,1,0,1,0,1,0,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "35") (term "1,0,1,0,1,0,1,0,0,1,0"))
                                             (rule "add_zero_right" (formula "35") (term "0,1,0,1,0,1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,1,0,1,0,0,1,0"))
                                             (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,1,0,1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "35") (term "0,0,1,0,1,0,1,0,0,1,0"))
                                             (rule "mul_literals" (formula "35") (term "0,0,0,1,0,1,0,1,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,0,1,0,1,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "0,0,0,0,0,1,0,1,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "35") (term "0,1,0,1,0,1,0,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "35") (term "0,0,1,0,1,0,1,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "0,0,0,1,0,1,0,1,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,1,0,1,0,1,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "1,1,0,1,0,1,0,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "35") (term "1,0,1,0,1,0,1,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "0,1,0,1,0,1,0,0,1,0"))
                                             (rule "leq_literals" (formula "35") (term "1,0,1,0,1,0,0,1,0"))
                                              (builtin "One Step Simplification" (formula "35"))
                                             (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,1,0,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "35") (term "0,0,0,1,0,1,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "0,0,0,0,1,0,1,0,0,1,0"))
                                             (rule "add_zero_left" (formula "35") (term "0,0,0,1,0,1,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "35") (term "0,0,1,0,1,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "1,0,0,1,0,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "35") (term "0,0,1,0,1,0,0,1,0"))
                                             (rule "qeq_literals" (formula "35") (term "0,1,0,1,0,0,1,0"))
                                              (builtin "One Step Simplification" (formula "35"))
                                             (rule "elimGcdGeq" (formula "35") (term "1,0,1,0,0,0,0,0,0,0,1,0") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcdRightDiv=add(Z(1(#)), quotient_0)"))
                                             (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,0,1,0,1,0,0,0,0,0,0,0,1,0"))
                                             (rule "sub_literals" (formula "35") (term "0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "35") (term "0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,0,1,0,1,0,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,1,0,1,0,1,0,0,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "1,1,0,1,0,1,0,1,0,0,0,0,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "35") (term "1,0,1,0,1,0,1,0,0,0,0,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "35") (term "0,1,0,1,0,1,0,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0,0,1,0,1,0,0,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "1,1,0,0,0,1,0,1,0,0,0,0,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "35") (term "1,0,0,0,1,0,1,0,0,0,0,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "35") (term "0,0,0,1,0,1,0,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "35") (term "0,0,1,0,1,0,1,0,0,0,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "35") (term "0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,1,0,1,0,0,0,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,1,0,1,0,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "35") (term "0,1,0,1,0,1,0,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "35") (term "0,0,1,0,1,0,1,0,0,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,1,0,1,0,1,0,0,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "1,1,0,1,0,1,0,1,0,0,0,0,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "35") (term "1,0,1,0,1,0,1,0,0,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "0,1,0,1,0,1,0,0,0,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "35") (term "1,0,1,0,1,0,0,0,0,0,0,0,1,0"))
                                              (builtin "One Step Simplification" (formula "35"))
                                             (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,1,0,1,0,0,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "0,0,0,0,1,0,1,0,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,1,0,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "35") (term "0,0,0,1,0,1,0,0,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "0,0,0,0,1,0,1,0,0,0,0,0,0,0,1,0"))
                                             (rule "add_zero_left" (formula "35") (term "0,0,0,1,0,1,0,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "35") (term "0,0,1,0,1,0,0,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "1,0,0,1,0,1,0,0,0,0,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "35") (term "0,0,1,0,1,0,0,0,0,0,0,0,1,0"))
                                             (rule "qeq_literals" (formula "35") (term "0,1,0,1,0,0,0,0,0,0,0,1,0"))
                                              (builtin "One Step Simplification" (formula "35"))
                                             (rule "elimGcdGeq" (formula "35") (term "1,1,0,0,0,0,0,0,1,0") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcdRightDiv=add(Z(1(#)), quotient_0)"))
                                             (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,0,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,0,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "sub_literals" (formula "35") (term "0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "35") (term "0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0,0,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "1,1,0,0,0,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "35") (term "1,0,0,0,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "35") (term "0,0,0,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,1,0,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "1,1,0,1,0,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "35") (term "1,0,1,0,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "35") (term "0,1,0,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "35") (term "0,0,1,0,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "35") (term "0,0,0,1,0,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,0,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "0,0,0,0,0,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "35") (term "0,1,0,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "35") (term "0,0,1,0,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "0,0,0,1,0,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,1,0,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "1,1,0,1,0,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "35") (term "1,0,1,0,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "0,1,0,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "35") (term "1,0,1,1,0,0,0,0,0,0,1,0"))
                                              (builtin "One Step Simplification" (formula "35"))
                                             (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "35") (term "0,0,0,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "0,0,0,0,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "add_zero_left" (formula "35") (term "0,0,0,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "35") (term "0,0,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "1,0,0,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "35") (term "0,0,1,1,0,0,0,0,0,0,1,0"))
                                             (rule "qeq_literals" (formula "35") (term "0,1,1,0,0,0,0,0,0,1,0"))
                                              (builtin "One Step Simplification" (formula "35"))
                                             (rule "elimGcdGeq" (formula "35") (term "1,0,1,0,0,0,0,0,1,0") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcdRightDiv=add(Z(1(#)), quotient_0)"))
                                             (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,0,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "sub_literals" (formula "35") (term "0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,0,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "35") (term "0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,1,0,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "1,1,0,1,0,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "35") (term "1,0,1,0,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "35") (term "0,1,0,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0,0,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "1,1,0,0,0,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "35") (term "1,0,0,0,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "35") (term "0,0,0,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "35") (term "0,0,1,0,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "35") (term "0,0,0,1,0,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "35") (term "0,1,0,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "35") (term "0,0,1,0,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "0,0,0,1,0,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,1,0,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "1,1,0,1,0,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "35") (term "1,0,1,0,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "0,1,0,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "35") (term "1,0,1,0,1,0,0,0,0,0,1,0"))
                                              (builtin "One Step Simplification" (formula "35"))
                                             (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "0,0,0,0,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "35") (term "0,0,0,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "0,0,0,0,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "add_zero_left" (formula "35") (term "0,0,0,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "35") (term "0,0,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "1,0,0,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "35") (term "0,0,1,0,1,0,0,0,0,0,1,0"))
                                             (rule "qeq_literals" (formula "35") (term "0,1,0,1,0,0,0,0,0,1,0"))
                                              (builtin "One Step Simplification" (formula "35"))
                                             (rule "elimGcdGeq" (formula "35") (term "1,0,1,0,0,0,0,0,0,0,0,0,1,0") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcdRightDiv=add(Z(1(#)), quotient_0)"))
                                             (rule "sub_literals" (formula "35") (term "0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "35") (term "0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "1,1,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "35") (term "1,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "35") (term "0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "1,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "35") (term "1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "35") (term "0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "35") (term "0,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "35") (term "0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "35") (term "0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "35") (term "0,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "1,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "35") (term "1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "35") (term "1,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0"))
                                              (builtin "One Step Simplification" (formula "35"))
                                             (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "35") (term "0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "add_zero_left" (formula "35") (term "0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "35") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "1,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "35") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "qeq_literals" (formula "35") (term "0,1,0,1,0,0,0,0,0,0,0,0,0,1,0"))
                                              (builtin "One Step Simplification" (formula "35"))
                                             (rule "elimGcdGeq" (formula "35") (term "1,0,1,0,1,0") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcdRightDiv=add(Z(1(#)), quotient_0)"))
                                             (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,0,1,0,1,0,1,0"))
                                             (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0,0,1,0,1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,0,1,0,1,0,1,0"))
                                             (rule "mul_literals" (formula "35") (term "0,0,0,0,0,1,0,1,0,1,0,1,0"))
                                             (rule "sub_literals" (formula "35") (term "0,0,0,0,0,0,0,1,0,1,0,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,1,0,1,0,1,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "1,1,0,1,0,1,0,1,0,1,0"))
                                             (rule "times_zero_1" (formula "35") (term "1,0,1,0,1,0,1,0,1,0"))
                                             (rule "add_zero_right" (formula "35") (term "0,1,0,1,0,1,0,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0,0,1,0,1,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "1,1,0,0,0,1,0,1,0,1,0"))
                                             (rule "times_zero_1" (formula "35") (term "1,0,0,0,1,0,1,0,1,0"))
                                             (rule "add_zero_right" (formula "35") (term "0,0,0,1,0,1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "35") (term "0,0,1,0,1,0,1,0,1,0"))
                                             (rule "mul_literals" (formula "35") (term "0,0,0,1,0,1,0,1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,1,0,1,0,1,0"))
                                             (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,1,0,1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "35") (term "0,1,0,1,0,1,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "35") (term "0,0,1,0,1,0,1,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "0,0,0,1,0,1,0,1,0,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,1,0,1,0,1,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "1,1,0,1,0,1,0,1,0,1,0"))
                                             (rule "times_zero_1" (formula "35") (term "1,0,1,0,1,0,1,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "0,1,0,1,0,1,0,1,0"))
                                             (rule "leq_literals" (formula "35") (term "1,0,1,0,1,0,1,0"))
                                              (builtin "One Step Simplification" (formula "35"))
                                             (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,1,0,1,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "0,0,0,0,1,0,1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,1,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "35") (term "0,0,0,1,0,1,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "0,0,0,0,1,0,1,0,1,0"))
                                             (rule "add_zero_left" (formula "35") (term "0,0,0,1,0,1,0,1,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "35") (term "0,0,1,0,1,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "1,0,0,1,0,1,0,1,0"))
                                             (rule "times_zero_1" (formula "35") (term "0,0,1,0,1,0,1,0"))
                                             (rule "qeq_literals" (formula "35") (term "0,1,0,1,0,1,0"))
                                              (builtin "One Step Simplification" (formula "35"))
                                             (rule "elimGcdGeq" (formula "35") (term "1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcdRightDiv=add(Z(1(#)), quotient_0)"))
                                             (rule "mul_literals" (formula "35") (term "0,0,0,0,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "sub_literals" (formula "35") (term "0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "1,1,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "35") (term "1,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "35") (term "0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "1,1,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "35") (term "1,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "35") (term "0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "35") (term "0,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "35") (term "0,0,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "35") (term "0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "35") (term "0,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "0,0,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "1,1,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "35") (term "1,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "35") (term "1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                              (builtin "One Step Simplification" (formula "35"))
                                             (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "35") (term "0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "add_zero_left" (formula "35") (term "0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "35") (term "0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "add_literals" (formula "35") (term "1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "times_zero_1" (formula "35") (term "0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                             (rule "qeq_literals" (formula "35") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0"))
                                              (builtin "One Step Simplification" (formula "35"))
                                             (rule "inEqSimp_antiSymm" (formula "14") (ifseqformula "11"))
                                             (rule "applyEq" (formula "34") (term "0,0,2,0") (ifseqformula "14"))
                                             (rule "close" (formula "53") (ifseqformula "34"))
                                          )
                                       )
                                    )
                                    (branch "CUT: l_0 >= 1 + l_1 FALSE"
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "true_left" (formula "8"))
                                       (rule "replace_known_right" (formula "3") (term "0,1") (ifseqformula "42"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "inEqSimp_geqRight" (formula "42"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1"))
                                       (rule "inEqSimp_contradInEq0" (formula "4") (term "0,0") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "4") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "4") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "4") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "4") (term "0,0,0,0"))
                                       (rule "leq_literals" (formula "4") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "inEqSimp_homoInEq1" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "4") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "4") (term "0,0,1,0"))
                                       (rule "mul_literals" (formula "4") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                       (rule "add_literals" (formula "4") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "4") (term "1,0"))
                                       (rule "add_zero_right" (formula "4") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "4") (term "0"))
                                       (rule "add_literals" (formula "4") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "4") (term "1,0"))
                                       (rule "add_zero_right" (formula "4") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                       (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "4") (term "0"))
                                       (rule "add_literals" (formula "4") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "4") (term "1,0"))
                                       (rule "add_zero_right" (formula "4") (term "0"))
                                       (rule "leq_literals" (formula "4"))
                                       (rule "closeFalse" (formula "4"))
                                    )
                                 )
                              )
                           )
                        )
                        (branch "Exceptional Post (nextKeyIndex)"
                            (builtin "One Step Simplification" (formula "36"))
                           (rule "translateJavaAddInt" (formula "36") (term "0,0,1,0,0,1"))
                           (rule "translateJavaAddInt" (formula "36") (term "1,1,0,0,0,1"))
                           (rule "translateJavaAddInt" (formula "36") (term "0,0,0,0,0,1"))
                           (rule "andLeft" (formula "36"))
                           (rule "andLeft" (formula "36"))
                           (rule "andLeft" (formula "38"))
                           (rule "notLeft" (formula "36"))
                           (rule "close" (formula "39") (ifseqformula "38"))
                        )
                        (branch "Pre (nextKeyIndex)"
                            (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "24")))
                           (rule "inEqSimp_ltToLeq" (formula "22") (term "0,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulAssoc" (formula "22") (term "1,0,0,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "22") (term "0,1,0,0,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0,1,0,0,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,1,0"))
                           (rule "polySimp_addComm1" (formula "22") (term "0,1,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "5") (term "0,0,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,0,0,0,1,1,0"))
                           (rule "polySimp_mulAssoc" (formula "22") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "22") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_gtToGeq" (formula "4") (term "0"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0"))
                           (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "19"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "19") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "11"))
                           (rule "mul_literals" (formula "11") (term "1,0,0"))
                           (rule "add_literals" (formula "11") (term "0,0"))
                           (rule "inEqSimp_gtToGeq" (formula "21") (term "1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,1,0"))
                           (rule "polySimp_addComm1" (formula "21") (term "0,1,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "4") (term "0,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "22") (term "0,1,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,1,0,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "34"))
                           (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "34") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "14"))
                           (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "14") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "5") (term "0"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
                           (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "5") (term "0,0,0,1,1"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0,1,1"))
                           (rule "applyEq" (formula "16") (term "0") (ifseqformula "17"))
                           (rule "jmod_axiom" (formula "3") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                           (rule "jmod_axiom" (formula "32") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "32") (term "1,0"))
                           (rule "polySimp_sepNegMonomial" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                           (rule "polySimp_sepNegMonomial" (formula "32"))
                           (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "21") (term "1,0,1,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "21") (term "0,1,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,1,0,0,0,1,1,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "0,1,0,1,0"))
                           (rule "polySimp_elimOne" (formula "21") (term "0,1,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,1"))
                           (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0,0,1"))
                           (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,1"))
                           (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,0,0,1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                           (rule "polySimp_elimOne" (formula "2") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "21") (term "0,1,1,0,0,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "4") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "0,0"))
                           (rule "polySimp_elimOne" (formula "4") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "18"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                           (rule "polySimp_elimOne" (formula "18") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "11"))
                           (rule "mul_literals" (formula "11") (term "1"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "20") (term "1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0,1,0"))
                           (rule "polySimp_elimOne" (formula "20") (term "0,1,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "9") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,1"))
                           (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,1"))
                           (rule "mul_literals" (formula "4") (term "0,1,0,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,0,1"))
                           (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,1,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,0,1,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "21") (term "1,0,1,0,0,1,1,0"))
                           (rule "mul_literals" (formula "21") (term "0,1,0,1,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,1,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "21") (term "1,1,0,1,0,0,1,1,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "33"))
                           (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                           (rule "polySimp_elimOne" (formula "33") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "20") (term "0,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "14"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                           (rule "polySimp_elimOne" (formula "14") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "5") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "0,0"))
                           (rule "polySimp_elimOne" (formula "5") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "10") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,1,0"))
                           (rule "mul_literals" (formula "10") (term "0,1,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0,1,1"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,1,1"))
                           (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,1,1"))
                           (rule "mul_literals" (formula "5") (term "0,1,0,0,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0,1,1"))
                           (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,0,1,1"))
                           (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "7"))
                           (rule "leq_literals" (formula "15") (term "0"))
                            (builtin "One Step Simplification" (formula "15"))
                           (rule "true_left" (formula "15"))
                           (rule "elimGcdLeq" (formula "20") (term "1,0,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0,1,0,0,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0,1,0,0,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "20") (term "0,0,0,0,0,1,0,1,0,0,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                           (rule "sub_literals" (formula "20") (term "0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "20") (term "1,1,0,1,0,1,0,0,0,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "20") (term "1,0,1,0,1,0,0,0,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "20") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "20") (term "1,1,0,0,0,1,0,0,0,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "20") (term "1,0,0,0,1,0,0,0,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "20") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "20") (term "0,0,1,0,1,0,0,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "20") (term "0,0,0,1,0,1,0,0,0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,1,0,0,0,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "20") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                           (rule "polySimp_addComm1" (formula "20") (term "0,0,1,0,1,0,0,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "20") (term "0,0,0,1,0,1,0,0,0,0,0,1,1,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "20") (term "1,1,0,1,0,1,0,0,0,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "20") (term "1,0,1,0,1,0,0,0,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "20") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
                           (rule "qeq_literals" (formula "20") (term "1,0,1,0,0,0,0,0,1,1,0"))
                            (builtin "One Step Simplification" (formula "20"))
                           (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "20") (term "0,0,0,0,1,0,0,0,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0,0,0,0,1,1,0"))
                           (rule "polySimp_addComm1" (formula "20") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "20") (term "0,0,0,0,1,0,0,0,0,0,1,1,0"))
                           (rule "add_zero_left" (formula "20") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                           (rule "polySimp_pullOutFactor0" (formula "20") (term "0,0,1,0,0,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "20") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "20") (term "0,0,1,0,0,0,0,0,1,1,0"))
                           (rule "leq_literals" (formula "20") (term "0,1,0,0,0,0,0,1,1,0"))
                            (builtin "One Step Simplification" (formula "20"))
                           (rule "elimGcdGeq" (formula "5") (term "1,0,0,1,1") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=m") (inst "elimGcd=Z(2(#))"))
                           (rule "sub_literals" (formula "5") (term "0,0,0,0,0,0,0,1,0,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0,1,0,0,1,1"))
                           (rule "add_zero_right" (formula "5") (term "0,0,0,1,0,1,0,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,1,0,0,1,1"))
                           (rule "times_zero_1" (formula "5") (term "1,0,0,0,0,0,0,1,0,0,1,1"))
                           (rule "times_zero_1" (formula "5") (term "0,0,0,1,0,1,0,0,1,1"))
                           (rule "add_zero_right" (formula "5") (term "0,0,0,0,0,1,0,0,1,1"))
                           (rule "add_zero_left" (formula "5") (term "0,0,1,0,1,0,0,1,1"))
                           (rule "add_zero_right" (formula "5") (term "0,0,0,0,0,1,0,0,1,1"))
                           (rule "polySimp_pullOutFactor0" (formula "5") (term "0,1,0,1,0,0,1,1"))
                           (rule "add_literals" (formula "5") (term "1,0,1,0,1,0,0,1,1"))
                           (rule "times_zero_1" (formula "5") (term "0,1,0,1,0,0,1,1"))
                           (rule "leq_literals" (formula "5") (term "1,0,1,0,0,1,1"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0,1,0,0,1,1"))
                           (rule "add_literals" (formula "5") (term "1,1,0,0,1,0,0,1,1"))
                           (rule "times_zero_1" (formula "5") (term "1,0,0,1,0,0,1,1"))
                           (rule "add_zero_right" (formula "5") (term "0,0,1,0,0,1,1"))
                           (rule "qeq_literals" (formula "5") (term "0,1,0,0,1,1"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "elimGcdLeq" (formula "20") (term "0,1,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                           (rule "sub_literals" (formula "20") (term "0,0,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0,0,1,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "20") (term "0,0,0,0,0,1,0,0,1,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0,0,0,1,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "20") (term "1,1,0,0,0,0,1,0,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,1,0,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "20") (term "0,0,0,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,1,0,0,1,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "20") (term "1,1,0,1,0,0,1,0,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "20") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "20") (term "0,1,0,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0,1,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "20") (term "0,0,1,0,0,1,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "20") (term "0,0,0,1,0,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0,1,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "20") (term "0,0,0,0,0,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "20") (term "0,1,0,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_addComm1" (formula "20") (term "0,0,1,0,0,1,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "20") (term "0,0,0,1,0,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,1,0,0,1,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "20") (term "1,1,0,1,0,0,1,0,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "20") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "20") (term "0,1,0,0,1,0,0,0,1,1,0"))
                           (rule "qeq_literals" (formula "20") (term "1,0,0,1,0,0,0,1,1,0"))
                            (builtin "One Step Simplification" (formula "20"))
                           (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0,1,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "20") (term "0,0,0,0,0,1,0,0,0,1,1,0"))
                           (rule "add_zero_left" (formula "20") (term "0,0,0,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_pullOutFactor0" (formula "20") (term "0,0,0,1,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "20") (term "1,0,0,0,1,0,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "20") (term "0,0,0,1,0,0,0,1,1,0"))
                           (rule "leq_literals" (formula "20") (term "0,0,1,0,0,0,1,1,0"))
                            (builtin "One Step Simplification" (formula "20"))
                           (rule "elimGcdGeq" (formula "20") (term "1,1,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                           (rule "times_zero_1" (formula "20") (term "0,0,0,0,1,0,1,1,0,0,1,1,0"))
                           (rule "sub_literals" (formula "20") (term "0,0,0,0,0,0,0,1,1,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0,1,1,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0,1,1,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0,0,1,1,0,0,1,1,0"))
                           (rule "add_literals" (formula "20") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "20") (term "0,0,0,0,0,1,1,0,0,1,1,0"))
                           (rule "add_zero_left" (formula "20") (term "0,0,1,0,1,1,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "20") (term "0,0,0,0,0,1,1,0,0,1,1,0"))
                           (rule "polySimp_pullOutFactor0" (formula "20") (term "0,1,0,1,1,0,0,1,1,0"))
                           (rule "add_literals" (formula "20") (term "1,0,1,0,1,1,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "20") (term "0,1,0,1,1,0,0,1,1,0"))
                           (rule "leq_literals" (formula "20") (term "1,0,1,1,0,0,1,1,0"))
                            (builtin "One Step Simplification" (formula "20"))
                           (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0,1,1,0,0,1,1,0"))
                           (rule "add_literals" (formula "20") (term "1,1,0,0,1,1,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "20") (term "1,0,0,1,1,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "20") (term "0,0,1,1,0,0,1,1,0"))
                           (rule "qeq_literals" (formula "20") (term "0,1,1,0,0,1,1,0"))
                            (builtin "One Step Simplification" (formula "20"))
                           (rule "elimGcdGeq" (formula "20") (term "0,1,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                           (rule "add_zero_right" (formula "20") (term "0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0,0,1,0,0,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "20") (term "0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0,0,1,0,0,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                           (rule "sub_literals" (formula "20") (term "0,0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "20") (term "0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "20") (term "0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                           (rule "add_zero_left" (formula "20") (term "0,0,1,0,0,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "20") (term "1,1,0,0,0,0,1,0,0,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,1,0,0,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "20") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                           (rule "qeq_literals" (formula "20") (term "0,0,0,1,0,0,0,0,1,1,0"))
                            (builtin "One Step Simplification" (formula "20"))
                           (rule "polySimp_pullOutFactor0" (formula "20") (term "0,0,0,1,0,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "20") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "20") (term "0,0,0,1,0,0,0,0,1,1,0"))
                           (rule "leq_literals" (formula "20") (term "0,0,1,0,0,0,0,1,1,0"))
                            (builtin "One Step Simplification" (formula "20"))
                           (rule "newSym_eq" (formula "31") (inst "l=l_0") (inst "newSymDef=mul(result_1, Z(0(#)))"))
                           (rule "times_zero_1" (formula "31") (term "1,1"))
                           (rule "add_zero_right" (formula "31") (term "1"))
                           (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "31"))
                           (rule "eqSymm" (formula "32"))
                           (rule "applyEq" (formula "34") (term "0") (ifseqformula "32"))
                           (rule "applyEq" (formula "4") (term "1,1,0,0,1") (ifseqformula "32"))
                           (rule "applyEq" (formula "5") (term "1,1,0,0,0,1") (ifseqformula "32"))
                           (rule "applyEq" (formula "33") (term "1,1") (ifseqformula "32"))
                           (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "32"))
                           (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "32"))
                           (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                           (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "32"))
                           (rule "inEqSimp_homoInEq1" (formula "5") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                           (rule "applyEq" (formula "30") (term "1") (ifseqformula "32"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "0"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                           (rule "mul_literals" (formula "4") (term "0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                           (rule "mul_literals" (formula "5") (term "0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0"))
                           (rule "elimGcdGeq_antec" (formula "34") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                           (rule "times_zero_1" (formula "34") (term "1,0,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "34") (term "1,0,1,0"))
                           (rule "leq_literals" (formula "34") (term "0,0"))
                            (builtin "One Step Simplification" (formula "34"))
                           (rule "add_zero_right" (formula "34") (term "0,0,0,0"))
                           (rule "add_literals" (formula "34") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "34") (term "0,0"))
                           (rule "add_literals" (formula "34") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "34") (term "1,0,0"))
                           (rule "add_zero_right" (formula "34") (term "0,0"))
                           (rule "leq_literals" (formula "34") (term "0"))
                            (builtin "One Step Simplification" (formula "34"))
                           (rule "elimGcdGeq" (formula "5") (term "1,0,0,0,1") (inst "elimGcdRightDiv=l_0") (inst "elimGcdLeftDiv=n") (inst "elimGcd=Z(2(#))"))
                           (rule "sub_literals" (formula "5") (term "0,0,0,0,0,0,0,1,0,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0,1,0,0,0,1"))
                           (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,0,0,1,0,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,1,0,0,0,1"))
                           (rule "mul_literals" (formula "5") (term "0,0,0,0,0,1,0,1,0,0,0,1"))
                           (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0,0,1,0,0,0,1"))
                           (rule "add_literals" (formula "5") (term "1,1,0,0,0,1,0,0,0,1"))
                           (rule "times_zero_1" (formula "5") (term "1,0,0,0,1,0,0,0,1"))
                           (rule "add_zero_right" (formula "5") (term "0,0,0,1,0,0,0,1"))
                           (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,1,0,1,0,0,0,1"))
                           (rule "add_literals" (formula "5") (term "1,1,0,1,0,1,0,0,0,1"))
                           (rule "times_zero_1" (formula "5") (term "1,0,1,0,1,0,0,0,1"))
                           (rule "add_zero_right" (formula "5") (term "0,1,0,1,0,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,1,0,0,0,1"))
                           (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0,0,1,0,0,0,1"))
                           (rule "add_literals" (formula "5") (term "1,1,0,0,0,1,0,0,0,1"))
                           (rule "times_zero_1" (formula "5") (term "1,0,0,0,1,0,0,0,1"))
                           (rule "add_zero_right" (formula "5") (term "0,0,0,1,0,0,0,1"))
                           (rule "qeq_literals" (formula "5") (term "0,0,1,0,0,0,1"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "polySimp_mulComm0" (formula "5") (term "0,0,0,1,0,0,0,1"))
                           (rule "polySimp_pullOutFactor0" (formula "5") (term "0,0,1,0,0,0,1"))
                           (rule "add_literals" (formula "5") (term "1,0,0,1,0,0,0,1"))
                           (rule "times_zero_1" (formula "5") (term "0,0,1,0,0,0,1"))
                           (rule "leq_literals" (formula "5") (term "0,1,0,0,0,1"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "elimGcdGeq" (formula "4") (term "1,0,0,1") (inst "elimGcdRightDiv=l_0") (inst "elimGcdLeftDiv=n") (inst "elimGcd=Z(2(#))"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0,1,0,0,1"))
                           (rule "mul_literals" (formula "4") (term "0,0,0,0,0,1,0,1,0,0,1"))
                           (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0,0,0,1,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0,1,0,0,1"))
                           (rule "sub_literals" (formula "4") (term "0,0,0,0,0,0,0,1,0,0,1"))
                           (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,1,0,1,0,0,1"))
                           (rule "add_literals" (formula "4") (term "1,1,0,1,0,1,0,0,1"))
                           (rule "times_zero_1" (formula "4") (term "1,0,1,0,1,0,0,1"))
                           (rule "add_zero_right" (formula "4") (term "0,1,0,1,0,0,1"))
                           (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0,0,1,0,0,1"))
                           (rule "add_literals" (formula "4") (term "1,1,0,0,0,1,0,0,1"))
                           (rule "times_zero_1" (formula "4") (term "1,0,0,0,1,0,0,1"))
                           (rule "add_zero_right" (formula "4") (term "0,0,0,1,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "4") (term "0,0,1,0,1,0,0,1"))
                           (rule "polySimp_pullOutFactor0" (formula "4") (term "0,1,0,1,0,0,1"))
                           (rule "add_literals" (formula "4") (term "1,0,1,0,1,0,0,1"))
                           (rule "times_zero_1" (formula "4") (term "0,1,0,1,0,0,1"))
                           (rule "leq_literals" (formula "4") (term "1,0,1,0,0,1"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,1,0,0,1"))
                           (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0,1,0,0,1"))
                           (rule "add_literals" (formula "4") (term "1,1,0,0,1,0,0,1"))
                           (rule "times_zero_1" (formula "4") (term "1,0,0,1,0,0,1"))
                           (rule "add_zero_right" (formula "4") (term "0,0,1,0,0,1"))
                           (rule "qeq_literals" (formula "4") (term "0,1,0,0,1"))
                            (builtin "One Step Simplification" (formula "4"))
                           (rule "newSym_eq" (formula "3") (inst "l=l_1") (inst "newSymDef=mul(i_0, Z(0(#)))"))
                           (rule "times_zero_1" (formula "3") (term "1,1"))
                           (rule "add_zero_right" (formula "3") (term "1"))
                           (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "3"))
                           (rule "eqSymm" (formula "4"))
                           (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "4"))
                           (rule "applyEqRigid" (formula "3") (term "0,0") (ifseqformula "4"))
                           (rule "applyEqRigid" (formula "37") (term "0,2,0") (ifseqformula "4"))
                           (rule "applyEqRigid" (formula "5") (term "0,0") (ifseqformula "4"))
                           (rule "inEqSimp_homoInEq1" (formula "5") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                           (rule "applyEqRigid" (formula "5") (term "1,1,0,0,0,1") (ifseqformula "4"))
                           (rule "applyEqRigid" (formula "36") (term "0,2,0") (ifseqformula "4"))
                           (rule "applyEqRigid" (formula "6") (term "0,0") (ifseqformula "4"))
                           (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                           (rule "applyEq" (formula "6") (term "1,1,0,0,0,1,1") (ifseqformula "4"))
                           (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "4"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                           (rule "mul_literals" (formula "5") (term "0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "0"))
                           (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0"))
                           (rule "mul_literals" (formula "6") (term "0,1,0"))
                           (rule "elimGcdGeq_antec" (formula "1") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                           (rule "leq_literals" (formula "1") (term "0,0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0"))
                           (rule "leq_literals" (formula "1") (term "0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "elimGcdLeq" (formula "6") (term "0,0,0,1,1") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_1)") (inst "elimGcdLeftDiv=m") (inst "elimGcd=Z(2(#))"))
                           (rule "sub_literals" (formula "6") (term "0,0,0,0,0,0,0,0,0,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,0,0,0,1,1"))
                           (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,0,0,0,0,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0,0,0,0,1,1"))
                           (rule "mul_literals" (formula "6") (term "0,0,0,0,0,1,0,0,0,0,1,1"))
                           (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0,0,0,0,0,1,1"))
                           (rule "add_literals" (formula "6") (term "1,1,0,0,0,0,0,0,1,1"))
                           (rule "times_zero_1" (formula "6") (term "1,0,0,0,0,0,0,1,1"))
                           (rule "add_zero_right" (formula "6") (term "0,0,0,0,0,0,1,1"))
                           (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,1,0,0,0,0,1,1"))
                           (rule "add_literals" (formula "6") (term "1,1,0,1,0,0,0,0,1,1"))
                           (rule "times_zero_1" (formula "6") (term "1,0,1,0,0,0,0,1,1"))
                           (rule "add_zero_right" (formula "6") (term "0,1,0,0,0,0,1,1"))
                           (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,0,0,0,0,1,1"))
                           (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,0,0,0,1,1"))
                           (rule "polySimp_rightDist" (formula "6") (term "0,0,1,0,0,0,0,1,1"))
                           (rule "mul_literals" (formula "6") (term "0,0,0,1,0,0,0,0,1,1"))
                           (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0,0,0,0,1,1"))
                           (rule "add_literals" (formula "6") (term "0,0,0,0,0,0,0,0,1,1"))
                           (rule "polySimp_addAssoc" (formula "6") (term "0,1,0,0,0,0,1,1"))
                           (rule "polySimp_addComm1" (formula "6") (term "0,0,1,0,0,0,0,1,1"))
                           (rule "add_literals" (formula "6") (term "0,0,0,1,0,0,0,0,1,1"))
                           (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,1,0,0,0,0,1,1"))
                           (rule "add_literals" (formula "6") (term "1,1,0,1,0,0,0,0,1,1"))
                           (rule "times_zero_1" (formula "6") (term "1,0,1,0,0,0,0,1,1"))
                           (rule "add_zero_right" (formula "6") (term "0,1,0,0,0,0,1,1"))
                           (rule "qeq_literals" (formula "6") (term "1,0,0,0,0,1,1"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0,0,1,1"))
                           (rule "polySimp_addComm1" (formula "6") (term "0,0,0,0,0,0,1,1"))
                           (rule "add_literals" (formula "6") (term "0,0,0,0,0,0,0,1,1"))
                           (rule "add_zero_left" (formula "6") (term "0,0,0,0,0,0,1,1"))
                           (rule "polySimp_pullOutFactor0" (formula "6") (term "0,0,0,0,0,1,1"))
                           (rule "add_literals" (formula "6") (term "1,0,0,0,0,0,1,1"))
                           (rule "times_zero_1" (formula "6") (term "0,0,0,0,0,1,1"))
                           (rule "leq_literals" (formula "6") (term "0,0,0,0,1,1"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "elimGcdLeq" (formula "5") (term "0,0,0,1") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_1)") (inst "elimGcdLeftDiv=n") (inst "elimGcd=Z(2(#))"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0,0,0,0,1"))
                           (rule "sub_literals" (formula "5") (term "0,0,0,0,0,0,0,0,0,0,1"))
                           (rule "mul_literals" (formula "5") (term "0,0,0,0,0,1,0,0,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,0,0,0,1"))
                           (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,0,0,0,0,0,1"))
                           (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,1,0,0,0,0,1"))
                           (rule "add_literals" (formula "5") (term "1,1,0,1,0,0,0,0,1"))
                           (rule "times_zero_1" (formula "5") (term "1,0,1,0,0,0,0,1"))
                           (rule "add_zero_right" (formula "5") (term "0,1,0,0,0,0,1"))
                           (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0,0,0,0,0,1"))
                           (rule "add_literals" (formula "5") (term "1,1,0,0,0,0,0,0,1"))
                           (rule "times_zero_1" (formula "5") (term "1,0,0,0,0,0,0,1"))
                           (rule "add_zero_right" (formula "5") (term "0,0,0,0,0,0,1"))
                           (rule "polySimp_rightDist" (formula "5") (term "0,0,1,0,0,0,0,1"))
                           (rule "mul_literals" (formula "5") (term "0,0,0,1,0,0,0,0,1"))
                           (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0,0,0,0,1"))
                           (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,0,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "5") (term "0,1,0,0,0,0,1"))
                           (rule "polySimp_addComm1" (formula "5") (term "0,0,1,0,0,0,0,1"))
                           (rule "add_literals" (formula "5") (term "0,0,0,1,0,0,0,0,1"))
                           (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,1,0,0,0,0,1"))
                           (rule "add_literals" (formula "5") (term "1,1,0,1,0,0,0,0,1"))
                           (rule "times_zero_1" (formula "5") (term "1,0,1,0,0,0,0,1"))
                           (rule "add_zero_right" (formula "5") (term "0,1,0,0,0,0,1"))
                           (rule "qeq_literals" (formula "5") (term "1,0,0,0,0,1"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0,0,0,1"))
                           (rule "add_literals" (formula "5") (term "0,0,0,0,0,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0,0,1"))
                           (rule "polySimp_addComm1" (formula "5") (term "0,0,0,0,0,0,1"))
                           (rule "add_literals" (formula "5") (term "0,0,0,0,0,0,0,1"))
                           (rule "add_zero_left" (formula "5") (term "0,0,0,0,0,0,1"))
                           (rule "polySimp_pullOutFactor0" (formula "5") (term "0,0,0,0,0,1"))
                           (rule "add_literals" (formula "5") (term "1,0,0,0,0,0,1"))
                           (rule "times_zero_1" (formula "5") (term "0,0,0,0,0,1"))
                           (rule "leq_literals" (formula "5") (term "0,0,0,0,1"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "elimGcdLeq" (formula "5") (term "0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_1)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                           (rule "sub_literals" (formula "5") (term "0,0,0,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0,0"))
                           (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "5") (term "0,0,0,0,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,1,0,0"))
                           (rule "add_literals" (formula "5") (term "1,1,0,1,0,0"))
                           (rule "times_zero_1" (formula "5") (term "1,0,1,0,0"))
                           (rule "add_zero_right" (formula "5") (term "0,1,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0,0,0"))
                           (rule "add_literals" (formula "5") (term "1,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "5") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "5") (term "0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "5") (term "0,0,1,0,0"))
                           (rule "mul_literals" (formula "5") (term "0,0,0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "5") (term "0,1,0,0"))
                           (rule "polySimp_addComm1" (formula "5") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "5") (term "0,0,0,1,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,1,0,0"))
                           (rule "add_literals" (formula "5") (term "1,1,0,1,0,0"))
                           (rule "times_zero_1" (formula "5") (term "1,0,1,0,0"))
                           (rule "add_zero_right" (formula "5") (term "0,1,0,0"))
                           (rule "qeq_literals" (formula "5") (term "1,0,0"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0"))
                           (rule "add_literals" (formula "5") (term "0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "5") (term "0,0,0,0"))
                           (rule "add_literals" (formula "5") (term "0,0,0,0,0"))
                           (rule "add_zero_left" (formula "5") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0" (formula "5") (term "0,0,0"))
                           (rule "add_literals" (formula "5") (term "1,0,0,0"))
                           (rule "times_zero_1" (formula "5") (term "0,0,0"))
                           (rule "leq_literals" (formula "5") (term "0,0"))
                            (builtin "One Step Simplification" (formula "5"))
                           (rule "elimGcdGeq" (formula "6") (term "0") (inst "elimGcdRightDiv=add(Z(1(#)), l_1)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                           (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "6") (term "0,0,0,0,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,0"))
                           (rule "sub_literals" (formula "6") (term "0,0,0,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0,0,0"))
                           (rule "add_literals" (formula "6") (term "1,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "6") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "6") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,1,0,0"))
                           (rule "add_literals" (formula "6") (term "1,1,0,1,0,0"))
                           (rule "times_zero_1" (formula "6") (term "1,0,1,0,0"))
                           (rule "add_zero_right" (formula "6") (term "0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "6") (term "0,0,1,0,0"))
                           (rule "mul_literals" (formula "6") (term "0,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "6") (term "0,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "6") (term "0,1,0,0"))
                           (rule "polySimp_addComm1" (formula "6") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "6") (term "0,0,0,1,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,1,0,0"))
                           (rule "add_literals" (formula "6") (term "1,1,0,1,0,0"))
                           (rule "times_zero_1" (formula "6") (term "1,0,1,0,0"))
                           (rule "add_zero_right" (formula "6") (term "0,1,0,0"))
                           (rule "leq_literals" (formula "6") (term "1,0,0"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "polySimp_addAssoc" (formula "6") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "6") (term "0,0,0,0"))
                           (rule "add_literals" (formula "6") (term "0,0,0,0,0"))
                           (rule "add_zero_left" (formula "6") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0" (formula "6") (term "0,0,0"))
                           (rule "add_literals" (formula "6") (term "1,0,0,0"))
                           (rule "times_zero_1" (formula "6") (term "0,0,0"))
                           (rule "qeq_literals" (formula "6") (term "0,0"))
                            (builtin "One Step Simplification" (formula "6"))
                           (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "9"))
                           (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                           (rule "mul_literals" (formula "15") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "15") (term "0"))
                           (rule "add_literals" (formula "15") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                           (rule "polySimp_elimOne" (formula "15") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "9"))
                           (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                           (rule "mul_literals" (formula "2") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                           (rule "add_literals" (formula "2") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                           (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(1(1(9(0(7(8(6(3(5(#))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,1,0"))
                           (rule "neg_literal" (formula "2") (term "0,0,0,0,0,1,0"))
                           (rule "leq_literals" (formula "2") (term "0,0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                           (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                           (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                           (rule "add_literals" (formula "2") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                           (rule "add_literals" (formula "2") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "2") (term "1,0,0"))
                           (rule "add_zero_right" (formula "2") (term "0,0"))
                           (rule "qeq_literals" (formula "2") (term "0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "10"))
                           (rule "polySimp_rightDist" (formula "36") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0"))
                           (rule "mul_literals" (formula "36") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "36") (term "0"))
                           (rule "add_literals" (formula "36") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "36"))
                           (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                           (rule "elimGcdLeq_antec" (formula "36") (inst "elimGcdRightDiv=Z(1(1(9(0(7(8(6(3(5(#))))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                           (rule "neg_literal" (formula "36") (term "0,0,0,0,0,1,0"))
                           (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0,1,0"))
                           (rule "leq_literals" (formula "36") (term "0,0"))
                            (builtin "One Step Simplification" (formula "36"))
                           (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0"))
                           (rule "mul_literals" (formula "36") (term "1,0,0,0,0,0"))
                           (rule "polySimp_addLiterals" (formula "36") (term "0,0,0,0"))
                           (rule "add_literals" (formula "36") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,0"))
                           (rule "add_literals" (formula "36") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "36") (term "1,0,0"))
                           (rule "add_zero_right" (formula "36") (term "0,0"))
                           (rule "qeq_literals" (formula "36") (term "0"))
                            (builtin "One Step Simplification" (formula "36"))
                           (rule "nnf_imp2or" (formula "11") (term "1,0"))
                           (rule "nnf_imp2or" (formula "12") (term "1,0,1,0"))
                           (rule "nnf_imp2or" (formula "22") (term "0"))
                           (rule "Static_class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "45"))
                           (rule "notRight" (formula "45"))
                           (rule "close" (formula "43") (ifseqformula "1"))
                        )
                     )
                  )
               )
               (branch "Null Reference (tab = null)"
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                  (rule "closeFalse" (formula "1"))
               )
               (branch "Index Out of Bounds (tab != null, but i Out of Bounds!)"
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                   (builtin "One Step Simplification" (formula "40"))
                  (rule "false_right" (formula "40"))
                  (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "12"))
                  (rule "mul_literals" (formula "12") (term "1,0,0"))
                  (rule "add_literals" (formula "12") (term "0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_gtToGeq" (formula "5") (term "0"))
                  (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
                  (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,1,0"))
                  (rule "polySimp_addComm1" (formula "22") (term "0,1,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,0,0,0,1,1,0"))
                  (rule "polySimp_mulAssoc" (formula "22") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "22") (term "0,1,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,1,0,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "22") (term "0,1,0,0,0,0,1,1,0"))
                  (rule "polySimp_mulAssoc" (formula "22") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "0,1,0,0,0,1,0,0,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "15"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "15") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "6") (term "0"))
                  (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
                  (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,0,1,1"))
                  (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0,1,1"))
                  (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,0,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                  (rule "inEqSimp_gtToGeq" (formula "21") (term "1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,1,0"))
                  (rule "polySimp_addComm1" (formula "21") (term "0,1,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "3"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "34"))
                  (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "34") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "5") (term "0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "19"))
                  (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "19") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "1") (term "0,0,1"))
                  (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "17"))
                  (rule "jmod_axiom" (formula "33") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "33") (term "1,0"))
                  (rule "jmod_axiom" (formula "4") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                  (rule "polySimp_sepNegMonomial" (formula "33"))
                  (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                  (rule "polySimp_sepNegMonomial" (formula "4"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "10") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "21") (term "0,1,0,0,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "12"))
                  (rule "mul_literals" (formula "12") (term "1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "5") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "0,0"))
                  (rule "polySimp_elimOne" (formula "5") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0,1,0"))
                  (rule "polySimp_elimOne" (formula "22") (term "0,1,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,0,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,0,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "22") (term "0,1,1,0,0,0,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,0,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,1,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,1,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "22") (term "1,0,1,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,1,0,0,1,1,0"))
                  (rule "mul_literals" (formula "22") (term "0,1,0,1,0,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "22") (term "1,1,0,1,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,1,0,0,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,1,0,0,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "22") (term "1,0,1,0,0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "22") (term "0,1,0,1,0,0,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,1,0,0,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "11") (term "0,1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "15"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                  (rule "polySimp_elimOne" (formula "15") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "6") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "0,0"))
                  (rule "polySimp_elimOne" (formula "6") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,1"))
                  (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0,0,1"))
                  (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,1"))
                  (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0,1,1"))
                  (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,1,1"))
                  (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,1,1"))
                  (rule "mul_literals" (formula "6") (term "0,1,0,0,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0,1,1"))
                  (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0,0,1,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,0,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0,0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,0,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0,0,0,0,1,1,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "21") (term "1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "0,1,0,1,0"))
                  (rule "polySimp_elimOne" (formula "21") (term "0,1,0,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                  (rule "polySimp_elimOne" (formula "3") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "34"))
                  (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                  (rule "polySimp_elimOne" (formula "34") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,1"))
                  (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,1"))
                  (rule "mul_literals" (formula "5") (term "0,1,0,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0,1"))
                  (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "19"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                  (rule "polySimp_elimOne" (formula "19") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                  (rule "mul_literals" (formula "1") (term "1,1"))
                  (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "3"))
                  (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                  (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0,0"))
                  (rule "leq_literals" (formula "1") (term "0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "8"))
                  (rule "leq_literals" (formula "16") (term "0"))
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "true_left" (formula "16"))
                  (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "1"))
                  (rule "qeq_literals" (formula "2") (term "0"))
                   (builtin "One Step Simplification" (formula "2"))
                  (rule "closeFalse" (formula "2"))
               )
            )
            (branch "if true false"
                (builtin "One Step Simplification" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
         )
      )
      (branch "Exceptional Post (hash)"
          (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "27")))
         (rule "translateJavaMod" (formula "23") (term "0,1,0,0,0,0,1"))
         (rule "andLeft" (formula "23"))
         (rule "andLeft" (formula "23"))
         (rule "andLeft" (formula "25"))
         (rule "notLeft" (formula "23"))
         (rule "close" (formula "26") (ifseqformula "25"))
      )
      (branch "Pre (hash)"
          (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "26")) (ifInst ""  (formula "16")) (ifInst ""  (formula "26")) (ifInst ""  (formula "19")))
         (rule "inEqSimp_gtToGeq" (formula "13") (term "1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,1,0"))
         (rule "polySimp_addComm1" (formula "13") (term "0,1,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "11"))
         (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "11") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "4") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "3") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0,0,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "14") (term "0,1,0,0,0,0,1,1,0"))
         (rule "polySimp_mulAssoc" (formula "14") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "14") (term "0,1,0,0,0,1,0,0,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,0,0,0,1,1,0"))
         (rule "polySimp_mulAssoc" (formula "14") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "14") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "8"))
         (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "8") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "14") (term "0,1,0,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,1,0,0,0,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "5"))
         (rule "mul_literals" (formula "5") (term "1,0,0"))
         (rule "add_literals" (formula "5") (term "0,0"))
         (rule "inEqSimp_ltToLeq" (formula "4") (term "0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,1,0"))
         (rule "polySimp_addComm1" (formula "14") (term "0,1,0,1,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "13") (term "1,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,1,0"))
         (rule "polySimp_elimOne" (formula "13") (term "0,1,0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "11"))
         (rule "polySimp_mulLiterals" (formula "11") (term "0"))
         (rule "polySimp_elimOne" (formula "11") (term "0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0"))
         (rule "mul_literals" (formula "4") (term "0,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
         (rule "mul_literals" (formula "3") (term "0,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,0,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0,0,1,1,0"))
         (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,0,0,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0,0,0,0,1,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,1,0,0,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "14") (term "1,0,1,0,0,0,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "14") (term "1,0,1,0,0,0,0,1,1,0"))
         (rule "mul_literals" (formula "14") (term "0,1,0,1,0,0,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,1,0,0,0,0,1,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,0,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,0,0,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,0,0,0,1,1,0"))
         (rule "mul_literals" (formula "14") (term "0,1,1,0,0,0,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,0,0,0,1,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "8"))
         (rule "polySimp_mulLiterals" (formula "8") (term "0"))
         (rule "polySimp_elimOne" (formula "8") (term "0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
         (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
         (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,1,0,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "14") (term "1,0,1,0,0,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "14") (term "1,0,1,0,0,0,1,1,0"))
         (rule "mul_literals" (formula "14") (term "0,1,0,1,0,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,1,0,0,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "14") (term "1,1,0,1,0,0,0,1,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "5"))
         (rule "mul_literals" (formula "5") (term "1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,1,0"))
         (rule "mul_literals" (formula "4") (term "0,1,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,1,1,0"))
         (rule "mul_literals" (formula "13") (term "0,1,0,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,1,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "1,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0,1,0"))
         (rule "polySimp_elimOne" (formula "14") (term "0,1,0,1,0"))
         (rule "elimGcdLeq" (formula "14") (term "1,0,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
         (rule "sub_literals" (formula "14") (term "0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0"))
         (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,1,0,0,0,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0,1,0,0,0,0,0,1,1,0"))
         (rule "mul_literals" (formula "14") (term "0,0,0,0,0,1,0,1,0,0,0,0,0,1,1,0"))
         (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
         (rule "add_literals" (formula "14") (term "1,1,0,0,0,1,0,0,0,0,0,1,1,0"))
         (rule "times_zero_1" (formula "14") (term "1,0,0,0,1,0,0,0,0,0,1,1,0"))
         (rule "add_zero_right" (formula "14") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
         (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
         (rule "add_literals" (formula "14") (term "1,1,0,1,0,1,0,0,0,0,0,1,1,0"))
         (rule "times_zero_1" (formula "14") (term "1,0,1,0,1,0,0,0,0,0,1,1,0"))
         (rule "add_zero_right" (formula "14") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,1,0,0,0,0,0,1,1,0"))
         (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,1,0,0,0,0,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "14") (term "0,0,1,0,1,0,0,0,0,0,1,1,0"))
         (rule "mul_literals" (formula "14") (term "0,0,0,1,0,1,0,0,0,0,0,1,1,0"))
         (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,1,0,0,0,0,0,1,1,0"))
         (rule "add_literals" (formula "14") (term "0,0,0,0,0,1,0,0,0,0,0,1,1,0"))
         (rule "polySimp_addAssoc" (formula "14") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
         (rule "polySimp_addComm1" (formula "14") (term "0,0,1,0,1,0,0,0,0,0,1,1,0"))
         (rule "add_literals" (formula "14") (term "0,0,0,1,0,1,0,0,0,0,0,1,1,0"))
         (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
         (rule "add_literals" (formula "14") (term "1,1,0,1,0,1,0,0,0,0,0,1,1,0"))
         (rule "times_zero_1" (formula "14") (term "1,0,1,0,1,0,0,0,0,0,1,1,0"))
         (rule "add_literals" (formula "14") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
         (rule "qeq_literals" (formula "14") (term "1,0,1,0,0,0,0,0,1,1,0"))
          (builtin "One Step Simplification" (formula "14"))
         (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,0,0,0,1,1,0"))
         (rule "polySimp_addComm1" (formula "14") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
         (rule "add_literals" (formula "14") (term "0,0,0,0,1,0,0,0,0,0,1,1,0"))
         (rule "add_zero_left" (formula "14") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
         (rule "polySimp_pullOutFactor0" (formula "14") (term "0,0,1,0,0,0,0,0,1,1,0"))
         (rule "add_literals" (formula "14") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
         (rule "times_zero_1" (formula "14") (term "0,0,1,0,0,0,0,0,1,1,0"))
         (rule "leq_literals" (formula "14") (term "0,1,0,0,0,0,0,1,1,0"))
          (builtin "One Step Simplification" (formula "14"))
         (rule "elimGcdGeq" (formula "14") (term "0,1,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0,1,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0,0,1,0,0,1,1,0"))
         (rule "add_zero_right" (formula "14") (term "0,0,0,0,0,0,1,0,0,1,1,0"))
         (rule "add_zero_right" (formula "14") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0,0,0,1,0,0,1,1,0"))
         (rule "sub_literals" (formula "14") (term "0,0,0,0,0,0,0,1,0,0,1,1,0"))
         (rule "times_zero_1" (formula "14") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
         (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0,0,1,0,0,1,1,0"))
         (rule "add_zero_left" (formula "14") (term "0,0,1,0,0,1,0,0,1,1,0"))
         (rule "add_zero_right" (formula "14") (term "0,0,0,0,0,0,1,0,0,1,1,0"))
         (rule "polySimp_pullOutFactor0" (formula "14") (term "0,1,0,0,1,0,0,1,1,0"))
         (rule "add_literals" (formula "14") (term "1,0,1,0,0,1,0,0,1,1,0"))
         (rule "times_zero_1" (formula "14") (term "0,1,0,0,1,0,0,1,1,0"))
         (rule "leq_literals" (formula "14") (term "1,0,0,1,0,0,1,1,0"))
          (builtin "One Step Simplification" (formula "14"))
         (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0,0,1,0,0,1,1,0"))
         (rule "add_literals" (formula "14") (term "1,1,0,0,0,1,0,0,1,1,0"))
         (rule "times_zero_1" (formula "14") (term "1,0,0,0,1,0,0,1,1,0"))
         (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,1,1,0"))
         (rule "qeq_literals" (formula "14") (term "0,0,1,0,0,1,1,0"))
          (builtin "One Step Simplification" (formula "14"))
         (rule "elimGcdLeq" (formula "14") (term "0,1,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
         (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0,1,0,0,0,0,1,1,0"))
         (rule "mul_literals" (formula "14") (term "0,0,0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
         (rule "sub_literals" (formula "14") (term "0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0,0,1,0,0,0,0,1,1,0"))
         (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
         (rule "add_literals" (formula "14") (term "1,1,0,0,0,0,1,0,0,0,0,1,1,0"))
         (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,1,0,0,0,0,1,1,0"))
         (rule "add_zero_right" (formula "14") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
         (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
         (rule "add_literals" (formula "14") (term "1,1,0,1,0,0,1,0,0,0,0,1,1,0"))
         (rule "times_zero_1" (formula "14") (term "1,0,1,0,0,1,0,0,0,0,1,1,0"))
         (rule "add_zero_right" (formula "14") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0,1,0,0,0,0,1,1,0"))
         (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0,1,0,0,0,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "14") (term "0,0,1,0,0,1,0,0,0,0,1,1,0"))
         (rule "mul_literals" (formula "14") (term "0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
         (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0,1,0,0,0,0,1,1,0"))
         (rule "add_literals" (formula "14") (term "0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
         (rule "polySimp_addAssoc" (formula "14") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
         (rule "polySimp_addComm1" (formula "14") (term "0,0,1,0,0,1,0,0,0,0,1,1,0"))
         (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
         (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
         (rule "add_literals" (formula "14") (term "1,1,0,1,0,0,1,0,0,0,0,1,1,0"))
         (rule "times_zero_1" (formula "14") (term "1,0,1,0,0,1,0,0,0,0,1,1,0"))
         (rule "add_literals" (formula "14") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
         (rule "qeq_literals" (formula "14") (term "1,0,0,1,0,0,0,0,1,1,0"))
          (builtin "One Step Simplification" (formula "14"))
         (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,1,0,0,0,0,1,1,0"))
         (rule "polySimp_addComm1" (formula "14") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
         (rule "add_literals" (formula "14") (term "0,0,0,0,0,1,0,0,0,0,1,1,0"))
         (rule "add_zero_left" (formula "14") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
         (rule "polySimp_pullOutFactor0" (formula "14") (term "0,0,0,1,0,0,0,0,1,1,0"))
         (rule "add_literals" (formula "14") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
         (rule "times_zero_1" (formula "14") (term "0,0,0,1,0,0,0,0,1,1,0"))
         (rule "leq_literals" (formula "14") (term "0,0,1,0,0,0,0,1,1,0"))
          (builtin "One Step Simplification" (formula "14"))
         (rule "elimGcdGeq" (formula "14") (term "1,1,0,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
         (rule "add_zero_right" (formula "14") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
         (rule "add_zero_right" (formula "14") (term "0,0,0,0,0,1,1,0,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,1,1,0,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0,1,1,0,0,0,1,1,0"))
         (rule "times_zero_1" (formula "14") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
         (rule "sub_literals" (formula "14") (term "0,0,0,0,0,0,1,1,0,0,0,1,1,0"))
         (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0,1,1,0,0,0,1,1,0"))
         (rule "add_zero_left" (formula "14") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
         (rule "add_zero_right" (formula "14") (term "0,0,0,0,0,1,1,0,0,0,1,1,0"))
         (rule "polySimp_pullOutFactor0" (formula "14") (term "0,1,0,1,1,0,0,0,1,1,0"))
         (rule "add_literals" (formula "14") (term "1,0,1,0,1,1,0,0,0,1,1,0"))
         (rule "times_zero_1" (formula "14") (term "0,1,0,1,1,0,0,0,1,1,0"))
         (rule "leq_literals" (formula "14") (term "1,0,1,1,0,0,0,1,1,0"))
          (builtin "One Step Simplification" (formula "14"))
         (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0,1,1,0,0,0,1,1,0"))
         (rule "add_literals" (formula "14") (term "1,1,0,0,1,1,0,0,0,1,1,0"))
         (rule "times_zero_1" (formula "14") (term "1,0,0,1,1,0,0,0,1,1,0"))
         (rule "add_literals" (formula "14") (term "0,0,1,1,0,0,0,1,1,0"))
         (rule "qeq_literals" (formula "14") (term "0,1,1,0,0,0,1,1,0"))
          (builtin "One Step Simplification" (formula "14"))
         (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "2"))
         (rule "polySimp_rightDist" (formula "8") (term "0,0"))
         (rule "mul_literals" (formula "8") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "8") (term "0"))
         (rule "add_literals" (formula "8") (term "0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "8"))
         (rule "polySimp_mulLiterals" (formula "8") (term "0"))
         (rule "polySimp_elimOne" (formula "8") (term "0"))
         (rule "nnf_imp2or" (formula "3") (term "1,0"))
         (rule "nnf_imp2or" (formula "4") (term "1,0,1,0"))
         (rule "nnf_imp2or" (formula "14") (term "0"))
         (rule "nnf_imp2or" (formula "15") (term "0"))
         (rule "nnf_imp2or" (formula "3") (term "0"))
         (rule "Static_class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "28"))
         (rule "notRight" (formula "28"))
         (rule "close" (formula "26") (ifseqformula "1"))
      )
   )
   (branch "Null Reference (tab = null)"
      (rule "false_right" (formula "31"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")))
      (rule "closeFalse" (formula "1"))
   )
)
(branch "Exceptional Post (maskNull)"
    (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "25")) (ifInst ""  (formula "25")))
    (builtin "One Step Simplification" (formula "26"))
   (rule "andLeft" (formula "21"))
   (rule "andLeft" (formula "21"))
   (rule "andLeft" (formula "23"))
   (rule "notLeft" (formula "21"))
   (rule "close" (formula "24") (ifseqformula "23"))
)
(branch "Pre (maskNull)"
    (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "24")) (ifInst ""  (formula "16")) (ifInst ""  (formula "24")) (ifInst ""  (formula "19")))
   (rule "inEqSimp_gtToGeq" (formula "13") (term "1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,1,0"))
   (rule "polySimp_addComm1" (formula "13") (term "0,1,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0,0,0,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,0,0,0,1,1,0"))
   (rule "polySimp_mulAssoc" (formula "14") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "14") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "14") (term "0,1,0,0,0,0,1,1,0"))
   (rule "polySimp_mulAssoc" (formula "14") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "14") (term "0,1,0,0,0,1,0,0,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "4") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0,1,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,1,0"))
   (rule "polySimp_addComm1" (formula "14") (term "0,1,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "14") (term "0,1,0,0,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,1,0,0,0,1,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "11"))
   (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
   (rule "polySimp_addComm1" (formula "11") (term "0"))
   (rule "inEqSimp_ltToLeq" (formula "3") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "4") (term "0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "5"))
   (rule "mul_literals" (formula "5") (term "1,0,0"))
   (rule "add_literals" (formula "5") (term "0,0"))
   (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "8"))
   (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
   (rule "polySimp_addComm1" (formula "8") (term "0"))
   (rule "inEqSimp_sepNegMonomial1" (formula "13") (term "1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,1,0"))
   (rule "polySimp_elimOne" (formula "13") (term "0,1,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,0,0,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0,0,1,1,0"))
   (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,0,0,0,1,1,0"))
   (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0,0,0,0,1,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,0,0,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,0,0,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,0,0,0,1,1,0"))
   (rule "mul_literals" (formula "14") (term "0,1,1,0,0,0,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,0,0,0,1,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,1,0,0,0,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "14") (term "1,0,1,0,0,0,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "14") (term "1,0,1,0,0,0,0,1,1,0"))
   (rule "mul_literals" (formula "14") (term "0,1,0,1,0,0,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,1,0,0,0,0,1,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0"))
   (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0"))
   (rule "mul_literals" (formula "4") (term "0,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,1,1,0"))
   (rule "mul_literals" (formula "13") (term "0,1,0,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,1,1,0"))
   (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,1,1,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0,1,0"))
   (rule "polySimp_elimOne" (formula "14") (term "0,1,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,1,0,0,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "14") (term "1,0,1,0,0,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "14") (term "1,0,1,0,0,0,1,1,0"))
   (rule "mul_literals" (formula "14") (term "0,1,0,1,0,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,1,0,0,0,1,1,0"))
   (rule "polySimp_elimOne" (formula "14") (term "1,1,0,1,0,0,0,1,1,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "11"))
   (rule "polySimp_mulLiterals" (formula "11") (term "0"))
   (rule "polySimp_elimOne" (formula "11") (term "0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
   (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
   (rule "mul_literals" (formula "3") (term "0,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
   (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
   (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,1,0"))
   (rule "mul_literals" (formula "4") (term "0,1,0,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "5"))
   (rule "mul_literals" (formula "5") (term "1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
   (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
   (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "8"))
   (rule "polySimp_mulLiterals" (formula "8") (term "0"))
   (rule "polySimp_elimOne" (formula "8") (term "0"))
   (rule "elimGcdLeq" (formula "14") (term "0,1,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
   (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0,0,1,0,0,0,0,1,1,0"))
   (rule "sub_literals" (formula "14") (term "0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
   (rule "mul_literals" (formula "14") (term "0,0,0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0,1,0,0,0,0,1,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
   (rule "add_literals" (formula "14") (term "1,1,0,1,0,0,1,0,0,0,0,1,1,0"))
   (rule "times_zero_1" (formula "14") (term "1,0,1,0,0,1,0,0,0,0,1,1,0"))
   (rule "add_zero_right" (formula "14") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
   (rule "add_literals" (formula "14") (term "1,1,0,0,0,0,1,0,0,0,0,1,1,0"))
   (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,1,0,0,0,0,1,1,0"))
   (rule "add_zero_right" (formula "14") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "14") (term "0,0,1,0,0,1,0,0,0,0,1,1,0"))
   (rule "mul_literals" (formula "14") (term "0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0,1,0,0,0,0,1,1,0"))
   (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0,1,0,0,0,0,1,1,0"))
   (rule "polySimp_addAssoc" (formula "14") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
   (rule "polySimp_addComm1" (formula "14") (term "0,0,1,0,0,1,0,0,0,0,1,1,0"))
   (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
   (rule "add_literals" (formula "14") (term "1,1,0,1,0,0,1,0,0,0,0,1,1,0"))
   (rule "times_zero_1" (formula "14") (term "1,0,1,0,0,1,0,0,0,0,1,1,0"))
   (rule "add_literals" (formula "14") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
   (rule "qeq_literals" (formula "14") (term "1,0,0,1,0,0,0,0,1,1,0"))
    (builtin "One Step Simplification" (formula "14"))
   (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
   (rule "add_literals" (formula "14") (term "0,0,0,0,0,1,0,0,0,0,1,1,0"))
   (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,1,0,0,0,0,1,1,0"))
   (rule "polySimp_addComm1" (formula "14") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
   (rule "add_literals" (formula "14") (term "0,0,0,0,0,1,0,0,0,0,1,1,0"))
   (rule "add_zero_left" (formula "14") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
   (rule "polySimp_pullOutFactor0" (formula "14") (term "0,0,0,1,0,0,0,0,1,1,0"))
   (rule "add_literals" (formula "14") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
   (rule "times_zero_1" (formula "14") (term "0,0,0,1,0,0,0,0,1,1,0"))
   (rule "leq_literals" (formula "14") (term "0,0,1,0,0,0,0,1,1,0"))
    (builtin "One Step Simplification" (formula "14"))
   (rule "elimGcdGeq" (formula "14") (term "0,1,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
   (rule "add_zero_right" (formula "14") (term "0,0,0,0,0,0,1,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0,0,1,0,0,1,1,0"))
   (rule "add_zero_right" (formula "14") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0,1,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0,0,0,1,0,0,1,1,0"))
   (rule "sub_literals" (formula "14") (term "0,0,0,0,0,0,0,1,0,0,1,1,0"))
   (rule "times_zero_1" (formula "14") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
   (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0,0,1,0,0,1,1,0"))
   (rule "add_zero_left" (formula "14") (term "0,0,1,0,0,1,0,0,1,1,0"))
   (rule "add_zero_right" (formula "14") (term "0,0,0,0,0,0,1,0,0,1,1,0"))
   (rule "polySimp_pullOutFactor0" (formula "14") (term "0,1,0,0,1,0,0,1,1,0"))
   (rule "add_literals" (formula "14") (term "1,0,1,0,0,1,0,0,1,1,0"))
   (rule "times_zero_1" (formula "14") (term "0,1,0,0,1,0,0,1,1,0"))
   (rule "leq_literals" (formula "14") (term "1,0,0,1,0,0,1,1,0"))
    (builtin "One Step Simplification" (formula "14"))
   (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0,0,1,0,0,1,1,0"))
   (rule "add_literals" (formula "14") (term "1,1,0,0,0,1,0,0,1,1,0"))
   (rule "times_zero_1" (formula "14") (term "1,0,0,0,1,0,0,1,1,0"))
   (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,1,1,0"))
   (rule "qeq_literals" (formula "14") (term "0,0,1,0,0,1,1,0"))
    (builtin "One Step Simplification" (formula "14"))
   (rule "elimGcdLeq" (formula "14") (term "1,0,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
   (rule "sub_literals" (formula "14") (term "0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0"))
   (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0,1,0,0,0,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,1,0,0,0,0,0,1,1,0"))
   (rule "mul_literals" (formula "14") (term "0,0,0,0,0,1,0,1,0,0,0,0,0,1,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
   (rule "add_literals" (formula "14") (term "1,1,0,0,0,1,0,0,0,0,0,1,1,0"))
   (rule "times_zero_1" (formula "14") (term "1,0,0,0,1,0,0,0,0,0,1,1,0"))
   (rule "add_zero_right" (formula "14") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
   (rule "add_literals" (formula "14") (term "1,1,0,1,0,1,0,0,0,0,0,1,1,0"))
   (rule "times_zero_1" (formula "14") (term "1,0,1,0,1,0,0,0,0,0,1,1,0"))
   (rule "add_zero_right" (formula "14") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,1,0,0,0,0,0,1,1,0"))
   (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,1,0,0,0,0,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "14") (term "0,0,1,0,1,0,0,0,0,0,1,1,0"))
   (rule "mul_literals" (formula "14") (term "0,0,0,1,0,1,0,0,0,0,0,1,1,0"))
   (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,1,0,0,0,0,0,1,1,0"))
   (rule "add_literals" (formula "14") (term "0,0,0,0,0,1,0,0,0,0,0,1,1,0"))
   (rule "polySimp_addAssoc" (formula "14") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
   (rule "polySimp_addComm1" (formula "14") (term "0,0,1,0,1,0,0,0,0,0,1,1,0"))
   (rule "add_literals" (formula "14") (term "0,0,0,1,0,1,0,0,0,0,0,1,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
   (rule "add_literals" (formula "14") (term "1,1,0,1,0,1,0,0,0,0,0,1,1,0"))
   (rule "times_zero_1" (formula "14") (term "1,0,1,0,1,0,0,0,0,0,1,1,0"))
   (rule "add_literals" (formula "14") (term "0,1,0,1,0,0,0,0,0,1,1,0"))
   (rule "qeq_literals" (formula "14") (term "1,0,1,0,0,0,0,0,1,1,0"))
    (builtin "One Step Simplification" (formula "14"))
   (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,0,0,0,1,1,0"))
   (rule "polySimp_addComm1" (formula "14") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
   (rule "add_literals" (formula "14") (term "0,0,0,0,1,0,0,0,0,0,1,1,0"))
   (rule "add_zero_left" (formula "14") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
   (rule "polySimp_pullOutFactor0" (formula "14") (term "0,0,1,0,0,0,0,0,1,1,0"))
   (rule "add_literals" (formula "14") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
   (rule "times_zero_1" (formula "14") (term "0,0,1,0,0,0,0,0,1,1,0"))
   (rule "leq_literals" (formula "14") (term "0,1,0,0,0,0,0,1,1,0"))
    (builtin "One Step Simplification" (formula "14"))
   (rule "elimGcdGeq" (formula "14") (term "1,1,0,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
   (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0,1,1,0,0,0,1,1,0"))
   (rule "add_zero_right" (formula "14") (term "0,0,0,0,0,1,1,0,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,1,1,0,0,0,1,1,0"))
   (rule "add_zero_right" (formula "14") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
   (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0,1,1,0,0,0,1,1,0"))
   (rule "sub_literals" (formula "14") (term "0,0,0,0,0,0,1,1,0,0,0,1,1,0"))
   (rule "times_zero_1" (formula "14") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
   (rule "add_literals" (formula "14") (term "0,0,0,0,0,1,1,0,0,0,1,1,0"))
   (rule "add_zero_left" (formula "14") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0,0,1,1,0,0,0,1,1,0"))
   (rule "add_literals" (formula "14") (term "1,1,0,0,0,1,1,0,0,0,1,1,0"))
   (rule "times_zero_1" (formula "14") (term "1,0,0,0,1,1,0,0,0,1,1,0"))
   (rule "add_zero_right" (formula "14") (term "0,0,0,1,1,0,0,0,1,1,0"))
   (rule "qeq_literals" (formula "14") (term "0,0,1,1,0,0,0,1,1,0"))
    (builtin "One Step Simplification" (formula "14"))
   (rule "polySimp_pullOutFactor0" (formula "14") (term "0,0,1,1,0,0,0,1,1,0"))
   (rule "add_literals" (formula "14") (term "1,0,0,1,1,0,0,0,1,1,0"))
   (rule "times_zero_1" (formula "14") (term "0,0,1,1,0,0,0,1,1,0"))
   (rule "leq_literals" (formula "14") (term "0,1,1,0,0,0,1,1,0"))
    (builtin "One Step Simplification" (formula "14"))
   (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "2"))
   (rule "polySimp_rightDist" (formula "8") (term "0,0"))
   (rule "mul_literals" (formula "8") (term "0,0,0"))
   (rule "polySimp_addComm1" (formula "8") (term "0"))
   (rule "add_literals" (formula "8") (term "0,0"))
   (rule "inEqSimp_sepNegMonomial1" (formula "8"))
   (rule "polySimp_mulLiterals" (formula "8") (term "0"))
   (rule "polySimp_elimOne" (formula "8") (term "0"))
   (rule "nnf_imp2or" (formula "3") (term "1,0"))
   (rule "nnf_imp2or" (formula "4") (term "1,0,1,0"))
   (rule "nnf_imp2or" (formula "14") (term "1,0"))
   (rule "nnf_imp2or" (formula "15") (term "0"))
   (rule "nnf_imp2or" (formula "3") (term "0"))
   (rule "nnf_imp2or" (formula "4") (term "0"))
   (rule "Static_class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "26"))
   (rule "notRight" (formula "26"))
   (rule "close" (formula "24") (ifseqformula "1"))
)
)
}
