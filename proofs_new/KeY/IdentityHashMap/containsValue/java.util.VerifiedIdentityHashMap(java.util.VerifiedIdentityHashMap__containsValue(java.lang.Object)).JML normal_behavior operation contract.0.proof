\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Mon Oct 18 21:02:41 CEST 2021
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:javaSemantics , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly , javaLoopTreatment-javaLoopTreatment\\:efficient
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_NONE
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=600
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_DELAYED
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_ON
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_OFF
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\bootclasspath "../../../../jre";

\javaSource "../../../../src";

\include "../../../../functions.key";

\proofObligation "#Proof Obligation Settings
#Mon Oct 18 21:02:41 CEST 2021
contract=java.util.VerifiedIdentityHashMap[java.util.VerifiedIdentityHashMap\\:\\:containsValue(java.lang.Object)].JML normal_behavior operation contract.0
name=java.util.VerifiedIdentityHashMap[java.util.VerifiedIdentityHashMap\\:\\:containsValue(java.lang.Object)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "martindeboer" ) (keyVersion "40b2d39292"))

(autoModeTime "128")

(branch "dummy ID"
(rule "impRight" (formula "1") (newnames "value,self,result,exc,heapAtPre,o,f"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "4"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "9") (term "0,0,0,0,1"))
(rule "eqSymm" (formula "9") (term "0,0,1,0,1"))
(rule "replace_known_right" (formula "4") (term "0") (ifseqformula "8"))
(rule "concrete_or_2" (formula "4"))
(rule "polySimp_addComm0" (formula "9") (term "0,2,0,1,1,0,0,0,0,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,0,0,0,0,0,0,1"))
(rule "assignment" (formula "9") (term "1"))
(rule "sequentialToParallel2" (formula "9"))
(rule "simplifyUpdate3" (formula "9") (term "1,0"))
(rule "methodBodyExpand" (formula "9") (term "1") (newnames "heapBefore_containsValue,savedHeapBefore_containsValue,_valueBefore_containsValue"))
(rule "simplifyUpdate2" (formula "9") (term "1"))
(rule "variableDeclarationAssign" (formula "9") (term "1"))
(rule "variableDeclaration" (formula "9") (term "1") (newnames "tab"))
(rule "assignment_read_attribute_this" (formula "9"))
(rule "sequentialToParallel2" (formula "9"))
(rule "simplifyUpdate3" (formula "9") (term "1,0"))
(rule "for_to_while" (formula "9") (term "1") (inst "#outerLabel=_label1") (inst "#innerLabel=_label0"))
(rule "variableDeclarationAssign" (formula "9") (term "1"))
(rule "variableDeclaration" (formula "9") (term "1") (newnames "i"))
(rule "assignment" (formula "9") (term "1"))
(rule "sequentialToParallel2" (formula "9"))
(rule "simplifyUpdate3" (formula "9") (term "1,0"))
(rule "elim_double_block_3" (formula "9") (term "1"))
(rule "onlyCreatedObjectsAreReferenced" (formula "9") (term "0,1,0,0") (ifseqformula "1"))
(rule "Partial_inv_axiom_for_JML_class_invariant_nr_35_in_VerifiedIdentityHashMap" (formula "7"))
(rule "translateJavaBitwiseAndInt" (formula "7") (term "0"))
(rule "translateJavaSubInt" (formula "7") (term "1,0"))
(rule "andJIntDef" (formula "7") (term "0"))
(rule "arrayLengthIsAShort" (formula "7") (term "0,0,0"))
(rule "arrayLengthNotNegative" (formula "8") (term "0,1,0,0"))
(rule "Partial_inv_axiom_for_JML_class_invariant_nr_31_in_VerifiedIdentityHashMap" (formula "10") (inst "i=i_1"))
(rule "translateJavaAddInt" (formula "10") (term "0,2,0,1,1,0"))
(rule "translateJavaMulInt" (formula "10") (term "0,2,0,0,1,0"))
(rule "translateJavaDivInt" (formula "10") (term "1,1,0,0,0"))
(rule "translateJavaMulInt" (formula "10") (term "0,0,2,0,1,1,0"))
(rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,0"))
(rule "commute_and_2" (formula "10") (term "0,0"))
(rule "commute_and" (formula "10") (term "0,0,0"))
(rule "commute_and_2" (formula "10") (term "0,0"))
(rule "Partial_inv_axiom_for_JML_class_invariant_nr_25_in_VerifiedIdentityHashMap" (formula "11"))
(rule "insert_constant_value" (formula "11") (term "0,1,1,1"))
(rule "andLeft" (formula "11"))
(rule "translateJavaSubInt" (formula "12") (term "1,1"))
(rule "eqSymm" (formula "12") (term "0"))
(rule "inEqSimp_commuteLeq" (formula "11"))
(rule "Partial_inv_axiom_for_JML_class_invariant_nr_43_in_VerifiedIdentityHashMap" (formula "13"))
(rule "insert_constant_value" (formula "13") (term "0,1,1,1"))
(rule "andLeft" (formula "13"))
(rule "translateJavaSubInt" (formula "14") (term "1,1"))
(rule "eqSymm" (formula "14") (term "0"))
(rule "inEqSimp_commuteLeq" (formula "13"))
(rule "Partial_inv_axiom_for_JML_class_invariant_nr_33_in_VerifiedIdentityHashMap" (formula "13") (inst "i=i_1") (inst "j=j"))
(rule "translateJavaMulInt" (formula "13") (term "0,2,0,0,0,0,1,0,1,0"))
(rule "eqSymm" (formula "13") (term "1,1,0,1,0"))
(rule "eqSymm" (formula "13") (term "1,0,1,0,1,0"))
(rule "translateJavaDivInt" (formula "13") (term "1,1,0,0,0,1,0"))
(rule "translateJavaDivInt" (formula "13") (term "1,1,0,0,0"))
(rule "translateJavaMulInt" (formula "13") (term "0,2,0,1,0,1,0,1,0"))
(rule "translateJavaMulInt" (formula "13") (term "0,2,1,1,0,1,0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,0,1,0"))
(rule "commute_and_2" (formula "13") (term "0,0"))
(rule "commute_and" (formula "13") (term "0,0,0"))
(rule "commute_and_2" (formula "13") (term "0,0"))
(rule "commute_and_2" (formula "13") (term "0,0,1,0"))
(rule "commute_and" (formula "13") (term "0,0,0,1,0"))
(rule "commute_and_2" (formula "13") (term "0,0,1,0"))
(rule "Partial_inv_axiom_for_JML_class_invariant_nr_45_in_VerifiedIdentityHashMap" (formula "14"))
(rule "insert_constant_value" (formula "14") (term "0,1,1,0"))
(rule "insert_constant_value" (formula "14") (term "1,1,0,1"))
(rule "andLeft" (formula "14"))
(rule "translateJavaDivInt" (formula "14") (term "1,0"))
(rule "translateJavaDivInt" (formula "15") (term "1,1"))
(rule "translateJavaMulInt" (formula "15") (term "1,0"))
(rule "translateJavaSubInt" (formula "14") (term "1,1"))
(rule "commute_or" (formula "14"))
(rule "Partial_inv_axiom_for_JML_class_invariant_nr_41_in_VerifiedIdentityHashMap" (formula "16") (inst "i=i_1") (inst "j=j"))
(rule "translateJavaMulInt" (formula "16") (term "0,2,1,1,1,0,1,0"))
(rule "translateJavaMulInt" (formula "16") (term "0,1,0,1,0"))
(rule "translateJavaMulInt" (formula "16") (term "0,2,0,0,1,0,1,1,0"))
(rule "translateJavaDivInt" (formula "16") (term "0,0,0,0,0,1,1,0"))
(rule "translateJavaMulInt" (formula "16") (term "0,2,0,0,0,0,1,0"))
(rule "translateJavaDivInt" (formula "16") (term "1,1,0,0,0"))
(rule "translateJavaMulInt" (formula "16") (term "0,2,1,0,0,0,0,0,0,1,1,0"))
(rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0,0,1,1,0"))
(rule "commute_and_2" (formula "16") (term "0,0"))
(rule "commute_and" (formula "16") (term "0,0,0"))
(rule "commute_and_2" (formula "16") (term "0,0"))
(rule "commute_and_2" (formula "16") (term "0,0,1,1,0"))
(rule "commute_and" (formula "16") (term "0,0,0,1,1,0"))
(rule "commute_and_2" (formula "16") (term "0,0,1,1,0"))
(rule "Partial_inv_axiom_for_JML_class_invariant_nr_29_in_VerifiedIdentityHashMap" (formula "17"))
(rule "insert_constant_value" (formula "17") (term "0,1"))
(rule "insert_constant_value" (formula "17") (term "0,1,0"))
(rule "insert_constant_value" (formula "17") (term "0,1,0,0"))
(rule "eqClose" (formula "17") (term "1,0,0"))
(rule "concrete_and_3" (formula "17") (term "0,0"))
(rule "equal_literals" (formula "17") (term "1"))
(rule "concrete_and_4" (formula "17"))
(rule "closeFalse" (formula "17"))
)
}
